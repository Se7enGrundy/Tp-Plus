#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module TPPlus
  class Parser < Racc::Parser


  include TPPlus::Nodes

  attr_reader :interpreter
  def initialize(scanner, interpreter = TPPlus::Interpreter.new)
    @scanner       = scanner
    @interpreter   = interpreter
    super()
  end

  def next_token
    t = @scanner.next_token
    @interpreter.line_count += 1 if t && t[0] == :NEWLINE

    puts t.inspect
    t
  end

  def parse
    do_parse
    @interpreter
  rescue Racc::ParseError => e
    raise "Parse error on line #{@interpreter.line_count+1}: #{e}"
  end
##### State transition tables begin ###

racc_action_table = [
    48,    26,    28,    21,    20,    20,   138,    26,    28,    21,
    20,   163,   115,    25,   163,    26,    28,    21,    20,    25,
    29,    28,   113,    19,   170,   164,    29,    25,   164,    19,
    36,    35,    38,   117,    29,    71,    72,    19,    28,    29,
    22,    73,    28,    23,    16,    17,    22,    18,    47,    23,
    16,    17,   117,    18,    22,   154,    29,    23,    16,    17,
    29,    18,    26,    28,    21,    20,   -38,   119,    26,   -38,
    21,    20,    53,   112,    25,    54,    26,    28,    21,    20,
    25,    29,   -37,    57,    19,   -37,   -36,   111,    25,   -36,
    19,    58,    59,   109,   110,    29,    36,    35,    19,   105,
   104,    22,   102,   123,    23,    16,    17,    22,    18,   124,
    23,    16,    17,   125,    18,    22,   126,   127,    23,    16,
    17,   128,    18,    65,    66,    69,    70,    67,    68,    71,
    72,    95,   147,   130,   131,    73,   144,   145,   146,    75,
    76,    77,    79,   132,    78,    75,    76,    77,    79,   133,
    78,    94,    92,    93,    90,   134,    91,    36,    35,    38,
    36,    35,    38,    36,    35,    38,    36,    35,    38,    36,
    35,    38,    36,    35,    38,    36,    35,    38,    36,    35,
    38,    36,    35,    38,    36,    35,    38,    36,    35,    38,
    36,    35,    38,    36,    35,    38,    36,    35,    38,    36,
    35,    38,    36,    35,    38,   135,   136,    38,   114,   141,
   141,   102,    62,   148,   149,   150,   151,    60,    56,    38,
    55,   161,    50,   165,   166,   167,   168,    38,    31,    47,
   174 ]

racc_action_check = [
    19,    51,    51,    51,    51,   168,   137,    52,    52,    52,
    52,   153,    94,    51,   165,     4,     4,     4,     4,    52,
    51,    33,    92,    51,   168,   153,    52,     4,   165,    52,
   148,   148,   148,    97,     4,   106,   106,     4,    96,    33,
    51,   106,     2,    51,    51,    51,    52,    51,    19,    52,
    52,    52,    98,    52,     4,   148,    96,     4,     4,     4,
     2,     4,     0,     0,     0,     0,     9,   101,    32,     9,
    32,    32,    24,    91,     0,    24,   117,   117,   117,   117,
    32,     0,     6,    27,     0,     6,     8,    90,   117,     8,
    32,    27,    27,    80,    80,   117,    16,    16,   117,    59,
    58,     0,    55,   111,     0,     0,     0,    32,     0,   112,
    32,    32,    32,   113,    32,   117,   114,   115,   117,   117,
   117,   116,   117,    39,    39,    39,    39,    39,    39,    39,
    39,    50,   143,   118,   119,    39,   143,   143,   143,    40,
    40,    40,    40,   123,    40,   107,   107,   107,   107,   124,
   107,    48,    48,    48,    48,   125,    48,   110,   110,   110,
   151,   151,   151,   149,   149,   149,    17,    17,    17,    18,
    18,    18,    53,    53,    53,    54,    54,    54,    47,    47,
    47,    57,    57,    57,   105,   105,   105,    22,    22,    22,
    63,    63,    63,    64,    64,    64,    74,    74,    74,   104,
   104,   104,    23,    23,    23,   126,   127,   131,    93,   138,
   139,   141,    34,   144,   145,   146,   147,    31,    26,   150,
    25,   152,    21,   155,   156,   157,   158,    20,     1,   170,
   171 ]

racc_action_pointer = [
    59,   228,    38,   nil,    12,   nil,    40,   nil,    44,    24,
   nil,   nil,   nil,   nil,   nil,   nil,    73,   143,   146,    -2,
   202,   219,   164,   179,    30,   204,   193,    57,   nil,   nil,
   nil,   217,    65,    17,   187,   nil,   nil,   nil,   nil,    95,
   103,   nil,   nil,   nil,   nil,   nil,   nil,   155,   143,   nil,
   106,    -2,     4,   149,   152,    80,   nil,   158,    74,    73,
   nil,   nil,   nil,   167,   170,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   173,   nil,   nil,   nil,   nil,   nil,
    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    34,    20,   -31,   155,   -41,   nil,    34,   -10,     9,   nil,
   nil,    50,   nil,   nil,   176,   161,     1,   109,   nil,   nil,
   134,    79,    85,    89,    92,    93,    77,    73,    89,    84,
   nil,   nil,   nil,    89,    95,   101,   151,   152,   nil,   nil,
   nil,   182,   nil,   nil,   nil,   nil,   nil,   -45,   193,   194,
   nil,   189,   nil,   118,   163,   164,   165,   166,     7,   140,
   194,   137,   170,   -16,   nil,   171,   173,   174,   174,   nil,
   nil,   nil,   nil,   nil,   nil,   -13,   nil,   nil,    -1,   nil,
   179,   179,   nil,   nil,   nil ]

racc_action_default = [
    -1,  -104,    -2,    -3,    -7,   -10,   -11,   -12,   -13,   -14,
   -15,   -16,   -17,   -18,   -19,   -20,  -104,  -104,  -104,   -64,
  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -104,   -99,  -100,
  -101,  -104,    -5,    -6,  -104,   -87,   -88,   -22,   -64,   -65,
   -67,   -69,   -85,   -86,   -23,   -48,   -49,   -27,  -104,   -30,
  -104,    -8,    -8,  -104,  -104,  -103,   -59,  -104,  -104,  -104,
   175,    -4,   -21,  -104,  -104,   -71,   -72,   -73,   -74,   -75,
   -76,   -77,   -78,   -79,  -104,   -80,   -81,   -82,   -83,   -84,
  -104,   -25,   -28,   -29,   -60,   -89,   -90,   -91,   -92,   -93,
  -104,  -104,  -104,  -104,  -104,   -31,    -9,   -40,   -40,   -34,
   -35,  -104,  -102,   -61,  -104,  -104,   -66,   -68,   -70,   -24,
  -104,  -104,  -104,  -104,  -104,  -104,  -104,    -8,  -104,  -104,
   -62,   -63,   -26,  -104,  -104,  -104,  -104,  -104,   -32,   -39,
   -33,  -104,   -94,   -95,   -96,   -97,   -98,  -104,  -104,   -41,
   -42,  -103,   -43,  -104,  -104,  -104,  -104,  -104,  -104,  -104,
  -104,  -104,  -104,  -104,   -55,  -104,  -104,  -104,  -104,   -52,
   -53,   -44,   -54,   -57,   -58,  -104,   -45,   -46,  -104,   -56,
  -104,  -104,   -50,   -51,   -47 ]

racc_goto_table = [
    27,    44,    32,    34,    27,    45,    37,    97,    98,   101,
   162,    51,    52,    81,   139,     2,   140,   142,    46,    33,
    49,   172,   169,   116,   118,   173,    80,    61,   152,   158,
   171,     1,    27,    32,    82,    84,   106,    63,   107,   108,
    85,    86,    99,   100,    87,    88,   103,    83,    89,   nil,
   nil,    27,    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   129,   nil,   nil,   122,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   120,   121,   143,    32,    82,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    83,   nil,   nil,   nil,   nil,   nil,   nil,    27,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   137,   156,   nil,   nil,   153,    45,   nil,   160,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   155,    46,
   157,   159 ]

racc_goto_check = [
    22,    19,     4,    17,    22,    17,    18,     5,     5,    25,
    31,    18,    18,    21,    26,     2,    27,    27,    22,     2,
    22,    14,    31,    23,    23,    10,    20,     3,    28,    29,
    30,     1,    22,     4,    17,    32,    33,    34,    35,    37,
    39,    40,    18,    18,    41,    42,    18,    22,    43,   nil,
   nil,    22,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     5,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    18,    18,    25,     4,    17,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    22,   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    22,    19,   nil,   nil,    17,    17,   nil,    17,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,    22,
    22,    22 ]

racc_goto_pointer = [
   nil,    31,    15,    -5,     0,   -44,   nil,   nil,   nil,   nil,
  -143,   nil,   nil,   nil,  -147,   nil,   nil,   -13,   -11,   -17,
   -21,   -34,     0,   -74,   nil,   -46,  -124,  -122,  -120,  -122,
  -138,  -143,   -13,   -27,    -2,   -26,   nil,   -35,   nil,    -8,
    -7,    -4,    -3,     0,   nil ]

racc_goto_default = [
   nil,   nil,    96,     3,     4,   nil,     5,     6,     7,     8,
     9,    10,    11,    12,    13,    14,    15,    42,   nil,   nil,
   nil,   nil,    43,   nil,    24,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    39,   nil,    40,    64,    41,    74,   nil,
   nil,   nil,   nil,   nil,    30 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 56, :_reduce_none,
  1, 56, :_reduce_2,
  1, 57, :_reduce_3,
  3, 57, :_reduce_4,
  2, 57, :_reduce_5,
  2, 57, :_reduce_6,
  1, 57, :_reduce_7,
  0, 60, :_reduce_none,
  1, 60, :_reduce_9,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  3, 71, :_reduce_21,
  2, 71, :_reduce_22,
  2, 70, :_reduce_23,
  4, 69, :_reduce_24,
  1, 75, :_reduce_25,
  3, 75, :_reduce_26,
  0, 75, :_reduce_27,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  2, 65, :_reduce_30,
  3, 64, :_reduce_31,
  5, 67, :_reduce_32,
  5, 67, :_reduce_33,
  3, 68, :_reduce_34,
  3, 68, :_reduce_35,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  2, 78, :_reduce_39,
  0, 78, :_reduce_none,
  8, 63, :_reduce_41,
  1, 81, :_reduce_42,
  2, 81, :_reduce_43,
  6, 82, :_reduce_44,
  6, 82, :_reduce_45,
  6, 82, :_reduce_46,
  8, 82, :_reduce_47,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  2, 83, :_reduce_54,
  1, 83, :_reduce_55,
  3, 83, :_reduce_56,
  1, 86, :_reduce_57,
  1, 86, :_reduce_58,
  2, 66, :_reduce_59,
  3, 61, :_reduce_60,
  3, 62, :_reduce_61,
  4, 62, :_reduce_62,
  4, 62, :_reduce_63,
  1, 77, :_reduce_64,
  1, 73, :_reduce_65,
  3, 73, :_reduce_66,
  1, 88, :_reduce_67,
  3, 88, :_reduce_68,
  1, 90, :_reduce_none,
  3, 90, :_reduce_70,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 91, :_reduce_none,
  1, 91, :_reduce_none,
  1, 91, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 92, :_reduce_none,
  1, 92, :_reduce_none,
  1, 72, :_reduce_87,
  1, 72, :_reduce_88,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  4, 98, :_reduce_94,
  4, 97, :_reduce_95,
  4, 94, :_reduce_96,
  4, 96, :_reduce_97,
  4, 95, :_reduce_98,
  1, 99, :_reduce_99,
  1, 59, :_reduce_100,
  1, 59, :_reduce_101,
  1, 80, :_reduce_102,
  0, 80, :_reduce_none ]

racc_reduce_n = 104

racc_shift_n = 175

racc_token_table = {
  false => 0,
  :error => 1,
  :ASSIGN => 2,
  :AT_SYM => 3,
  :COMMENT => 4,
  :JUMP => 5,
  :IO_METHOD => 6,
  :INPUT => 7,
  :OUTPUT => 8,
  :NUMREG => 9,
  :POSREG => 10,
  :VREG => 11,
  :SREG => 12,
  :POSITION => 13,
  :TIME_SEGMENT => 14,
  :MOVE => 15,
  :DOT => 16,
  :TO => 17,
  :AT => 18,
  :TERM => 19,
  :OFFSET => 20,
  :SEMICOLON => 21,
  :NEWLINE => 22,
  :REAL => 23,
  :DIGIT => 24,
  :WORD => 25,
  :EQUAL => 26,
  :UNITS => 27,
  :EEQUAL => 28,
  :NOTEQUAL => 29,
  :GTE => 30,
  :LTE => 31,
  :LT => 32,
  :GT => 33,
  :PLUS => 34,
  :MINUS => 35,
  :STAR => 36,
  :SLASH => 37,
  :DIV => 38,
  :AND => 39,
  :OR => 40,
  :MOD => 41,
  :IF => 42,
  :ELSE => 43,
  :END => 44,
  :UNLESS => 45,
  :WAIT_FOR => 46,
  :WAIT_UNTIL => 47,
  :MAX_SPEED => 48,
  :FANUC_USE => 49,
  "(" => 50,
  ")" => 51,
  "," => 52,
  "[" => 53,
  "]" => 54 }

racc_nt_base = 55

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ASSIGN",
  "AT_SYM",
  "COMMENT",
  "JUMP",
  "IO_METHOD",
  "INPUT",
  "OUTPUT",
  "NUMREG",
  "POSREG",
  "VREG",
  "SREG",
  "POSITION",
  "TIME_SEGMENT",
  "MOVE",
  "DOT",
  "TO",
  "AT",
  "TERM",
  "OFFSET",
  "SEMICOLON",
  "NEWLINE",
  "REAL",
  "DIGIT",
  "WORD",
  "EQUAL",
  "UNITS",
  "EEQUAL",
  "NOTEQUAL",
  "GTE",
  "LTE",
  "LT",
  "GT",
  "PLUS",
  "MINUS",
  "STAR",
  "SLASH",
  "DIV",
  "AND",
  "OR",
  "MOD",
  "IF",
  "ELSE",
  "END",
  "UNLESS",
  "WAIT_FOR",
  "WAIT_UNTIL",
  "MAX_SPEED",
  "FANUC_USE",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "program",
  "statements",
  "statement",
  "terminator",
  "block",
  "definition",
  "assignment",
  "motion_statement",
  "jump",
  "io_method",
  "label_definition",
  "conditional",
  "inline_conditional",
  "program_call",
  "use_statement",
  "wait_statement",
  "number",
  "expression",
  "indirectable",
  "args",
  "arg",
  "var",
  "else_block",
  "inlineable",
  "swallow_newlines",
  "motion_modifiers",
  "motion_modifier",
  "speed",
  "time",
  "time_seg_actions",
  "units",
  "definable",
  "simple_expression",
  "relop",
  "term",
  "addop",
  "factor",
  "mulop",
  "numreg",
  "output",
  "posreg",
  "position",
  "vreg",
  "comment" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 @interpreter.nodes = val[0].flatten 
    result
end

def _reduce_3(val, _values, result)
 result = val 
    result
end

def _reduce_4(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_5(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_6(val, _values, result)
 result = [val[0]] << val[1] 
    result
end

def _reduce_7(val, _values, result)
 result = [val[0]] 
    result
end

# reduce 8 omitted

def _reduce_9(val, _values, result)
 result = val[0] 
    result
end

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

def _reduce_21(val, _values, result)
 result = WaitForNode.new(val[1], val[2]) 
    result
end

def _reduce_22(val, _values, result)
 result = WaitUntilNode.new(val[1]) 
    result
end

def _reduce_23(val, _values, result)
 result = UseNode.new(val[0],val[1]) 
    result
end

def _reduce_24(val, _values, result)
 result = CallNode.new(val[0],val[2]) 
    result
end

def _reduce_25(val, _values, result)
 result = [val[0]] 
    result
end

def _reduce_26(val, _values, result)
 result = val[0] << val[2] 
    result
end

def _reduce_27(val, _values, result)
 result = [] 
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
 result = IOMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_31(val, _values, result)
 result = JumpNode.new(val[2]) 
    result
end

def _reduce_32(val, _values, result)
 result = ConditionalNode.new("if",val[1],val[2],val[3]) 
    result
end

def _reduce_33(val, _values, result)
 result = ConditionalNode.new("unless",val[1],val[2],val[3]) 
    result
end

def _reduce_34(val, _values, result)
 result = InlineConditionalNode.new("if",val[2],val[0]) 
    result
end

def _reduce_35(val, _values, result)
 result = InlineConditionalNode.new("unless",val[2],val[0]) 
    result
end

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
 result = val[1] 
    result
end

# reduce 40 omitted

def _reduce_41(val, _values, result)
 result = MotionNode.new(val[0],val[5],val[7]) 
    result
end

def _reduce_42(val, _values, result)
 result = val 
    result
end

def _reduce_43(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_44(val, _values, result)
 result = SpeedNode.new(val[4]) 
    result
end

def _reduce_45(val, _values, result)
 result = TerminationNode.new(val[4]) 
    result
end

def _reduce_46(val, _values, result)
 result = OffsetNode.new(val[4]) 
    result
end

def _reduce_47(val, _values, result)
 result = TimeNode.new(val[2],val[4],val[6]) 
    result
end

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

def _reduce_54(val, _values, result)
 result = [val[0],val[1]] 
    result
end

def _reduce_55(val, _values, result)
 result = [:max_speed,:max_speed] 
    result
end

def _reduce_56(val, _values, result)
 result = [val[0],val[2]] 
    result
end

def _reduce_57(val, _values, result)
 result = UnitsNode.new(val[0]) 
    result
end

def _reduce_58(val, _values, result)
 result = UnitsNode.new(val[0]) 
    result
end

def _reduce_59(val, _values, result)
 result = LabelDefinitionNode.new(val[1]) 
    result
end

def _reduce_60(val, _values, result)
 result = DefinitionNode.new(val[0],val[2]) 
    result
end

def _reduce_61(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_62(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_63(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_64(val, _values, result)
 result = VarNode.new(val[0]) 
    result
end

def _reduce_65(val, _values, result)
 result = val[0] 
    result
end

def _reduce_66(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_67(val, _values, result)
 result = val[0] 
    result
end

def _reduce_68(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 69 omitted

def _reduce_70(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

def _reduce_87(val, _values, result)
 result = DigitNode.new(val[0]) 
    result
end

def _reduce_88(val, _values, result)
 result = RealNode.new(val[0]) 
    result
end

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

def _reduce_94(val, _values, result)
 result = VisionRegisterNode.new(val[2].to_i) 
    result
end

def _reduce_95(val, _values, result)
 result = PositionNode.new(val[2].to_i) 
    result
end

def _reduce_96(val, _values, result)
 result = NumregNode.new(val[2].to_i) 
    result
end

def _reduce_97(val, _values, result)
 result = PosregNode.new(val[2].to_i) 
    result
end

def _reduce_98(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_99(val, _values, result)
 result = CommentNode.new(val[0]) 
    result
end

def _reduce_100(val, _values, result)
 result = TerminatorNode.new 
    result
end

def _reduce_101(val, _values, result)
 result = val[0] 
    result
end

def _reduce_102(val, _values, result)
 result = TerminatorNode.new 
    result
end

# reduce 103 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module TPPlus
