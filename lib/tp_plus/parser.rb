#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module TPPlus
  class Parser < Racc::Parser


  include TPPlus::Nodes

  attr_reader :interpreter
  def initialize(scanner, interpreter = TPPlus::Interpreter.new)
    @scanner       = scanner
    @interpreter   = interpreter
    super()
  end

  def next_token
    t = @scanner.next_token
    @interpreter.line_count += 1 if t == [:NEWLINE,"\n"]

    puts t.inspect
    t
  end

  def parse
    do_parse
    @interpreter
  rescue Racc::ParseError => e
    raise "Parse error on line #{@interpreter.line_count+1}: #{e}"
  end
##### State transition tables begin ###

racc_action_table = [
    16,     5,    10,     9,    16,     5,    10,     9,    92,    37,
    15,    70,    68,    69,    15,    42,    19,    38,    39,    17,
    19,    32,    24,    17,    72,    16,     5,    10,     9,    32,
    24,    16,     5,    10,     9,    15,    13,    32,    24,    14,
    13,    15,    73,    14,    17,    53,    54,    19,    32,    24,
    17,    55,    16,     5,    10,     9,    16,     5,    10,     9,
    19,    13,    15,    75,    14,    19,    15,    13,    19,    40,
    14,    17,    19,    32,    24,    17,    36,    47,    48,    51,
    52,    49,    50,    53,    54,    32,    24,    75,    13,    55,
    80,    14,    13,    32,    24,    14,    57,    58,    59,    61,
    81,    60,    57,    58,    59,    61,    82,    60,   101,   102,
    32,    24,    83,    35,    34,    86,    25,    24,    19,    88,
    24,    90,    91,    63,    93,    94,    95,    96,    99,    99,
    20,   103,   104,    32,    32,   108,   109,   110 ]

racc_action_check = [
     0,     0,     0,     0,    33,    33,    33,    33,    83,    18,
     0,    36,    36,    36,    33,    25,     0,    18,    18,     0,
    33,    46,    46,    33,    38,    21,    21,    21,    21,    72,
    72,     4,     4,     4,     4,    21,     0,    45,    45,     0,
    33,     4,    39,    33,    21,    76,    76,     4,    37,    37,
     4,    76,    26,    26,    26,    26,    75,    75,    75,    75,
    43,    21,    26,    44,    21,    22,    75,     4,    26,    20,
     4,    26,    75,    73,    73,    75,    17,    27,    27,    27,
    27,    27,    27,    27,    27,    14,    14,    62,    26,    27,
    63,    26,    75,    13,    13,    75,    77,    77,    77,    77,
    68,    77,    28,    28,    28,    28,    69,    28,    99,    99,
    56,    56,    70,    16,    15,    74,    10,     9,     2,    79,
    80,    81,    82,    34,    89,    90,    91,    92,    93,    97,
     1,   101,   102,   103,   104,   105,   106,   107 ]

racc_action_pointer = [
    -3,   130,    99,   nil,    28,   nil,   nil,   nil,   nil,    95,
   113,   nil,   nil,    72,    64,   100,    91,    74,   -14,   nil,
    69,    22,    46,   nil,   nil,    -7,    49,    52,    69,   nil,
   nil,   nil,   nil,     1,   108,   nil,     3,    27,     1,    19,
   nil,   nil,   nil,    41,    23,    16,     0,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    89,   nil,   nil,   nil,
   nil,   nil,    47,    47,   nil,   nil,   nil,   nil,    55,    61,
    67,   nil,     8,    52,    74,    53,    14,    63,   nil,    78,
    98,   100,   101,   -13,   nil,   nil,   nil,   nil,   nil,    80,
    79,    80,    81,   114,   nil,   nil,   nil,   115,   nil,    92,
   nil,    88,    89,   112,   113,    91,   112,    93,   nil,   nil,
   nil ]

racc_action_default = [
    -1,   -64,    -2,    -3,    -7,   -10,   -11,   -12,   -13,   -64,
   -64,   -16,   -17,   -64,   -64,   -64,   -64,   -33,   -64,   -63,
   -64,    -5,    -6,   -14,   -33,   -64,    -8,   -34,   -36,   -38,
   -54,   -55,   -56,    -8,   -64,   -28,   -64,   -64,   -64,   -64,
   111,    -4,   -15,    -9,   -21,   -64,   -64,   -40,   -41,   -42,
   -43,   -44,   -45,   -46,   -47,   -48,   -64,   -49,   -50,   -51,
   -52,   -53,   -21,   -64,   -29,   -57,   -58,   -59,   -64,   -64,
   -64,   -30,   -64,   -64,   -64,    -8,   -35,   -37,   -39,   -64,
   -64,   -64,   -64,   -64,   -31,   -32,   -18,   -20,   -19,   -64,
   -64,   -64,   -64,   -64,   -60,   -61,   -62,   -22,   -23,   -64,
   -24,   -64,   -64,   -64,   -64,   -64,   -64,   -64,   -25,   -27,
   -26 ]

racc_goto_table = [
    18,    26,    33,    44,    18,    74,   105,    21,    98,    23,
    62,     2,   100,   106,   107,    22,    41,    97,     1,    64,
    76,    18,    45,    79,    77,    71,    18,    21,    78,    65,
    66,    67,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,
   nil,   nil,    87,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    84,    85,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
    89 ]

racc_goto_check = [
     9,    12,    12,     5,     9,    13,    16,     4,    15,     9,
     5,     2,    15,    17,    17,     2,     3,    14,     1,    18,
    19,     9,    20,    13,    21,    12,     9,     4,    23,    25,
    26,    27,   nil,     9,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    12,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     9,   nil,   nil,   nil,   nil,
     9 ]

racc_goto_pointer = [
   nil,    18,    11,    -5,     5,   -23,   nil,   nil,   nil,     0,
   nil,   nil,   -12,   -39,   -76,   -85,   -97,   -90,   -17,   -25,
    -5,   -22,   nil,   -28,   nil,    -7,    -6,    -5 ]

racc_goto_default = [
   nil,   nil,    43,     3,     4,   nil,     6,     7,     8,    31,
    11,    12,   nil,   nil,   nil,   nil,   nil,    30,   nil,    27,
   nil,    28,    46,    29,    56,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 48, :_reduce_none,
  1, 48, :_reduce_2,
  1, 49, :_reduce_3,
  3, 49, :_reduce_4,
  2, 49, :_reduce_5,
  2, 49, :_reduce_none,
  1, 49, :_reduce_7,
  0, 52, :_reduce_none,
  1, 52, :_reduce_9,
  1, 50, :_reduce_10,
  1, 50, :_reduce_11,
  1, 50, :_reduce_12,
  1, 50, :_reduce_13,
  2, 50, :_reduce_14,
  3, 50, :_reduce_15,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  5, 58, :_reduce_18,
  5, 58, :_reduce_19,
  2, 60, :_reduce_20,
  0, 60, :_reduce_none,
  7, 55, :_reduce_22,
  1, 61, :_reduce_23,
  2, 61, :_reduce_24,
  5, 62, :_reduce_25,
  5, 62, :_reduce_26,
  2, 63, :_reduce_27,
  2, 57, :_reduce_28,
  3, 53, :_reduce_29,
  3, 54, :_reduce_30,
  4, 54, :_reduce_31,
  4, 54, :_reduce_32,
  1, 56, :_reduce_33,
  1, 59, :_reduce_34,
  3, 59, :_reduce_35,
  1, 66, :_reduce_36,
  3, 66, :_reduce_37,
  1, 68, :_reduce_none,
  3, 68, :_reduce_39,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  1, 64, :_reduce_56,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  4, 72, :_reduce_60,
  4, 74, :_reduce_61,
  4, 73, :_reduce_62,
  1, 51, :_reduce_none ]

racc_reduce_n = 64

racc_shift_n = 111

racc_token_table = {
  false => 0,
  :error => 1,
  :ASSIGN => 2,
  :AT_SYM => 3,
  :COMMENT => 4,
  :JUMP => 5,
  :IO_METHOD => 6,
  :INPUT => 7,
  :OUTPUT => 8,
  :NUMREG => 9,
  :POSREG => 10,
  :VREG => 11,
  :SREG => 12,
  :MOVE => 13,
  :DOT => 14,
  :TO => 15,
  :AT => 16,
  :TERM => 17,
  :SEMICOLON => 18,
  :NEWLINE => 19,
  :REAL => 20,
  :DIGIT => 21,
  :WORD => 22,
  :EQUAL => 23,
  :UNITS => 24,
  :EEQUAL => 25,
  :NOTEQUAL => 26,
  :GTE => 27,
  :LTE => 28,
  :LT => 29,
  :GT => 30,
  :PLUS => 31,
  :MINUS => 32,
  :STAR => 33,
  :SLASH => 34,
  :DIV => 35,
  :AND => 36,
  :OR => 37,
  :MOD => 38,
  :IF => 39,
  :ELSE => 40,
  :END => 41,
  :UNLESS => 42,
  "(" => 43,
  ")" => 44,
  "[" => 45,
  "]" => 46 }

racc_nt_base = 47

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ASSIGN",
  "AT_SYM",
  "COMMENT",
  "JUMP",
  "IO_METHOD",
  "INPUT",
  "OUTPUT",
  "NUMREG",
  "POSREG",
  "VREG",
  "SREG",
  "MOVE",
  "DOT",
  "TO",
  "AT",
  "TERM",
  "SEMICOLON",
  "NEWLINE",
  "REAL",
  "DIGIT",
  "WORD",
  "EQUAL",
  "UNITS",
  "EEQUAL",
  "NOTEQUAL",
  "GTE",
  "LTE",
  "LT",
  "GT",
  "PLUS",
  "MINUS",
  "STAR",
  "SLASH",
  "DIV",
  "AND",
  "OR",
  "MOD",
  "IF",
  "ELSE",
  "END",
  "UNLESS",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "program",
  "statements",
  "statement",
  "terminator",
  "block",
  "definition",
  "assignment",
  "motion_statement",
  "var",
  "label_definition",
  "conditional",
  "expression",
  "else_block",
  "motion_modifiers",
  "motion_modifier",
  "speed",
  "number",
  "definable",
  "simple_expression",
  "relop",
  "term",
  "addop",
  "factor",
  "mulop",
  "numreg",
  "output",
  "posreg" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 @interpreter.nodes = val[0] 
    result
end

def _reduce_3(val, _values, result)
 result = val 
    result
end

def _reduce_4(val, _values, result)
 result = val[0] << val[2] 
    result
end

def _reduce_5(val, _values, result)
 result = val[0] 
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
 result = [TerminatorNode.new] 
    result
end

# reduce 8 omitted

def _reduce_9(val, _values, result)
 result = val[0] 
    result
end

def _reduce_10(val, _values, result)
 result = CommentNode.new(val[0]) 
    result
end

def _reduce_11(val, _values, result)
 result = val[0] 
    result
end

def _reduce_12(val, _values, result)
 result = val[0] 
    result
end

def _reduce_13(val, _values, result)
 result = val[0] 
    result
end

def _reduce_14(val, _values, result)
 result = IOMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_15(val, _values, result)
 result = JumpNode.new(val[2]) 
    result
end

# reduce 16 omitted

# reduce 17 omitted

def _reduce_18(val, _values, result)
 result = ConditionalNode.new(val[1],val[2],val[3]) 
    result
end

def _reduce_19(val, _values, result)
 result = ConditionalNode.new(val[1],val[3],val[2]) 
    result
end

def _reduce_20(val, _values, result)
 result = val[1] 
    result
end

# reduce 21 omitted

def _reduce_22(val, _values, result)
 result = MotionNode.new(val[0],val[4],val[6]) 
    result
end

def _reduce_23(val, _values, result)
 result = val 
    result
end

def _reduce_24(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_25(val, _values, result)
 result = SpeedNode.new(val[3]) 
    result
end

def _reduce_26(val, _values, result)
 result = TerminationNode.new(val[3]) 
    result
end

def _reduce_27(val, _values, result)
 result = [val[0],UnitsNode.new(val[1])] 
    result
end

def _reduce_28(val, _values, result)
 result = LabelDefinitionNode.new(val[1]) 
    result
end

def _reduce_29(val, _values, result)
 result = DefinitionNode.new(val[0],val[2]) 
    result
end

def _reduce_30(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_31(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_32(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_33(val, _values, result)
 result = VarNode.new(val[0]) 
    result
end

def _reduce_34(val, _values, result)
 result = val[0] 
    result
end

def _reduce_35(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_36(val, _values, result)
 result = val[0] 
    result
end

def _reduce_37(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 38 omitted

def _reduce_39(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

def _reduce_56(val, _values, result)
 result = DigitNode.new(val[0]) 
    result
end

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

def _reduce_60(val, _values, result)
 result = NumregNode.new(val[2].to_i) 
    result
end

def _reduce_61(val, _values, result)
 result = PosregNode.new(val[2].to_i) 
    result
end

def _reduce_62(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

# reduce 63 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module TPPlus
