#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module TPPlus
  class Parser < Racc::Parser


  include TPPlus::Nodes

  attr_reader :interpreter
  def initialize(scanner, interpreter = TPPlus::Interpreter.new)
    @scanner       = scanner
    @interpreter   = interpreter
    super()
  end

  def next_token
    t = @scanner.next_token
    @interpreter.line_count += 1 if t == [:NEWLINE,"\n"]

    puts t.inspect
    t
  end

  def parse
    do_parse
    @interpreter
  rescue Racc::ParseError => e
    raise "Parse error on line #{@interpreter.line_count+1}: #{e}"
  end
##### State transition tables begin ###

racc_action_table = [
    38,    23,    25,    18,    17,    23,    25,    18,    17,    23,
    25,    18,    17,    22,    36,    35,    34,    22,    25,    17,
    26,    22,    48,    16,    26,    49,    52,    16,    26,   127,
    23,    16,    18,    17,    53,    54,    26,   145,   159,   107,
    19,   103,    22,    20,    19,    15,    37,    20,    19,    15,
    25,    20,    16,    15,    23,    25,    18,    17,    23,    25,
    18,    17,   -35,    25,   -33,   -35,    22,   -33,    26,    19,
    22,   102,    20,    26,    15,   -34,    16,    26,   -34,   101,
    16,    26,    77,    78,    81,    82,    79,    80,    83,    84,
    36,    35,    34,    19,    85,   107,    20,    19,    15,   112,
    20,   138,    15,    83,    84,   135,   136,   137,   105,    85,
    87,    88,    89,    91,    98,    90,    87,    88,    89,    91,
    97,    90,    71,    69,    70,    67,   116,    68,    36,    35,
    34,    36,    35,    34,    36,    35,    34,    36,    35,    34,
    36,    35,    34,    36,    35,    34,    36,    35,    34,    36,
    35,    34,    36,    35,    34,    36,    35,    34,    36,    35,
    34,    36,    35,    34,    36,    35,    34,    36,    35,    34,
    99,   100,   117,   118,   119,   120,   121,    95,    72,    55,
   123,    34,   125,   126,   104,   128,   129,   130,   133,   133,
    51,   139,   140,   141,   142,    50,    40,    34,    34,   152,
   153,   154,   155,   156,   157,   158,    28,    37,   163 ]

racc_action_check = [
    16,     4,     4,     4,     4,    47,    47,    47,    47,   107,
   107,   107,   107,     4,   139,   139,   139,    47,    30,   157,
     4,   107,    21,     4,    47,    21,    24,    47,   107,   118,
    29,   107,    29,    29,    24,    24,    30,   139,   157,    74,
     4,    69,    29,     4,    47,     4,    16,    47,   107,    47,
    73,   107,    29,   107,    41,    41,    41,    41,     0,     0,
     0,     0,     9,     2,     8,     9,    41,     8,    73,    29,
     0,    68,    29,    41,    29,     6,    41,     0,     6,    67,
     0,     2,    42,    42,    42,    42,    42,    42,    42,    42,
    15,    15,    15,    41,    42,    92,    41,     0,    41,    95,
     0,   133,     0,   108,   108,   133,   133,   133,    71,   108,
    43,    43,    43,    43,    54,    43,   109,   109,   109,   109,
    53,   109,    38,    38,    38,    38,   101,    38,    37,    37,
    37,    20,    20,    20,    19,    19,    19,    48,    48,    48,
    49,    49,    49,   140,   140,   140,    52,    52,    52,   100,
   100,   100,    98,    98,    98,    97,    97,    97,   142,   142,
   142,    76,    76,    76,    75,    75,    75,    86,    86,    86,
    57,    57,   102,   103,   104,   105,   106,    50,    40,    28,
   111,   112,   116,   117,    70,   119,   120,   124,   130,   131,
    23,   135,   136,   137,   138,    22,    18,   141,    17,   143,
   144,   146,   147,   148,   149,   154,     1,   159,   160 ]

racc_action_pointer = [
    55,   206,    59,   nil,    -2,   nil,    33,   nil,    22,    20,
   nil,   nil,   nil,   nil,   nil,    67,    -2,   173,   193,   111,
   108,   -20,   179,   165,     0,   nil,   nil,   nil,   179,    27,
    14,   nil,   nil,   nil,   nil,   nil,   nil,   105,   114,   nil,
   153,    51,    54,    74,   nil,   nil,   nil,     2,   114,   117,
   160,   nil,   123,    94,    88,   nil,   nil,   121,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,    20,   -10,
   133,    57,   nil,    46,    -4,   141,   138,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   144,   nil,   nil,   nil,
   nil,   nil,    52,   nil,   nil,    51,   nil,   132,   129,   nil,
   126,   102,   148,   149,   150,   151,   132,     6,    69,    80,
   nil,   136,   156,   nil,   nil,   nil,   130,   131,   -23,   133,
   134,   nil,   nil,   nil,   138,   nil,   nil,   nil,   nil,   nil,
   172,   173,   nil,    87,   nil,   143,   144,   145,   146,    -9,
   120,   172,   135,   150,   173,   nil,   151,   153,   154,   154,
   nil,   nil,   nil,   nil,   178,   nil,   nil,    13,   nil,   159,
   159,   nil,   nil,   nil ]

racc_action_default = [
    -1,   -97,    -2,    -3,    -7,   -10,   -11,   -12,   -13,   -14,
   -15,   -16,   -17,   -18,   -19,   -97,   -59,   -97,   -97,   -97,
   -97,   -97,   -97,   -97,   -97,   -94,   -95,   -96,   -97,    -5,
    -6,   -20,   -45,   -46,   -59,   -82,   -83,   -24,   -97,   -27,
   -97,    -8,   -60,   -62,   -64,   -80,   -81,    -8,   -97,   -97,
   -97,   -54,   -97,   -97,   -97,   164,    -4,   -97,   -22,   -25,
   -26,   -55,   -84,   -85,   -86,   -87,   -88,   -97,   -97,   -97,
   -97,   -97,   -28,    -9,   -37,   -97,   -97,   -66,   -67,   -68,
   -69,   -70,   -71,   -72,   -73,   -74,   -97,   -75,   -76,   -77,
   -78,   -79,   -37,   -31,   -32,   -97,   -56,   -97,   -97,   -21,
   -97,   -97,   -97,   -97,   -97,   -97,   -97,    -8,   -61,   -63,
   -65,   -97,   -97,   -57,   -58,   -23,   -97,   -97,   -97,   -97,
   -97,   -29,   -36,   -30,   -97,   -89,   -90,   -91,   -92,   -93,
   -97,   -38,   -39,   -97,   -40,   -97,   -97,   -97,   -97,   -97,
   -97,   -97,   -97,   -97,   -97,   -52,   -97,   -97,   -97,   -97,
   -49,   -50,   -41,   -51,   -97,   -42,   -43,   -97,   -53,   -97,
   -97,   -47,   -48,   -44 ]

racc_goto_table = [
    24,    32,    31,    29,    24,    41,    47,    74,    58,   106,
     2,   132,   134,    92,    30,    33,   131,    39,   161,   162,
    56,    57,     1,    59,   143,   149,   160,   111,    61,    24,
   108,    29,    75,   109,    93,    94,   110,    60,    96,    62,
    63,    24,    64,    65,    66,   nil,   nil,    24,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   115,   nil,   122,    29,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   113,   114,   nil,    59,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    60,   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,
   nil,   nil,   124,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   144,    32,   147,   151,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   146,
    33,   148,   150 ]

racc_goto_check = [
    20,    19,    16,     4,    20,    21,    21,     5,    18,    22,
     2,    25,    25,     5,     2,    20,    24,    20,    14,    10,
     3,    17,     1,    19,    26,    27,    28,    22,    29,    20,
    30,     4,    31,    32,    21,    21,    34,    20,    21,    36,
    37,    20,    38,    39,    40,   nil,   nil,    20,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    18,   nil,     5,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    21,    21,   nil,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    20,   nil,   nil,   nil,   nil,   nil,   nil,    20,   nil,   nil,
   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    19,    19,    16,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    20,
    20,    20,    20 ]

racc_goto_pointer = [
   nil,    22,    10,    -9,     1,   -34,   nil,   nil,   nil,   nil,
  -138,   nil,   nil,   nil,  -139,   nil,   -13,   -16,   -29,   -14,
     0,   -14,   -65,   nil,  -114,  -119,  -115,  -117,  -131,   -10,
   -45,   -10,   -43,   nil,   -50,   nil,     1,     2,     4,     5,
     6,   nil ]

racc_goto_default = [
   nil,   nil,    73,     3,     4,   nil,     5,     6,     7,     8,
     9,    10,    11,    12,    13,    14,   nil,   nil,   nil,    45,
    46,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,
    42,   nil,    43,    76,    44,    86,   nil,   nil,   nil,   nil,
   nil,    27 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 54, :_reduce_none,
  1, 54, :_reduce_2,
  1, 55, :_reduce_3,
  3, 55, :_reduce_4,
  2, 55, :_reduce_5,
  2, 55, :_reduce_6,
  1, 55, :_reduce_7,
  0, 58, :_reduce_none,
  1, 58, :_reduce_9,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  2, 68, :_reduce_20,
  4, 67, :_reduce_21,
  1, 70, :_reduce_22,
  3, 70, :_reduce_23,
  0, 70, :_reduce_24,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  2, 63, :_reduce_27,
  3, 62, :_reduce_28,
  5, 65, :_reduce_29,
  5, 65, :_reduce_30,
  3, 66, :_reduce_31,
  3, 66, :_reduce_32,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  2, 75, :_reduce_36,
  0, 75, :_reduce_none,
  7, 61, :_reduce_38,
  1, 77, :_reduce_39,
  2, 77, :_reduce_40,
  5, 78, :_reduce_41,
  5, 78, :_reduce_42,
  5, 78, :_reduce_43,
  7, 78, :_reduce_44,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 80, :_reduce_none,
  1, 80, :_reduce_none,
  2, 79, :_reduce_51,
  1, 79, :_reduce_52,
  3, 79, :_reduce_53,
  2, 64, :_reduce_54,
  3, 59, :_reduce_55,
  3, 60, :_reduce_56,
  4, 60, :_reduce_57,
  4, 60, :_reduce_58,
  1, 73, :_reduce_59,
  1, 74, :_reduce_60,
  3, 74, :_reduce_61,
  1, 83, :_reduce_62,
  3, 83, :_reduce_63,
  1, 85, :_reduce_none,
  3, 85, :_reduce_65,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  1, 72, :_reduce_82,
  1, 72, :_reduce_83,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  4, 93, :_reduce_89,
  4, 92, :_reduce_90,
  4, 89, :_reduce_91,
  4, 91, :_reduce_92,
  4, 90, :_reduce_93,
  1, 94, :_reduce_94,
  1, 57, :_reduce_95,
  1, 57, :_reduce_96 ]

racc_reduce_n = 97

racc_shift_n = 164

racc_token_table = {
  false => 0,
  :error => 1,
  :ASSIGN => 2,
  :AT_SYM => 3,
  :COMMENT => 4,
  :JUMP => 5,
  :IO_METHOD => 6,
  :INPUT => 7,
  :OUTPUT => 8,
  :NUMREG => 9,
  :POSREG => 10,
  :VREG => 11,
  :SREG => 12,
  :POSITION => 13,
  :TIME_SEGMENT => 14,
  :MOVE => 15,
  :DOT => 16,
  :TO => 17,
  :AT => 18,
  :TERM => 19,
  :OFFSET => 20,
  :SEMICOLON => 21,
  :NEWLINE => 22,
  :REAL => 23,
  :DIGIT => 24,
  :WORD => 25,
  :EQUAL => 26,
  :UNITS => 27,
  :EEQUAL => 28,
  :NOTEQUAL => 29,
  :GTE => 30,
  :LTE => 31,
  :LT => 32,
  :GT => 33,
  :PLUS => 34,
  :MINUS => 35,
  :STAR => 36,
  :SLASH => 37,
  :DIV => 38,
  :AND => 39,
  :OR => 40,
  :MOD => 41,
  :IF => 42,
  :ELSE => 43,
  :END => 44,
  :UNLESS => 45,
  :MAX_SPEED => 46,
  :FANUC_USE => 47,
  "(" => 48,
  ")" => 49,
  "," => 50,
  "[" => 51,
  "]" => 52 }

racc_nt_base = 53

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ASSIGN",
  "AT_SYM",
  "COMMENT",
  "JUMP",
  "IO_METHOD",
  "INPUT",
  "OUTPUT",
  "NUMREG",
  "POSREG",
  "VREG",
  "SREG",
  "POSITION",
  "TIME_SEGMENT",
  "MOVE",
  "DOT",
  "TO",
  "AT",
  "TERM",
  "OFFSET",
  "SEMICOLON",
  "NEWLINE",
  "REAL",
  "DIGIT",
  "WORD",
  "EQUAL",
  "UNITS",
  "EEQUAL",
  "NOTEQUAL",
  "GTE",
  "LTE",
  "LT",
  "GT",
  "PLUS",
  "MINUS",
  "STAR",
  "SLASH",
  "DIV",
  "AND",
  "OR",
  "MOD",
  "IF",
  "ELSE",
  "END",
  "UNLESS",
  "MAX_SPEED",
  "FANUC_USE",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "program",
  "statements",
  "statement",
  "terminator",
  "block",
  "definition",
  "assignment",
  "motion_statement",
  "jump",
  "io_method",
  "label_definition",
  "conditional",
  "inline_conditional",
  "program_call",
  "use_statement",
  "indirectable",
  "args",
  "arg",
  "number",
  "var",
  "expression",
  "else_block",
  "inlineable",
  "motion_modifiers",
  "motion_modifier",
  "speed",
  "time",
  "time_seg_actions",
  "definable",
  "simple_expression",
  "relop",
  "term",
  "addop",
  "factor",
  "mulop",
  "numreg",
  "output",
  "posreg",
  "position",
  "vreg",
  "comment" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 @interpreter.nodes = val[0].flatten 
    result
end

def _reduce_3(val, _values, result)
 result = val 
    result
end

def _reduce_4(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_5(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_6(val, _values, result)
 result = [val[0]] << val[1] 
    result
end

def _reduce_7(val, _values, result)
 result = [val[0]] 
    result
end

# reduce 8 omitted

def _reduce_9(val, _values, result)
 result = val[0] 
    result
end

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

def _reduce_20(val, _values, result)
 result = UseNode.new(val[0],val[1]) 
    result
end

def _reduce_21(val, _values, result)
 result = CallNode.new(val[0],val[2]) 
    result
end

def _reduce_22(val, _values, result)
 result = [val[0]] 
    result
end

def _reduce_23(val, _values, result)
 result = val[0] << val[2] 
    result
end

def _reduce_24(val, _values, result)
 result = [] 
    result
end

# reduce 25 omitted

# reduce 26 omitted

def _reduce_27(val, _values, result)
 result = IOMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_28(val, _values, result)
 result = JumpNode.new(val[2]) 
    result
end

def _reduce_29(val, _values, result)
 result = ConditionalNode.new("if",val[1],val[2],val[3]) 
    result
end

def _reduce_30(val, _values, result)
 result = ConditionalNode.new("unless",val[1],val[2],val[3]) 
    result
end

def _reduce_31(val, _values, result)
 result = InlineConditionalNode.new("if",val[2],val[0]) 
    result
end

def _reduce_32(val, _values, result)
 result = InlineConditionalNode.new("unless",val[2],val[0]) 
    result
end

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

def _reduce_36(val, _values, result)
 result = val[1] 
    result
end

# reduce 37 omitted

def _reduce_38(val, _values, result)
 result = MotionNode.new(val[0],val[4],val[6]) 
    result
end

def _reduce_39(val, _values, result)
 result = val 
    result
end

def _reduce_40(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_41(val, _values, result)
 result = SpeedNode.new(val[3]) 
    result
end

def _reduce_42(val, _values, result)
 result = TerminationNode.new(val[3]) 
    result
end

def _reduce_43(val, _values, result)
 result = OffsetNode.new(val[3]) 
    result
end

def _reduce_44(val, _values, result)
 result = TimeNode.new(val[1],val[3],val[5]) 
    result
end

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

def _reduce_51(val, _values, result)
 result = [val[0],UnitsNode.new(val[1])] 
    result
end

def _reduce_52(val, _values, result)
 result = [:max_speed,:max_speed] 
    result
end

def _reduce_53(val, _values, result)
 result = [val[0],UnitsNode.new(val[2])] 
    result
end

def _reduce_54(val, _values, result)
 result = LabelDefinitionNode.new(val[1]) 
    result
end

def _reduce_55(val, _values, result)
 result = DefinitionNode.new(val[0],val[2]) 
    result
end

def _reduce_56(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_57(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_58(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_59(val, _values, result)
 result = VarNode.new(val[0]) 
    result
end

def _reduce_60(val, _values, result)
 result = val[0] 
    result
end

def _reduce_61(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_62(val, _values, result)
 result = val[0] 
    result
end

def _reduce_63(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 64 omitted

def _reduce_65(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

def _reduce_82(val, _values, result)
 result = DigitNode.new(val[0]) 
    result
end

def _reduce_83(val, _values, result)
 result = RealNode.new(val[0]) 
    result
end

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

def _reduce_89(val, _values, result)
 result = VisionRegisterNode.new(val[2].to_i) 
    result
end

def _reduce_90(val, _values, result)
 result = PositionNode.new(val[2].to_i) 
    result
end

def _reduce_91(val, _values, result)
 result = NumregNode.new(val[2].to_i) 
    result
end

def _reduce_92(val, _values, result)
 result = PosregNode.new(val[2].to_i) 
    result
end

def _reduce_93(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_94(val, _values, result)
 result = CommentNode.new(val[0]) 
    result
end

def _reduce_95(val, _values, result)
 result = TerminatorNode.new 
    result
end

def _reduce_96(val, _values, result)
 result = val[0] 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module TPPlus
