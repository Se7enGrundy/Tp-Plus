#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module TPPlus
  class Parser < Racc::Parser


  include TPPlus::Nodes

  attr_reader :interpreter
  def initialize(scanner, interpreter = TPPlus::Interpreter.new)
    @scanner       = scanner
    @interpreter   = interpreter
    super()
  end

  def next_token
    t = @scanner.next_token
    @interpreter.line_count += 1 if t && t[0] == :NEWLINE

    #puts t.inspect
    t
  end

  def parse
    do_parse
    @interpreter
  rescue Racc::ParseError => e
    raise "Parse error on line #{@interpreter.line_count+1}: #{e}"
  end
##### State transition tables begin ###

racc_action_table = [
    76,    27,    44,    32,    31,    77,   276,    61,    62,    51,
    51,    51,    31,    40,    77,    61,    62,    51,    44,    44,
    27,    45,    32,    31,   238,    30,   -98,    61,    62,    51,
    32,   182,    40,   240,   -98,   -98,    51,    45,    45,    37,
    37,    37,    33,    72,    30,    34,    35,    37,    36,    25,
    26,   183,   240,    28,    29,    37,    38,  -103,    32,    37,
    24,    33,    23,    75,    34,    35,    37,    36,    25,    26,
    62,    51,    28,    29,    37,    38,    62,    51,    44,    24,
   240,    23,    27,    44,    32,    31,   143,   142,   140,   141,
   138,    51,    51,   137,    40,    51,   114,    45,   186,   115,
    44,    37,    45,    51,    61,    62,    30,    37,    27,    44,
    32,    31,    61,    62,    51,    61,    62,    51,    51,    45,
    40,    37,    37,    33,    51,    37,    34,    35,    45,    36,
    25,    26,    30,    37,    28,    29,    37,    38,   179,    44,
   139,    24,   136,    23,    37,   214,   179,    37,    37,    33,
   121,   120,    34,    35,    37,    36,    25,    26,    45,   186,
    28,    29,    37,    38,   187,   -70,    91,    24,   -70,    23,
    27,    44,    32,    31,    92,    93,   177,   -69,   -71,   265,
   -69,   -71,    40,    51,   262,   263,   264,   266,   176,    88,
    45,    69,    89,    74,    30,   175,   103,   104,   107,   108,
   105,   106,   174,   109,   110,   112,   113,   114,   116,   111,
   115,    33,   192,    37,    34,    35,    72,    36,    25,    26,
   195,    68,    28,    29,    37,    38,   173,   -72,   172,    24,
   -72,    23,    27,    44,    32,    31,   236,   237,   169,   168,
   171,   196,   170,   198,    40,    51,   199,   200,   201,   202,
   203,   204,    45,    69,   205,    74,    30,   206,   103,   104,
   107,   108,   105,   106,   167,   109,   110,   112,   113,   114,
   116,   111,   115,    33,   208,    37,    34,    35,    72,    36,
    25,    26,   160,    68,    28,    29,    37,    38,   159,   158,
   218,    24,   157,    23,    27,    44,    32,    31,    61,    62,
    51,    61,    62,    51,   152,   219,    40,   195,   152,   152,
   223,   224,   225,   226,    45,   227,   228,   229,    30,   230,
    27,    44,    32,    31,    61,    62,    51,    61,    62,    51,
    37,   231,    40,    37,   232,    33,   152,   152,    34,    35,
    45,    36,    25,    26,    30,   148,    28,    29,    37,    38,
   144,   181,   119,    24,   -86,    23,    37,    99,   245,    37,
   246,    33,   247,   248,    34,    35,    75,    36,    25,    26,
    95,    94,    28,    29,    37,    38,   253,    27,    90,    24,
    86,    23,    27,    44,    32,    31,   253,   152,   259,   260,
   261,    27,   267,   268,    40,    51,   269,   270,   271,   272,
   273,    56,    45,    69,    55,    74,    30,    54,   103,   104,
   107,   108,   105,   106,    53,   109,   110,   112,   113,   114,
   116,   111,   115,    33,    27,    37,    34,    35,    72,    36,
    25,    26,   283,    68,    28,    29,    37,    38,    61,    62,
    51,    24,   284,    23,    51,   285,   286,   287,    69,   289,
    74,    51,    69,   290,    74,    61,    62,    51,  -101,    69,
   294,    74,    47,   296,   nil,   nil,   nil,   nil,   nil,   nil,
    37,   nil,   nil,    72,    37,   nil,   nil,    72,    68,   nil,
   nil,    37,    68,   nil,    72,   nil,   nil,    37,   nil,    68,
   103,   104,   107,   108,   105,   106,   nil,   109,   110,   112,
   113,   114,   116,   111,   115,   103,   104,   107,   108,   105,
   106,   nil,   109,   110,   112,   113,   114,   116,   111,   115,
   nil,    51,    51,   nil,   nil,   nil,   nil,   nil,   166,    69,
    69,    74,    74,   nil,    51,   nil,   nil,   nil,    51,   nil,
   nil,   nil,    69,   161,    74,   nil,    69,   nil,    74,   nil,
   nil,    37,    37,    51,    72,    72,   nil,   nil,   nil,    68,
    68,    69,   nil,    74,    37,    51,   nil,    72,    37,    51,
   nil,    72,    68,    69,   nil,    74,    68,    69,   nil,    74,
    51,   nil,   nil,    37,    51,   nil,    72,   nil,    69,   nil,
    74,    68,    69,   nil,    74,    37,   nil,   nil,    72,    37,
   nil,   nil,    72,    68,   nil,   nil,   nil,    68,   nil,   nil,
    37,   nil,   nil,    72,    37,   nil,   nil,    72,    68,   nil,
   nil,   nil,    68,   103,   104,   107,   108,   105,   106,   nil,
   109,   110,   112,   113,   114,   116,   111,   115,   103,   104,
   107,   108,   105,   106,   nil,   109,   110,   112,   113,   114,
   116,   111,   115,   103,   104,   107,   108,   105,   106,   nil,
   109,   110,   112,   113,   114,   116,   111,   115,   103,   104,
   107,   108,   105,   106,   nil,   109,   110,   112,   113,   114,
   116,   111,   115,   103,   104,   107,   108,   105,   106,   nil,
   109,   110,   112,   113,   114,   116,   111,   115,   103,   104,
   107,   108,   105,   106,   nil,   109,   110,   112,   113,   114,
   116,   111,   115,   103,   104,   107,   108,   105,   106,   nil,
   109,   110,   112,   113,   114,   116,   111,   115,   103,   104,
   107,   108,   105,   106,   nil,   109,   110,   112,   113,   114,
   116,   111,   115,   103,   104,   107,   108,   105,   106,   nil,
   109,   110,   112,   113,   114,   116,   111,   115 ]

racc_action_check = [
    30,   179,   179,   179,   179,    51,   268,   268,   268,   268,
    31,    23,   287,   179,    30,   271,   271,   271,   241,   145,
    48,   179,    48,    48,   222,   179,    30,   169,   169,   169,
   234,   149,    48,   287,    30,    30,    35,   241,   145,   268,
    31,    23,   179,    31,    48,   179,   179,   271,   179,   179,
   179,   150,   234,   179,   179,   179,   179,    51,   233,   169,
   179,    48,   179,    30,    48,    48,    35,    48,    48,    48,
   231,   231,    48,    48,    48,    48,   181,   181,    49,    48,
   233,    48,     4,     4,     4,     4,    76,    76,    76,    76,
    76,    38,    99,    76,     4,   289,   118,    49,   151,   118,
     2,   231,     4,   218,    76,    76,     4,   181,   248,   248,
   248,   248,    54,    54,    54,   247,   247,   247,   159,     2,
   248,    38,    99,     4,   270,   289,     4,     4,   248,     4,
     4,     4,   248,   218,     4,     4,     4,     4,   147,   244,
    76,     4,    76,     4,    54,   184,   146,   247,   159,   248,
    73,    73,   248,   248,   270,   248,   248,   248,   244,   184,
   248,   248,   248,   248,   155,     7,    42,   248,     7,   248,
    81,    81,    81,    81,    42,    42,   143,     9,    10,   258,
     9,    10,    81,   158,   258,   258,   258,   258,   142,    39,
    81,   158,    39,   158,    81,   141,    81,    81,    81,    81,
    81,    81,   140,    81,    81,    81,    81,    81,    81,    81,
    81,    81,   160,   158,    81,    81,   158,    81,    81,    81,
   161,   158,    81,    81,    81,    81,   139,    16,   138,    81,
    16,    81,    83,    83,    83,    83,   221,   221,   122,   122,
   137,   167,   136,   170,    83,   100,   171,   172,   173,   174,
   175,   176,    83,   100,   177,   100,    83,   178,    83,    83,
    83,    83,    83,    83,   119,    83,    83,    83,    83,    83,
    83,    83,    83,    83,   180,   100,    83,    83,   100,    83,
    83,    83,    97,   100,    83,    83,    83,    83,    94,    93,
   187,    83,    92,    83,     0,     0,     0,     0,   196,   196,
   196,    28,    28,    28,    90,   192,     0,   193,   195,    87,
   198,   199,   200,   201,     0,   202,   203,   204,     0,   205,
    86,    86,    86,    86,    75,    75,    75,   186,   186,   186,
   196,   209,    86,    28,   212,     0,   214,   215,     0,     0,
    86,     0,     0,     0,    86,    84,     0,     0,     0,     0,
    77,   148,    72,     0,    65,     0,    75,    63,   235,   186,
   236,    86,   237,   239,    86,    86,   240,    86,    86,    86,
    47,    43,    86,    86,    86,    86,   245,   246,    40,    86,
    37,    86,    85,    85,    85,    85,   251,   253,   254,   255,
   256,    32,   260,   262,    85,    88,   263,   264,   265,   266,
   267,    27,    85,    88,    26,    88,    85,    25,    85,    85,
    85,    85,    85,    85,    24,    85,    85,    85,    85,    85,
    85,    85,    85,    85,   272,    88,    85,    85,    88,    85,
    85,    85,   274,    88,    85,    85,    85,    85,    29,    29,
    29,    85,   275,    85,   101,   277,   278,   279,    29,   282,
    29,   102,   101,   284,   101,   269,   269,   269,     6,   102,
   288,   102,     1,   291,   nil,   nil,   nil,   nil,   nil,   nil,
    29,   nil,   nil,    29,   101,   nil,   nil,   101,    29,   nil,
   nil,   102,   101,   nil,   102,   nil,   nil,   269,   nil,   102,
   117,   117,   117,   117,   117,   117,   nil,   117,   117,   117,
   117,   117,   117,   117,   117,    98,    98,    98,    98,    98,
    98,   nil,    98,    98,    98,    98,    98,    98,    98,    98,
   nil,    34,    89,   nil,   nil,   nil,   nil,   nil,   117,    34,
    89,    34,    89,   nil,    36,   nil,   nil,   nil,   157,   nil,
   nil,   nil,    36,    98,    36,   nil,   157,   nil,   157,   nil,
   nil,    34,    89,    69,    34,    89,   nil,   nil,   nil,    34,
    89,    69,   nil,    69,    36,    68,   nil,    36,   157,    55,
   nil,   157,    36,    68,   nil,    68,   157,    55,   nil,    55,
    91,   nil,   nil,    69,    33,   nil,    69,   nil,    91,   nil,
    91,    69,    33,   nil,    33,    68,   nil,   nil,    68,    55,
   nil,   nil,    55,    68,   nil,   nil,   nil,    55,   nil,   nil,
    91,   nil,   nil,    91,    33,   nil,   nil,    33,    91,   nil,
   nil,   nil,    33,   156,   156,   156,   156,   156,   156,   nil,
   156,   156,   156,   156,   156,   156,   156,   156,   189,   189,
   189,   189,   189,   189,   nil,   189,   189,   189,   189,   189,
   189,   189,   189,   154,   154,   154,   154,   154,   154,   nil,
   154,   154,   154,   154,   154,   154,   154,   154,   153,   153,
   153,   153,   153,   153,   nil,   153,   153,   153,   153,   153,
   153,   153,   153,   188,   188,   188,   188,   188,   188,   nil,
   188,   188,   188,   188,   188,   188,   188,   188,   163,   163,
   163,   163,   163,   163,   nil,   163,   163,   163,   163,   163,
   163,   163,   163,   164,   164,   164,   164,   164,   164,   nil,
   164,   164,   164,   164,   164,   164,   164,   164,   165,   165,
   165,   165,   165,   165,   nil,   165,   165,   165,   165,   165,
   165,   165,   165,    64,    64,    64,    64,    64,    64,   nil,
    64,    64,    64,    64,    64,    64,    64,    64 ]

racc_action_pointer = [
   291,   462,    96,   nil,    79,   nil,   390,   121,   nil,   133,
   134,   nil,   nil,   nil,   nil,   nil,   183,   nil,   nil,   nil,
   nil,   nil,   nil,   -16,   390,   342,   339,   374,   276,   413,
    -2,   -17,   388,   557,   494,     9,   507,   353,    64,   145,
   362,   nil,   138,   303,   nil,   nil,   nil,   370,    17,    74,
   nil,   -11,   nil,   nil,    87,   542,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   291,   714,   288,   nil,   nil,   538,   526,
   nil,   nil,   287,   125,   nil,   299,    79,   323,   nil,   nil,
   nil,   167,   nil,   229,   296,   379,   317,   286,   368,   495,
   281,   553,   264,   261,   220,   nil,   nil,   216,   476,    65,
   218,   417,   424,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   461,    56,   240,
   nil,   nil,   172,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   173,   171,   159,   157,
   133,   126,   119,   107,   nil,    15,   101,    93,   286,   -15,
     5,    39,   nil,   639,   624,   147,   594,   511,   156,    91,
   188,   204,   nil,   669,   684,   699,   nil,   175,   nil,     2,
   217,   220,   221,   222,   223,   224,   225,   228,   211,    -2,
   228,    50,   nil,   nil,   100,   nil,   302,   225,   654,   609,
   nil,   nil,   238,   291,   nil,   285,   273,   nil,   240,   241,
   242,   243,   245,   246,   247,   249,   nil,   nil,   nil,   314,
   nil,   nil,   288,   nil,   313,   314,   nil,   nil,    76,   nil,
   nil,   183,   -43,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    44,   nil,    53,    25,   291,   295,   297,   nil,   296,
   301,    14,   nil,   nil,   135,   360,   374,    90,   105,   nil,
   nil,   370,   nil,   364,   321,   323,   344,   nil,   166,   nil,
   368,   nil,   328,   331,   332,   333,   334,   333,   -18,   430,
    97,   -10,   421,   nil,   365,   376,   nil,   378,   379,   381,
   nil,   nil,   383,   nil,   429,   nil,   nil,     6,   393,    68,
   nil,   396,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -1,  -158,    -2,    -3,    -7,   -10,   -11,   -12,   -13,   -14,
   -15,   -16,   -17,   -18,   -19,   -20,   -21,   -22,   -23,   -24,
   -25,   -26,   -27,  -158,  -158,  -158,  -158,  -158,  -158,  -158,
  -103,  -158,  -158,  -132,  -132,  -158,  -132,  -158,  -158,  -158,
  -158,   -93,  -158,  -158,  -153,  -154,  -155,  -158,    -5,    -6,
   -28,   -98,  -101,   -29,  -158,  -132,   -37,   -38,   -85,   -86,
  -133,  -134,  -135,  -158,   -40,  -126,  -104,  -105,  -132,  -132,
  -125,  -127,  -158,  -158,  -131,   -44,  -158,  -158,   -47,   -48,
   -49,    -8,  -126,    -8,  -158,    -8,    -8,  -157,  -132,  -132,
  -157,  -132,  -158,  -158,  -158,   297,    -4,  -158,  -158,  -158,
  -132,  -132,  -132,  -111,  -112,  -113,  -114,  -115,  -116,  -117,
  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -158,  -110,  -158,
  -129,  -130,  -158,   -42,   -45,   -46,   -94,  -136,  -137,  -138,
  -139,  -140,  -141,  -142,  -143,  -144,  -158,  -158,  -158,  -158,
  -158,  -158,  -158,  -158,   -99,    -9,   -74,   -74,  -158,  -158,
  -158,  -158,  -156,   -67,   -68,  -158,   -95,  -132,  -132,  -158,
  -158,   -32,   -39,  -107,  -108,  -109,  -106,  -158,   -41,  -158,
  -158,  -158,  -158,  -158,  -158,  -158,  -158,  -158,  -158,    -8,
  -158,  -158,   -53,   -56,   -64,   -58,  -158,  -158,   -96,   -97,
  -100,  -101,  -158,   -31,   -33,  -157,  -158,   -43,  -158,  -158,
  -158,  -158,  -158,  -158,  -158,  -158,   -50,   -73,   -51,  -158,
   -54,   -55,  -158,   -59,  -157,  -157,   -61,   -62,  -158,   -30,
   -34,  -158,  -158,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -158,   -57,  -158,  -158,  -158,  -158,  -158,  -128,  -158,
  -158,  -158,   -65,   -66,  -158,  -158,  -158,  -158,    -8,   -63,
   -60,   -75,   -76,  -157,  -158,  -158,  -158,   -77,  -158,   -35,
  -158,   -52,  -158,  -158,  -158,  -158,  -158,  -158,  -158,  -158,
  -158,  -158,  -158,   -36,  -158,  -158,   -92,  -158,  -158,  -158,
   -89,   -90,   -84,   -78,  -158,   -79,   -80,  -158,  -158,  -158,
   -91,  -158,   -87,   -88,   -82,   -83,   -81 ]

racc_goto_table = [
    42,   123,    48,    80,    42,   209,   124,   133,     6,   210,
    57,    63,     6,   146,   185,   147,   151,   149,   150,   155,
   242,   242,     2,    50,   252,   194,    49,     1,    59,    65,
   257,    78,   241,   244,    79,    84,    97,   122,    87,   243,
   243,   178,   180,   184,   212,   193,   215,   213,    42,    48,
   293,   251,    96,   274,    59,   239,     6,   220,   279,   210,
   291,   288,   126,   127,   128,   129,    64,   130,   131,   132,
    81,    83,   134,    85,   292,   125,   135,   nil,   nil,   nil,
   nil,    42,   nil,    42,   nil,    42,    42,   nil,   nil,     6,
   nil,     6,    98,     6,     6,   197,   nil,   nil,   nil,   162,
   124,   nil,   nil,   nil,   nil,   117,   118,   nil,   nil,   nil,
   nil,   207,   nil,   nil,   nil,   nil,   nil,   216,   nil,   nil,
   nil,   nil,   nil,   nil,   221,   153,   154,   nil,   156,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   163,   164,   165,
   nil,   nil,   nil,   233,   234,    48,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   190,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   191,   nil,   125,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   222,    42,
   256,   211,   258,   nil,   nil,   nil,   217,     6,   nil,   nil,
   nil,   nil,   nil,   nil,   188,   189,    59,   nil,   nil,   nil,
   nil,   nil,   281,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   254,   235,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   255,
   nil,   211,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   249,   nil,   282,   250,   nil,   nil,    59,    42,   nil,
   275,   277,   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    59,    59,
   278,   280,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   295 ]

racc_goto_check = [
    24,    32,     4,    30,    24,    36,    33,    33,     7,    37,
    25,    25,     7,     5,    40,     5,    29,     5,     5,    29,
    17,    17,     2,    24,    45,    28,     2,     1,    24,    24,
    45,    24,    42,    42,    34,    24,    25,    31,    24,    10,
    10,    35,    35,    38,    39,    27,    41,    40,    24,     4,
    11,    44,     3,    46,    24,    36,     7,    28,    47,    37,
    48,    49,    50,    59,    60,    61,    26,    62,    63,    64,
    26,    26,    65,    26,    17,    24,    66,   nil,   nil,   nil,
   nil,    24,   nil,    24,   nil,    24,    24,   nil,   nil,     7,
   nil,     7,    26,     7,     7,    32,   nil,   nil,   nil,    24,
    33,   nil,   nil,   nil,   nil,    26,    26,   nil,   nil,   nil,
   nil,     5,   nil,   nil,   nil,   nil,   nil,    33,   nil,   nil,
   nil,   nil,   nil,   nil,    29,    26,    26,   nil,    26,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    26,    26,    26,
   nil,   nil,   nil,    29,    29,     4,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,    24,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,    24,
     5,    24,    29,   nil,   nil,   nil,    24,     7,   nil,   nil,
   nil,   nil,   nil,   nil,    26,    26,    24,   nil,   nil,   nil,
   nil,   nil,    33,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    30,    24,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,
   nil,    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,   nil,    30,     4,   nil,   nil,    24,    24,   nil,
    25,    25,   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,    24,
    24,    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24 ]

racc_goto_pointer = [
   nil,    27,    22,     4,     0,   -68,   nil,     8,   nil,   nil,
  -194,  -237,   nil,   nil,   nil,   nil,   nil,  -213,   nil,   nil,
   nil,   nil,   nil,   nil,     0,   -18,    37,  -116,  -136,   -71,
   -29,   -38,   -74,   -69,     3,  -105,  -176,  -172,  -108,  -140,
  -137,  -140,  -201,   nil,  -194,  -221,  -215,  -213,  -227,  -221,
   -14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -13,
   -12,   -11,    -9,    -8,    -7,    -4,     0,   nil ]

racc_goto_default = [
   nil,   nil,   145,     3,     4,   nil,     5,    52,     7,     8,
     9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
    19,    20,    21,    22,    82,   nil,   nil,   nil,   nil,   nil,
    41,   nil,   nil,    58,    71,   nil,   nil,    60,   nil,   nil,
   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    43,    66,    67,   100,   101,   102,    70,    73,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    46 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 72, :_reduce_none,
  1, 72, :_reduce_2,
  1, 73, :_reduce_3,
  3, 73, :_reduce_4,
  2, 73, :_reduce_5,
  2, 73, :_reduce_6,
  1, 73, :_reduce_7,
  0, 76, :_reduce_none,
  1, 76, :_reduce_9,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  2, 94, :_reduce_28,
  2, 93, :_reduce_29,
  6, 91, :_reduce_30,
  5, 91, :_reduce_31,
  0, 98, :_reduce_none,
  1, 98, :_reduce_33,
  2, 98, :_reduce_34,
  6, 99, :_reduce_35,
  8, 99, :_reduce_36,
  2, 101, :_reduce_37,
  2, 89, :_reduce_38,
  4, 90, :_reduce_39,
  2, 90, :_reduce_40,
  4, 88, :_reduce_41,
  1, 102, :_reduce_42,
  3, 102, :_reduce_43,
  0, 102, :_reduce_44,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  2, 82, :_reduce_47,
  2, 82, :_reduce_48,
  2, 81, :_reduce_49,
  5, 84, :_reduce_50,
  5, 84, :_reduce_51,
  10, 86, :_reduce_52,
  4, 87, :_reduce_53,
  1, 107, :_reduce_none,
  1, 107, :_reduce_none,
  4, 78, :_reduce_56,
  6, 92, :_reduce_57,
  1, 109, :_reduce_58,
  2, 109, :_reduce_59,
  5, 111, :_reduce_60,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  4, 110, :_reduce_63,
  0, 110, :_reduce_none,
  1, 113, :_reduce_none,
  1, 113, :_reduce_none,
  3, 85, :_reduce_67,
  3, 85, :_reduce_68,
  1, 114, :_reduce_none,
  1, 114, :_reduce_none,
  1, 114, :_reduce_none,
  1, 114, :_reduce_none,
  2, 106, :_reduce_73,
  0, 106, :_reduce_74,
  8, 80, :_reduce_75,
  1, 115, :_reduce_76,
  2, 115, :_reduce_77,
  6, 116, :_reduce_78,
  6, 116, :_reduce_79,
  6, 116, :_reduce_80,
  8, 116, :_reduce_81,
  7, 116, :_reduce_82,
  2, 120, :_reduce_83,
  0, 120, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  1, 118, :_reduce_none,
  1, 118, :_reduce_none,
  3, 117, :_reduce_91,
  1, 117, :_reduce_92,
  1, 83, :_reduce_93,
  3, 77, :_reduce_94,
  3, 79, :_reduce_95,
  4, 79, :_reduce_96,
  4, 79, :_reduce_97,
  1, 95, :_reduce_98,
  3, 95, :_reduce_99,
  4, 95, :_reduce_100,
  1, 122, :_reduce_101,
  4, 122, :_reduce_102,
  1, 78, :_reduce_103,
  1, 97, :_reduce_104,
  1, 97, :_reduce_105,
  3, 97, :_reduce_106,
  3, 124, :_reduce_107,
  3, 124, :_reduce_108,
  3, 124, :_reduce_109,
  2, 124, :_reduce_110,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  6, 105, :_reduce_128,
  2, 128, :_reduce_129,
  2, 128, :_reduce_130,
  1, 129, :_reduce_none,
  0, 129, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_134,
  1, 108, :_reduce_135,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  4, 137, :_reduce_145,
  4, 136, :_reduce_146,
  4, 135, :_reduce_147,
  4, 134, :_reduce_148,
  4, 130, :_reduce_149,
  4, 133, :_reduce_150,
  4, 131, :_reduce_151,
  4, 132, :_reduce_152,
  1, 138, :_reduce_153,
  1, 75, :_reduce_154,
  1, 75, :_reduce_155,
  1, 100, :_reduce_156,
  0, 100, :_reduce_none ]

racc_reduce_n = 158

racc_shift_n = 297

racc_token_table = {
  false => 0,
  :error => 1,
  :ASSIGN => 2,
  :AT_SYM => 3,
  :COMMENT => 4,
  :JUMP => 5,
  :IO_METHOD => 6,
  :INPUT => 7,
  :OUTPUT => 8,
  :NUMREG => 9,
  :POSREG => 10,
  :VREG => 11,
  :SREG => 12,
  :TIME_SEGMENT => 13,
  :ARG => 14,
  :MOVE => 15,
  :DOT => 16,
  :TO => 17,
  :AT => 18,
  :TERM => 19,
  :OFFSET => 20,
  :SKIP => 21,
  :SEMICOLON => 22,
  :NEWLINE => 23,
  :STRING => 24,
  :REAL => 25,
  :DIGIT => 26,
  :WORD => 27,
  :EQUAL => 28,
  :EEQUAL => 29,
  :NOTEQUAL => 30,
  :GTE => 31,
  :LTE => 32,
  :LT => 33,
  :GT => 34,
  :BANG => 35,
  :PLUS => 36,
  :MINUS => 37,
  :STAR => 38,
  :SLASH => 39,
  :DIV => 40,
  :AND => 41,
  :OR => 42,
  :MOD => 43,
  :IF => 44,
  :ELSE => 45,
  :END => 46,
  :UNLESS => 47,
  :FOR => 48,
  :IN => 49,
  :WHILE => 50,
  :WAIT_FOR => 51,
  :WAIT_UNTIL => 52,
  :TIMEOUT => 53,
  :AFTER => 54,
  :FANUC_USE => 55,
  :FANUC_SET => 56,
  :NAMESPACE => 57,
  :CASE => 58,
  :WHEN => 59,
  :INDIRECT => 60,
  :POSITION => 61,
  :EVAL => 62,
  :TIMER => 63,
  :TIMER_METHOD => 64,
  "(" => 65,
  "," => 66,
  ")" => 67,
  ":" => 68,
  "[" => 69,
  "]" => 70 }

racc_nt_base = 71

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ASSIGN",
  "AT_SYM",
  "COMMENT",
  "JUMP",
  "IO_METHOD",
  "INPUT",
  "OUTPUT",
  "NUMREG",
  "POSREG",
  "VREG",
  "SREG",
  "TIME_SEGMENT",
  "ARG",
  "MOVE",
  "DOT",
  "TO",
  "AT",
  "TERM",
  "OFFSET",
  "SKIP",
  "SEMICOLON",
  "NEWLINE",
  "STRING",
  "REAL",
  "DIGIT",
  "WORD",
  "EQUAL",
  "EEQUAL",
  "NOTEQUAL",
  "GTE",
  "LTE",
  "LT",
  "GT",
  "BANG",
  "PLUS",
  "MINUS",
  "STAR",
  "SLASH",
  "DIV",
  "AND",
  "OR",
  "MOD",
  "IF",
  "ELSE",
  "END",
  "UNLESS",
  "FOR",
  "IN",
  "WHILE",
  "WAIT_FOR",
  "WAIT_UNTIL",
  "TIMEOUT",
  "AFTER",
  "FANUC_USE",
  "FANUC_SET",
  "NAMESPACE",
  "CASE",
  "WHEN",
  "INDIRECT",
  "POSITION",
  "EVAL",
  "TIMER",
  "TIMER_METHOD",
  "\"(\"",
  "\",\"",
  "\")\"",
  "\":\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "program",
  "statements",
  "statement",
  "terminator",
  "block",
  "definition",
  "namespace",
  "assignment",
  "motion_statement",
  "jump",
  "io_method",
  "label_definition",
  "conditional",
  "inline_conditional",
  "forloop",
  "while_loop",
  "program_call",
  "use_statement",
  "set_statement",
  "wait_statement",
  "case_statement",
  "fanuc_eval",
  "timer_method",
  "var",
  "indirectable",
  "expression",
  "wait_modifiers",
  "wait_modifier",
  "swallow_newlines",
  "label",
  "args",
  "arg",
  "number",
  "indirect_thing",
  "else_block",
  "minmax_val",
  "integer",
  "case_conditions",
  "case_else",
  "case_condition",
  "case_allowed_condition",
  "case_allowed_statement",
  "inlineable",
  "motion_modifiers",
  "motion_modifier",
  "speed",
  "time",
  "time_seg_actions",
  "optional_lpos_arg",
  "definable",
  "namespaces",
  "factor",
  "operator",
  "relop",
  "addop",
  "mulop",
  "signed_number",
  "sign",
  "numreg",
  "output",
  "input",
  "posreg",
  "position",
  "vreg",
  "argument",
  "timer",
  "comment" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 @interpreter.nodes = val[0].flatten 
    result
end

def _reduce_3(val, _values, result)
 result = val 
    result
end

def _reduce_4(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_5(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_6(val, _values, result)
 result = [val[0]] << val[1] 
    result
end

def _reduce_7(val, _values, result)
 result = [val[0]] 
    result
end

# reduce 8 omitted

def _reduce_9(val, _values, result)
 result = val[0] 
    result
end

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

def _reduce_28(val, _values, result)
 result = TimerMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_29(val, _values, result)
 result = EvalNode.new(val[1]) 
    result
end

def _reduce_30(val, _values, result)
 result = WaitForNode.new(val[2], val[4]) 
    result
end

def _reduce_31(val, _values, result)
 result = WaitUntilNode.new(val[2],val[4]) 
    result
end

# reduce 32 omitted

def _reduce_33(val, _values, result)
 result = val[0] 
    result
end

def _reduce_34(val, _values, result)
 result = val[0].merge(val[1]) 
    result
end

def _reduce_35(val, _values, result)
 result = { label: val[4] } 
    result
end

def _reduce_36(val, _values, result)
 result = { timeout: [val[4],val[6]] } 
    result
end

def _reduce_37(val, _values, result)
 result = val[1] 
    result
end

def _reduce_38(val, _values, result)
 result = UseNode.new(val[0],val[1]) 
    result
end

def _reduce_39(val, _values, result)
 result = SetNode.new(val[0],val[1],val[3]) 
    result
end

def _reduce_40(val, _values, result)
 result = SetNode.new(val[0],nil,val[1]) 
    result
end

def _reduce_41(val, _values, result)
 result = CallNode.new(val[0],val[2]) 
    result
end

def _reduce_42(val, _values, result)
 result = [val[0]] 
    result
end

def _reduce_43(val, _values, result)
 result = val[0] << val[2] 
    result
end

def _reduce_44(val, _values, result)
 result = [] 
    result
end

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
 result = IOMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_48(val, _values, result)
 result = IOMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_49(val, _values, result)
 result = JumpNode.new(val[1]) 
    result
end

def _reduce_50(val, _values, result)
 result = ConditionalNode.new("if",val[1],val[2],val[3]) 
    result
end

def _reduce_51(val, _values, result)
 result = ConditionalNode.new("unless",val[1],val[2],val[3]) 
    result
end

def _reduce_52(val, _values, result)
 result = ForNode.new(val[1],val[4],val[6],val[8]) 
    result
end

def _reduce_53(val, _values, result)
 result = WhileNode.new(val[1],val[2]) 
    result
end

# reduce 54 omitted

# reduce 55 omitted

def _reduce_56(val, _values, result)
 result = NamespaceNode.new(val[1],val[2]) 
    result
end

def _reduce_57(val, _values, result)
 result = CaseNode.new(val[1],val[3],val[4]) 
    result
end

def _reduce_58(val, _values, result)
 result = val 
    result
end

def _reduce_59(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_60(val, _values, result)
 result = CaseConditionNode.new(val[1],val[3]) 
    result
end

# reduce 61 omitted

# reduce 62 omitted

def _reduce_63(val, _values, result)
 result = CaseConditionNode.new(nil,val[2]) 
    result
end

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

def _reduce_67(val, _values, result)
 result = InlineConditionalNode.new("if",val[2],val[0]) 
    result
end

def _reduce_68(val, _values, result)
 result = InlineConditionalNode.new("unless",val[2],val[0]) 
    result
end

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

def _reduce_73(val, _values, result)
 result = val[1] 
    result
end

def _reduce_74(val, _values, result)
 result = [] 
    result
end

def _reduce_75(val, _values, result)
 result = MotionNode.new(val[0],val[5],val[7]) 
    result
end

def _reduce_76(val, _values, result)
 result = val 
    result
end

def _reduce_77(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_78(val, _values, result)
 result = SpeedNode.new(val[4]) 
    result
end

def _reduce_79(val, _values, result)
 result = TerminationNode.new(val[4]) 
    result
end

def _reduce_80(val, _values, result)
 result = OffsetNode.new(val[4]) 
    result
end

def _reduce_81(val, _values, result)
 result = TimeNode.new(val[2],val[4],val[6]) 
    result
end

def _reduce_82(val, _values, result)
 result = SkipNode.new(val[4],val[5]) 
    result
end

def _reduce_83(val, _values, result)
 result = val[1] 
    result
end

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

def _reduce_91(val, _values, result)
 result = { speed: val[0], units: val[2] } 
    result
end

def _reduce_92(val, _values, result)
 result = { speed: val[0], units: nil } 
    result
end

def _reduce_93(val, _values, result)
 result = LabelDefinitionNode.new(val[0]) 
    result
end

def _reduce_94(val, _values, result)
 result = DefinitionNode.new(val[0],val[2]) 
    result
end

def _reduce_95(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_96(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_97(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_98(val, _values, result)
 result = VarNode.new(val[0]) 
    result
end

def _reduce_99(val, _values, result)
 result = VarMethodNode.new(val[0],val[2]) 
    result
end

def _reduce_100(val, _values, result)
 result = NamespacedVarNode.new(val[0],val[3]) 
    result
end

def _reduce_101(val, _values, result)
 result = val 
    result
end

def _reduce_102(val, _values, result)
 result = val[0] << val[3] 
    result
end

def _reduce_103(val, _values, result)
 result = val[0] 
    result
end

def _reduce_104(val, _values, result)
 result = val[0] 
    result
end

def _reduce_105(val, _values, result)
 result = val[0] 
    result
end

def _reduce_106(val, _values, result)
 val[1].grouped = true; result = val[1] 
    result
end

def _reduce_107(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_108(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_109(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_110(val, _values, result)
 result = ExpressionNode.new(val[1],val[0],nil) 
    result
end

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

def _reduce_128(val, _values, result)
 result = IndirectNode.new(val[2].to_sym, val[4]) 
    result
end

def _reduce_129(val, _values, result)
 val[1] = val[1].to_i * -1 if val[0] == "-"; result = DigitNode.new(val[1]) 
    result
end

def _reduce_130(val, _values, result)
 val[1] = val[1].to_f * -1 if val[0] == "-"; result = RealNode.new(val[1]) 
    result
end

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

def _reduce_134(val, _values, result)
 result = RealNode.new(val[0]) 
    result
end

def _reduce_135(val, _values, result)
 result = DigitNode.new(val[0]) 
    result
end

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

def _reduce_145(val, _values, result)
 result = TimerNode.new(val[2].to_i) 
    result
end

def _reduce_146(val, _values, result)
 result = ArgumentNode.new(val[2].to_i) 
    result
end

def _reduce_147(val, _values, result)
 result = VisionRegisterNode.new(val[2].to_i) 
    result
end

def _reduce_148(val, _values, result)
 result = PositionNode.new(val[2].to_i) 
    result
end

def _reduce_149(val, _values, result)
 result = NumregNode.new(val[2].to_i) 
    result
end

def _reduce_150(val, _values, result)
 result = PosregNode.new(val[2].to_i) 
    result
end

def _reduce_151(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_152(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_153(val, _values, result)
 result = CommentNode.new(val[0]) 
    result
end

def _reduce_154(val, _values, result)
 result = TerminatorNode.new 
    result
end

def _reduce_155(val, _values, result)
 result = val[0] 
    result
end

def _reduce_156(val, _values, result)
 result = TerminatorNode.new 
    result
end

# reduce 157 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module TPPlus
