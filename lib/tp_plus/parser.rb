#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module TPPlus
  class Parser < Racc::Parser


  include TPPlus::Nodes

  attr_reader :interpreter
  def initialize(scanner, interpreter = TPPlus::Interpreter.new)
    @scanner       = scanner
    @interpreter   = interpreter
    super()
  end

  def next_token
    t = @scanner.next_token
    @interpreter.line_count += 1 if t && t[0] == :NEWLINE

    #puts t.inspect
    t
  end

  def parse
    do_parse
    @interpreter
  rescue Racc::ParseError => e
    raise "Parse error on line #{@interpreter.line_count+1}: #{e}"
  end
##### State transition tables begin ###

racc_action_table = [
    52,    28,    30,    22,    21,    22,    38,    37,    40,    30,
    28,    30,    22,    21,    27,    53,    28,    30,    22,    21,
    21,    31,    22,    27,    20,    40,   171,    40,    31,    27,
    31,   194,    40,    20,   114,    47,    31,    47,   203,    20,
   171,    23,    47,   171,    24,    17,    18,   132,    19,    25,
    23,    51,   204,    24,    17,    18,    23,    19,    25,    24,
    17,    18,   130,    19,    25,    28,    30,    22,    21,    40,
    30,    28,    30,    22,    21,   134,    30,    30,    27,    47,
    28,    30,    22,    21,    27,    31,   134,   203,    20,    31,
    63,    31,    40,    27,    20,    31,    31,    40,    64,    65,
    31,   204,    47,    20,   138,    23,   139,    47,    24,    17,
    18,    23,    19,    25,    24,    17,    18,   129,    19,    25,
    23,   124,   125,    24,    17,    18,    40,    19,    25,   107,
   106,   104,   105,   102,   128,   103,    47,   101,    71,    72,
    75,    76,    73,    74,    77,    78,    38,    37,    40,    40,
    79,    40,    40,    59,   -48,   155,    60,   -48,    47,    47,
   187,    47,    47,   138,   127,   184,   185,   186,    77,    78,
    81,    82,    83,    85,    79,    84,    81,    82,    83,    85,
   -49,    84,   -47,   -49,   -50,   -47,   126,   -50,    38,    37,
    40,    38,    37,    40,    38,    37,    40,    38,    37,    40,
    38,    37,    40,    38,    37,    40,    38,    37,    87,    86,
   120,   143,   144,   145,   146,   147,   148,   149,   150,   119,
   152,   114,   114,   159,   160,   161,   162,   163,   164,   165,
   166,   167,   114,   131,    40,   109,   108,   176,    51,    53,
    68,   181,   181,   114,    66,   188,   189,   190,   191,    62,
    61,    40,    40,   201,    55,   205,   206,   207,   208,    40,
    33,   213 ]

racc_action_check = [
    20,    56,    56,    56,    56,   169,   188,   188,   188,   172,
   134,   134,   134,   134,    56,    20,     4,     4,     4,     4,
   208,    56,   168,   134,    56,    60,   169,    63,   172,     4,
   134,   188,   119,   134,   156,    60,     4,    63,   193,     4,
   208,    56,   119,   168,    56,    56,    56,   107,    56,    56,
   134,    20,   193,   134,   134,   134,     4,   134,   134,     4,
     4,     4,   105,     4,     4,    57,    57,    57,    57,   120,
   110,    34,   175,    34,    34,   111,     2,    35,    57,   120,
     0,     0,     0,     0,    34,    57,   112,   205,    57,   110,
    29,   175,    23,     0,    34,     2,    35,    59,    29,    29,
     0,   205,    23,     0,   113,    57,   117,    59,    57,    57,
    57,    34,    57,    57,    34,    34,    34,   104,    34,    34,
     0,    88,    88,     0,     0,     0,    18,     0,     0,    52,
    52,    52,    52,    52,   103,    52,    18,    52,    41,    41,
    41,    41,    41,    41,    41,    41,    52,    52,    69,    24,
    41,    80,    70,    26,     6,   136,    26,     6,    69,    24,
   183,    80,    70,   136,   102,   183,   183,   183,   121,   121,
    42,    42,    42,    42,   121,    42,   122,   122,   122,   122,
     9,   122,     8,     9,    13,     8,   101,    13,   125,   125,
   125,   191,   191,   191,    51,    51,    51,   189,   189,   189,
    19,    19,    19,   138,   138,   138,    17,    17,    46,    46,
    65,   126,   127,   128,   129,   130,   131,   132,   133,    64,
   135,    61,    58,   139,   143,   144,   145,   146,   147,   148,
   149,   153,   155,   106,   159,    55,    53,   170,   171,    40,
    36,   176,   179,   181,    33,   184,   185,   186,   187,    28,
    27,   190,    25,   192,    22,   195,   196,   197,   198,    21,
     1,   210 ]

racc_action_pointer = [
    77,   260,    72,   nil,    13,   nil,   111,   nil,   139,   137,
   nil,   nil,   nil,   141,   nil,   nil,   nil,   182,   100,   176,
    -2,   233,   251,    66,   123,   226,   110,   233,   223,    63,
   nil,   nil,   nil,   244,    68,    73,   214,   nil,   nil,   nil,
   222,   109,   133,   nil,   nil,   nil,   184,   nil,   nil,   nil,
   nil,   170,   122,   210,   nil,   209,    -2,    62,   199,    71,
    -1,   198,   nil,     1,   192,   183,   nil,   nil,   nil,   122,
   126,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   125,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    67,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   130,   108,    78,    61,     6,   177,    -9,   nil,   nil,
    66,    31,    42,    52,   nil,   nil,   nil,    88,   nil,     6,
    43,   133,   139,   nil,   nil,   164,   186,   187,   188,   189,
   190,   191,   192,   173,     7,   175,   111,   nil,   179,   170,
   nil,   nil,   nil,   167,   168,   169,   170,   171,   172,   173,
   nil,   nil,   nil,   186,   nil,   209,    11,   nil,   nil,   208,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,     0,
   183,   185,     5,   nil,   nil,    68,   224,   nil,   nil,   225,
   nil,   220,   nil,   146,   192,   193,   194,   195,   -18,   173,
   225,   167,   199,    10,   nil,   200,   202,   203,   203,   nil,
   nil,   nil,   nil,   nil,   nil,    59,   nil,   nil,    14,   nil,
   207,   nil,   nil,   nil ]

racc_action_default = [
    -1,  -126,    -2,    -3,    -7,   -10,   -11,   -12,   -13,   -14,
   -15,   -16,   -17,   -18,   -19,   -20,   -21,  -126,  -103,  -126,
   -77,  -126,  -126,  -103,  -103,  -126,  -126,  -126,  -126,  -126,
  -121,  -122,  -123,  -126,    -5,    -6,  -126,  -104,  -105,   -23,
   -77,   -78,   -80,   -82,   -98,   -99,  -126,  -102,   -24,   -60,
   -61,   -28,  -126,  -126,   -31,  -126,    -8,    -8,  -125,  -103,
  -103,  -125,   -71,  -103,  -126,  -126,   214,    -4,   -22,  -103,
  -103,   -84,   -85,   -86,   -87,   -88,   -89,   -90,   -91,   -92,
  -103,   -93,   -94,   -95,   -96,   -97,  -100,  -101,  -126,   -26,
   -29,   -30,   -72,  -106,  -107,  -108,  -109,  -110,  -111,  -112,
  -113,  -126,  -126,  -126,  -126,  -126,  -126,  -126,   -76,   -32,
    -9,   -52,   -52,  -126,  -124,   -45,   -46,  -126,   -73,  -103,
  -103,   -79,   -81,   -83,   -25,  -126,  -126,  -126,  -126,  -126,
  -126,  -126,  -126,  -126,    -8,  -126,   -42,   -36,  -126,  -126,
   -74,   -75,   -27,  -126,  -126,  -126,  -126,  -126,  -126,  -126,
   -33,   -51,   -34,  -126,   -37,  -125,  -125,   -39,   -40,  -126,
  -114,  -115,  -116,  -117,  -118,  -119,  -120,   -35,  -126,  -126,
  -126,  -126,  -126,   -43,   -44,  -126,  -126,   -41,   -38,   -53,
   -54,  -125,   -55,  -126,  -126,  -126,  -126,  -126,  -126,  -126,
  -126,  -126,  -126,  -126,   -67,  -126,  -126,  -126,  -126,   -64,
   -65,   -56,   -66,   -69,   -70,  -126,   -57,   -58,  -126,   -68,
  -126,   -62,   -63,   -59 ]

racc_goto_table = [
    29,    36,    89,    48,    29,   113,    34,   137,   117,   111,
   112,     2,   173,   173,   202,    35,   156,    39,   153,    50,
    88,    54,    56,    57,   180,    58,   209,   182,   172,   175,
   154,   133,   135,   136,    29,    90,    99,   174,   174,    34,
   212,   179,    67,   192,   198,   210,     1,    92,   121,    69,
   122,    91,   211,   123,    93,    94,    29,    29,   115,   116,
    95,    96,   118,    97,    98,   100,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   142,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   151,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   168,   169,   nil,   nil,   nil,   nil,   nil,    90,
   nil,   nil,   nil,   nil,    34,   nil,   nil,   nil,   140,   141,
   nil,   nil,   157,   nil,   nil,    91,   nil,   nil,   183,   nil,
   nil,   nil,   nil,   nil,    29,   nil,   nil,   nil,   158,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   170,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   193,   196,   nil,   200,   177,   nil,   nil,   178,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   195,    50,
   197,   199 ]

racc_goto_check = [
    23,    18,    22,    20,    23,    25,     4,    28,    25,     5,
     5,     2,    14,    14,    37,     2,    29,    19,    27,    23,
    21,    23,    19,    19,    33,    23,    37,    33,    30,    30,
    28,    24,    24,    26,    23,    18,    18,     9,     9,     4,
    10,    32,     3,    34,    35,    36,     1,    38,    39,    40,
    41,    23,    14,    43,    47,    48,    23,    23,    19,    19,
    49,    50,    19,    51,    52,    53,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    25,    25,   nil,   nil,   nil,   nil,   nil,    18,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,    19,    19,
   nil,   nil,    18,   nil,   nil,    23,   nil,   nil,    25,   nil,
   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,    23,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    18,    20,   nil,    18,     4,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,    23,
    23,    23 ]

racc_goto_pointer = [
   nil,    46,    11,     8,     4,   -47,   nil,   nil,   nil,  -131,
  -168,   nil,   nil,   nil,  -156,   nil,   nil,   nil,   -16,    -1,
   -16,   -31,   -49,     0,   -80,   -53,   -80,  -118,  -106,  -122,
  -140,   nil,  -135,  -152,  -145,  -147,  -163,  -179,    -5,   -21,
     8,   -20,   nil,   -27,   nil,   nil,   nil,     2,     3,     8,
     9,    11,    12,    13,   nil ]

racc_goto_default = [
   nil,   nil,   110,     3,     4,   nil,     5,     6,     7,     8,
     9,    10,    11,    12,    13,    14,    15,    16,    49,   nil,
   nil,   nil,   nil,    45,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41,
   nil,    42,    70,    43,    80,    44,    46,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    32 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 59, :_reduce_none,
  1, 59, :_reduce_2,
  1, 60, :_reduce_3,
  3, 60, :_reduce_4,
  2, 60, :_reduce_5,
  2, 60, :_reduce_6,
  1, 60, :_reduce_7,
  0, 63, :_reduce_none,
  1, 63, :_reduce_9,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  3, 74, :_reduce_22,
  2, 74, :_reduce_23,
  2, 73, :_reduce_24,
  4, 72, :_reduce_25,
  1, 79, :_reduce_26,
  3, 79, :_reduce_27,
  0, 79, :_reduce_28,
  1, 80, :_reduce_none,
  1, 80, :_reduce_none,
  2, 68, :_reduce_31,
  3, 67, :_reduce_32,
  5, 70, :_reduce_33,
  5, 70, :_reduce_34,
  6, 75, :_reduce_35,
  1, 84, :_reduce_36,
  2, 84, :_reduce_37,
  5, 86, :_reduce_38,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  4, 85, :_reduce_41,
  0, 85, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  3, 71, :_reduce_45,
  3, 71, :_reduce_46,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  2, 82, :_reduce_51,
  0, 82, :_reduce_none,
  8, 66, :_reduce_53,
  1, 90, :_reduce_54,
  2, 90, :_reduce_55,
  6, 91, :_reduce_56,
  6, 91, :_reduce_57,
  6, 91, :_reduce_58,
  8, 91, :_reduce_59,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  2, 92, :_reduce_66,
  1, 92, :_reduce_67,
  3, 92, :_reduce_68,
  1, 95, :_reduce_69,
  1, 95, :_reduce_70,
  2, 69, :_reduce_71,
  3, 64, :_reduce_72,
  3, 65, :_reduce_73,
  4, 65, :_reduce_74,
  4, 65, :_reduce_75,
  3, 81, :_reduce_76,
  1, 81, :_reduce_77,
  1, 77, :_reduce_78,
  3, 77, :_reduce_79,
  1, 97, :_reduce_80,
  3, 97, :_reduce_81,
  1, 99, :_reduce_none,
  3, 99, :_reduce_83,
  1, 98, :_reduce_none,
  1, 98, :_reduce_none,
  1, 98, :_reduce_none,
  1, 98, :_reduce_none,
  1, 98, :_reduce_none,
  1, 98, :_reduce_none,
  1, 100, :_reduce_none,
  1, 100, :_reduce_none,
  1, 100, :_reduce_none,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  1, 101, :_reduce_none,
  1, 101, :_reduce_none,
  2, 103, :_reduce_100,
  2, 103, :_reduce_101,
  1, 104, :_reduce_none,
  0, 104, :_reduce_none,
  1, 76, :_reduce_104,
  1, 76, :_reduce_105,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  4, 111, :_reduce_114,
  4, 110, :_reduce_115,
  4, 109, :_reduce_116,
  4, 105, :_reduce_117,
  4, 108, :_reduce_118,
  4, 106, :_reduce_119,
  4, 107, :_reduce_120,
  1, 112, :_reduce_121,
  1, 62, :_reduce_122,
  1, 62, :_reduce_123,
  1, 83, :_reduce_124,
  0, 83, :_reduce_none ]

racc_reduce_n = 126

racc_shift_n = 214

racc_token_table = {
  false => 0,
  :error => 1,
  :ASSIGN => 2,
  :AT_SYM => 3,
  :COMMENT => 4,
  :JUMP => 5,
  :IO_METHOD => 6,
  :INPUT => 7,
  :OUTPUT => 8,
  :NUMREG => 9,
  :POSREG => 10,
  :VREG => 11,
  :SREG => 12,
  :POSITION => 13,
  :TIME_SEGMENT => 14,
  :ARG => 15,
  :MOVE => 16,
  :DOT => 17,
  :TO => 18,
  :AT => 19,
  :TERM => 20,
  :OFFSET => 21,
  :SEMICOLON => 22,
  :NEWLINE => 23,
  :REAL => 24,
  :DIGIT => 25,
  :WORD => 26,
  :EQUAL => 27,
  :UNITS => 28,
  :EEQUAL => 29,
  :NOTEQUAL => 30,
  :GTE => 31,
  :LTE => 32,
  :LT => 33,
  :GT => 34,
  :PLUS => 35,
  :MINUS => 36,
  :STAR => 37,
  :SLASH => 38,
  :DIV => 39,
  :AND => 40,
  :OR => 41,
  :MOD => 42,
  :IF => 43,
  :ELSE => 44,
  :END => 45,
  :UNLESS => 46,
  :WAIT_FOR => 47,
  :WAIT_UNTIL => 48,
  :MAX_SPEED => 49,
  :FANUC_USE => 50,
  :CASE => 51,
  :WHEN => 52,
  "(" => 53,
  ")" => 54,
  "," => 55,
  "[" => 56,
  "]" => 57 }

racc_nt_base = 58

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ASSIGN",
  "AT_SYM",
  "COMMENT",
  "JUMP",
  "IO_METHOD",
  "INPUT",
  "OUTPUT",
  "NUMREG",
  "POSREG",
  "VREG",
  "SREG",
  "POSITION",
  "TIME_SEGMENT",
  "ARG",
  "MOVE",
  "DOT",
  "TO",
  "AT",
  "TERM",
  "OFFSET",
  "SEMICOLON",
  "NEWLINE",
  "REAL",
  "DIGIT",
  "WORD",
  "EQUAL",
  "UNITS",
  "EEQUAL",
  "NOTEQUAL",
  "GTE",
  "LTE",
  "LT",
  "GT",
  "PLUS",
  "MINUS",
  "STAR",
  "SLASH",
  "DIV",
  "AND",
  "OR",
  "MOD",
  "IF",
  "ELSE",
  "END",
  "UNLESS",
  "WAIT_FOR",
  "WAIT_UNTIL",
  "MAX_SPEED",
  "FANUC_USE",
  "CASE",
  "WHEN",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "program",
  "statements",
  "statement",
  "terminator",
  "block",
  "definition",
  "assignment",
  "motion_statement",
  "jump",
  "io_method",
  "label_definition",
  "conditional",
  "inline_conditional",
  "program_call",
  "use_statement",
  "wait_statement",
  "case_statement",
  "number",
  "expression",
  "indirectable",
  "args",
  "arg",
  "var",
  "else_block",
  "swallow_newlines",
  "case_conditions",
  "case_else",
  "case_condition",
  "case_allowed_condition",
  "case_allowed_statement",
  "inlineable",
  "motion_modifiers",
  "motion_modifier",
  "speed",
  "time",
  "time_seg_actions",
  "units",
  "definable",
  "simple_expression",
  "relop",
  "term",
  "addop",
  "factor",
  "mulop",
  "signed_number",
  "sign",
  "numreg",
  "output",
  "input",
  "posreg",
  "position",
  "vreg",
  "argument",
  "comment" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 @interpreter.nodes = val[0].flatten 
    result
end

def _reduce_3(val, _values, result)
 result = val 
    result
end

def _reduce_4(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_5(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_6(val, _values, result)
 result = [val[0]] << val[1] 
    result
end

def _reduce_7(val, _values, result)
 result = [val[0]] 
    result
end

# reduce 8 omitted

def _reduce_9(val, _values, result)
 result = val[0] 
    result
end

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

def _reduce_22(val, _values, result)
 result = WaitForNode.new(val[1], val[2]) 
    result
end

def _reduce_23(val, _values, result)
 result = WaitUntilNode.new(val[1]) 
    result
end

def _reduce_24(val, _values, result)
 result = UseNode.new(val[0],val[1]) 
    result
end

def _reduce_25(val, _values, result)
 result = CallNode.new(val[0],val[2]) 
    result
end

def _reduce_26(val, _values, result)
 result = [val[0]] 
    result
end

def _reduce_27(val, _values, result)
 result = val[0] << val[2] 
    result
end

def _reduce_28(val, _values, result)
 result = [] 
    result
end

# reduce 29 omitted

# reduce 30 omitted

def _reduce_31(val, _values, result)
 result = IOMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_32(val, _values, result)
 result = JumpNode.new(val[2]) 
    result
end

def _reduce_33(val, _values, result)
 result = ConditionalNode.new("if",val[1],val[2],val[3]) 
    result
end

def _reduce_34(val, _values, result)
 result = ConditionalNode.new("unless",val[1],val[2],val[3]) 
    result
end

def _reduce_35(val, _values, result)
 result = CaseNode.new(val[1],val[3],val[4]) 
    result
end

def _reduce_36(val, _values, result)
 result = val 
    result
end

def _reduce_37(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_38(val, _values, result)
 result = CaseConditionNode.new(val[1],val[3]) 
    result
end

# reduce 39 omitted

# reduce 40 omitted

def _reduce_41(val, _values, result)
 result = CaseConditionNode.new(nil,val[2]) 
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

def _reduce_45(val, _values, result)
 result = InlineConditionalNode.new("if",val[2],val[0]) 
    result
end

def _reduce_46(val, _values, result)
 result = InlineConditionalNode.new("unless",val[2],val[0]) 
    result
end

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

def _reduce_51(val, _values, result)
 result = val[1] 
    result
end

# reduce 52 omitted

def _reduce_53(val, _values, result)
 result = MotionNode.new(val[0],val[5],val[7]) 
    result
end

def _reduce_54(val, _values, result)
 result = val 
    result
end

def _reduce_55(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_56(val, _values, result)
 result = SpeedNode.new(val[4]) 
    result
end

def _reduce_57(val, _values, result)
 result = TerminationNode.new(val[4]) 
    result
end

def _reduce_58(val, _values, result)
 result = OffsetNode.new(val[4]) 
    result
end

def _reduce_59(val, _values, result)
 result = TimeNode.new(val[2],val[4],val[6]) 
    result
end

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

def _reduce_66(val, _values, result)
 result = [val[0],val[1]] 
    result
end

def _reduce_67(val, _values, result)
 result = [:max_speed,:max_speed] 
    result
end

def _reduce_68(val, _values, result)
 result = [val[0],val[2]] 
    result
end

def _reduce_69(val, _values, result)
 result = UnitsNode.new(val[0]) 
    result
end

def _reduce_70(val, _values, result)
 result = UnitsNode.new(val[0]) 
    result
end

def _reduce_71(val, _values, result)
 result = LabelDefinitionNode.new(val[1]) 
    result
end

def _reduce_72(val, _values, result)
 result = DefinitionNode.new(val[0],val[2]) 
    result
end

def _reduce_73(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_74(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_75(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_76(val, _values, result)
 result = VarMethodNode.new(val[0],val[2]) 
    result
end

def _reduce_77(val, _values, result)
 result = VarNode.new(val[0]) 
    result
end

def _reduce_78(val, _values, result)
 result = val[0] 
    result
end

def _reduce_79(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_80(val, _values, result)
 result = val[0] 
    result
end

def _reduce_81(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 82 omitted

def _reduce_83(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

def _reduce_100(val, _values, result)
 val[1] = val[1].to_i * -1 if val[0] == "-"; result = DigitNode.new(val[1]) 
    result
end

def _reduce_101(val, _values, result)
 val[1] = val[1].to_f * -1 if val[0] == "-"; result = RealNode.new(val[1]) 
    result
end

# reduce 102 omitted

# reduce 103 omitted

def _reduce_104(val, _values, result)
 result = DigitNode.new(val[0]) 
    result
end

def _reduce_105(val, _values, result)
 result = RealNode.new(val[0]) 
    result
end

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

def _reduce_114(val, _values, result)
 result = ArgumentNode.new(val[2].to_i) 
    result
end

def _reduce_115(val, _values, result)
 result = VisionRegisterNode.new(val[2].to_i) 
    result
end

def _reduce_116(val, _values, result)
 result = PositionNode.new(val[2].to_i) 
    result
end

def _reduce_117(val, _values, result)
 result = NumregNode.new(val[2].to_i) 
    result
end

def _reduce_118(val, _values, result)
 result = PosregNode.new(val[2].to_i) 
    result
end

def _reduce_119(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_120(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_121(val, _values, result)
 result = CommentNode.new(val[0]) 
    result
end

def _reduce_122(val, _values, result)
 result = TerminatorNode.new 
    result
end

def _reduce_123(val, _values, result)
 result = val[0] 
    result
end

def _reduce_124(val, _values, result)
 result = TerminatorNode.new 
    result
end

# reduce 125 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module TPPlus
