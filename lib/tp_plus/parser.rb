#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module TPPlus
  class Parser < Racc::Parser


  include TPPlus::Nodes

  attr_reader :interpreter
  def initialize(scanner, interpreter = TPPlus::Interpreter.new)
    @scanner       = scanner
    @interpreter   = interpreter
    super()
  end

  def next_token
    t = @scanner.next_token
    @interpreter.line_count += 1 if t == [:NEWLINE,"\n"]

    puts t.inspect
    t
  end

  def parse
    do_parse
    @interpreter
  rescue Racc::ParseError => e
    raise "Parse error on line #{@interpreter.line_count+1}: #{e}"
  end
##### State transition tables begin ###

racc_action_table = [
    31,    21,    24,    16,    15,    45,    24,    24,    21,    24,
    16,    15,    20,    21,    24,    16,    15,   -33,    25,    20,
   -33,    14,    25,    25,    20,    25,    47,    97,    14,    98,
    25,    77,    78,    14,    48,    49,   -32,    79,    17,   -32,
    99,    18,    23,    30,   -31,    17,    92,   -31,    18,    23,
    17,    41,    33,    18,    23,    21,    24,    16,    15,   101,
    21,    24,    16,    15,    41,    33,    20,    21,    24,    16,
    15,    20,    25,    43,    91,    14,    44,    25,    20,    89,
    14,    65,    63,    64,    25,    96,    62,    14,    81,    82,
    83,    85,    17,    84,   101,    18,    23,    17,    41,    33,
    18,    23,    41,    33,    17,    41,    33,    18,    23,    71,
    72,    75,    76,    73,    74,    77,    78,    81,    82,    83,
    85,    79,    84,    41,    33,    41,    33,    41,    33,    41,
    33,    41,    33,    41,    33,    41,    33,   127,   128,    41,
    33,    94,    95,   106,    33,    34,    66,   110,   111,   112,
   113,   114,    51,    27,    50,   116,    33,   118,   119,   120,
   121,   122,   125,   125,    46,   129,   130,    41,    41,   134,
   135,   136 ]

racc_action_check = [
    14,     4,     4,     4,     4,    20,    67,    29,    35,    35,
    35,    35,     4,    28,     2,    28,    28,     9,     4,    35,
     9,     4,    67,    29,    28,    35,    22,    63,    35,    64,
     2,   102,   102,    28,    22,    22,     6,   102,     4,     6,
    65,     4,     4,    14,     8,    35,    49,     8,    35,    35,
    28,    91,    91,    28,    28,   101,   101,   101,   101,    68,
     0,     0,     0,     0,    17,    17,   101,    42,    42,    42,
    42,     0,   101,    19,    48,   101,    19,     0,    42,    45,
     0,    31,    31,    31,    42,    62,    31,    42,    37,    37,
    37,    37,   101,    37,    86,   101,   101,     0,    95,    95,
     0,     0,    92,    92,    42,    30,    30,    42,    42,    36,
    36,    36,    36,    36,    36,    36,    36,   103,   103,   103,
   103,    36,   103,    18,    18,    44,    44,    43,    43,    80,
    80,    70,    70,    47,    47,    69,    69,   125,   125,    50,
    50,    53,    53,    89,    15,    16,    34,    96,    97,    98,
    99,   100,    27,     1,    23,   105,   106,   110,   111,   112,
   113,   117,   122,   123,    21,   127,   128,   129,   130,   131,
   132,   133 ]

racc_action_pointer = [
    57,   153,    10,   nil,    -2,   nil,    -4,   nil,     4,   -23,
   nil,   nil,   nil,   nil,    -2,   121,   142,    42,   101,    33,
   -10,   141,     2,   130,   nil,   nil,   nil,   152,    10,     3,
    83,    73,   nil,   nil,   123,     5,    83,    54,   nil,   nil,
   nil,   nil,    64,   105,   103,    63,   nil,   111,    50,    22,
   117,   nil,   nil,    95,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    37,   -21,   -19,    -8,   nil,     2,    18,   113,
   109,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   107,   nil,   nil,   nil,   nil,   nil,    53,   nil,   nil,    98,
   nil,    29,    80,   nil,   nil,    76,   125,   126,   127,   128,
   109,    52,    -1,    83,   nil,   113,   133,   nil,   nil,   nil,
   108,   109,   110,   111,   nil,   nil,   nil,   115,   nil,   nil,
   nil,   nil,   147,   148,   nil,   120,   nil,   120,   121,   145,
   146,   123,   145,   125,   nil,   nil,   nil ]

racc_action_default = [
    -1,   -83,    -2,    -3,    -7,   -10,   -11,   -12,   -13,   -14,
   -15,   -16,   -17,   -18,   -48,   -83,   -83,   -83,   -83,   -83,
   -83,   -83,   -83,   -83,   -80,   -81,   -82,   -83,    -5,    -6,
   -22,   -83,   -25,   -48,   -83,    -8,   -49,   -51,   -53,   -69,
   -70,   -71,    -8,   -83,   -83,   -83,   -42,   -83,   -83,   -83,
   -83,   137,    -4,   -83,   -20,   -23,   -24,   -43,   -72,   -73,
   -74,   -75,   -83,   -83,   -83,   -83,   -26,    -9,   -35,   -83,
   -83,   -55,   -56,   -57,   -58,   -59,   -60,   -61,   -62,   -63,
   -83,   -64,   -65,   -66,   -67,   -68,   -35,   -29,   -30,   -83,
   -44,   -83,   -83,   -47,   -19,   -83,   -83,   -83,   -83,   -83,
   -83,    -8,   -50,   -52,   -54,   -83,   -83,   -45,   -46,   -21,
   -83,   -83,   -83,   -83,   -27,   -34,   -28,   -83,   -76,   -77,
   -78,   -79,   -83,   -36,   -37,   -83,   -38,   -83,   -83,   -83,
   -83,   -83,   -83,   -83,   -39,   -41,   -40 ]

racc_goto_table = [
    22,    68,   100,    55,    22,    54,    35,    42,    86,     2,
    28,   124,   126,    29,   123,    32,    52,    53,     1,   131,
   105,    57,   102,    69,   103,   104,    58,    59,    22,    60,
    56,    61,    87,    88,   nil,    22,    90,    28,   nil,    93,
   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   115,    55,   nil,
   109,   nil,   nil,   nil,   nil,    28,   nil,   nil,   nil,   nil,
   107,   108,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    56,   nil,   nil,   nil,   nil,
   nil,    22,   132,   133,   nil,   nil,   117 ]

racc_goto_check = [
    18,     5,    20,    17,    18,    16,    19,    19,     5,     2,
     4,    23,    23,     2,    22,    18,     3,    15,     1,    24,
    20,    25,    26,    27,    28,    30,    32,    33,    18,    34,
    18,    35,    19,    19,   nil,    18,    19,     4,   nil,    19,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,    17,   nil,
    16,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,
    19,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,    18,    17,    17,   nil,   nil,    18 ]

racc_goto_pointer = [
   nil,    18,     9,   -12,     8,   -34,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -13,   -25,   -27,     0,   -11,
   -66,   nil,  -108,  -111,  -110,   -10,   -47,   -13,   -46,   nil,
   -55,   nil,    -5,    -4,    -2,     0,   nil ]

racc_goto_default = [
   nil,   nil,    67,     3,     4,   nil,     5,     6,     7,     8,
     9,    10,    11,    12,    13,   nil,   nil,    39,    40,   nil,
   nil,    19,   nil,   nil,   nil,   nil,    36,   nil,    37,    70,
    38,    80,   nil,   nil,   nil,   nil,    26 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 51, :_reduce_none,
  1, 51, :_reduce_2,
  1, 52, :_reduce_3,
  3, 52, :_reduce_4,
  2, 52, :_reduce_5,
  2, 52, :_reduce_6,
  1, 52, :_reduce_7,
  0, 55, :_reduce_none,
  1, 55, :_reduce_9,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  4, 64, :_reduce_19,
  1, 65, :_reduce_20,
  3, 65, :_reduce_21,
  0, 65, :_reduce_22,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  2, 60, :_reduce_25,
  3, 59, :_reduce_26,
  5, 62, :_reduce_27,
  5, 62, :_reduce_28,
  3, 63, :_reduce_29,
  3, 63, :_reduce_30,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  2, 70, :_reduce_34,
  0, 70, :_reduce_none,
  7, 58, :_reduce_36,
  1, 72, :_reduce_37,
  2, 72, :_reduce_38,
  5, 73, :_reduce_39,
  5, 73, :_reduce_40,
  2, 74, :_reduce_41,
  2, 61, :_reduce_42,
  3, 56, :_reduce_43,
  3, 57, :_reduce_44,
  4, 57, :_reduce_45,
  4, 57, :_reduce_46,
  3, 57, :_reduce_47,
  1, 68, :_reduce_48,
  1, 69, :_reduce_49,
  3, 69, :_reduce_50,
  1, 76, :_reduce_51,
  3, 76, :_reduce_52,
  1, 78, :_reduce_none,
  3, 78, :_reduce_54,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 80, :_reduce_none,
  1, 80, :_reduce_none,
  1, 67, :_reduce_71,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  4, 85, :_reduce_76,
  4, 82, :_reduce_77,
  4, 84, :_reduce_78,
  4, 83, :_reduce_79,
  1, 86, :_reduce_80,
  1, 54, :_reduce_81,
  1, 54, :_reduce_82 ]

racc_reduce_n = 83

racc_shift_n = 137

racc_token_table = {
  false => 0,
  :error => 1,
  :ASSIGN => 2,
  :AT_SYM => 3,
  :COMMENT => 4,
  :JUMP => 5,
  :IO_METHOD => 6,
  :INPUT => 7,
  :OUTPUT => 8,
  :NUMREG => 9,
  :POSREG => 10,
  :VREG => 11,
  :SREG => 12,
  :POSITION => 13,
  :MOVE => 14,
  :DOT => 15,
  :TO => 16,
  :AT => 17,
  :TERM => 18,
  :SEMICOLON => 19,
  :NEWLINE => 20,
  :REAL => 21,
  :DIGIT => 22,
  :WORD => 23,
  :EQUAL => 24,
  :UNITS => 25,
  :EEQUAL => 26,
  :NOTEQUAL => 27,
  :GTE => 28,
  :LTE => 29,
  :LT => 30,
  :GT => 31,
  :PLUS => 32,
  :MINUS => 33,
  :STAR => 34,
  :SLASH => 35,
  :DIV => 36,
  :AND => 37,
  :OR => 38,
  :MOD => 39,
  :IF => 40,
  :ELSE => 41,
  :END => 42,
  :UNLESS => 43,
  :FANUC_ASSIGNABLE => 44,
  "(" => 45,
  ")" => 46,
  "," => 47,
  "[" => 48,
  "]" => 49 }

racc_nt_base = 50

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ASSIGN",
  "AT_SYM",
  "COMMENT",
  "JUMP",
  "IO_METHOD",
  "INPUT",
  "OUTPUT",
  "NUMREG",
  "POSREG",
  "VREG",
  "SREG",
  "POSITION",
  "MOVE",
  "DOT",
  "TO",
  "AT",
  "TERM",
  "SEMICOLON",
  "NEWLINE",
  "REAL",
  "DIGIT",
  "WORD",
  "EQUAL",
  "UNITS",
  "EEQUAL",
  "NOTEQUAL",
  "GTE",
  "LTE",
  "LT",
  "GT",
  "PLUS",
  "MINUS",
  "STAR",
  "SLASH",
  "DIV",
  "AND",
  "OR",
  "MOD",
  "IF",
  "ELSE",
  "END",
  "UNLESS",
  "FANUC_ASSIGNABLE",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "program",
  "statements",
  "statement",
  "terminator",
  "block",
  "definition",
  "assignment",
  "motion_statement",
  "jump",
  "io_method",
  "label_definition",
  "conditional",
  "inline_conditional",
  "program_call",
  "args",
  "arg",
  "number",
  "var",
  "expression",
  "else_block",
  "inlineable",
  "motion_modifiers",
  "motion_modifier",
  "speed",
  "definable",
  "simple_expression",
  "relop",
  "term",
  "addop",
  "factor",
  "mulop",
  "numreg",
  "output",
  "posreg",
  "position",
  "comment" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 @interpreter.nodes = val[0].flatten 
    result
end

def _reduce_3(val, _values, result)
 result = val 
    result
end

def _reduce_4(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_5(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_6(val, _values, result)
 result = [val[0]] << val[1] 
    result
end

def _reduce_7(val, _values, result)
 result = [val[0]] 
    result
end

# reduce 8 omitted

def _reduce_9(val, _values, result)
 result = val[0] 
    result
end

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

def _reduce_19(val, _values, result)
 result = CallNode.new(val[0],val[2]) 
    result
end

def _reduce_20(val, _values, result)
 result = [val[0]] 
    result
end

def _reduce_21(val, _values, result)
 result = val[0] << val[2] 
    result
end

def _reduce_22(val, _values, result)
 result = [] 
    result
end

# reduce 23 omitted

# reduce 24 omitted

def _reduce_25(val, _values, result)
 result = IOMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_26(val, _values, result)
 result = JumpNode.new(val[2]) 
    result
end

def _reduce_27(val, _values, result)
 result = ConditionalNode.new("if",val[1],val[2],val[3]) 
    result
end

def _reduce_28(val, _values, result)
 result = ConditionalNode.new("unless",val[1],val[2],val[3]) 
    result
end

def _reduce_29(val, _values, result)
 result = InlineConditionalNode.new("if",val[2],val[0]) 
    result
end

def _reduce_30(val, _values, result)
 result = InlineConditionalNode.new("unless",val[2],val[0]) 
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
 result = val[1] 
    result
end

# reduce 35 omitted

def _reduce_36(val, _values, result)
 result = MotionNode.new(val[0],val[4],val[6]) 
    result
end

def _reduce_37(val, _values, result)
 result = val 
    result
end

def _reduce_38(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_39(val, _values, result)
 result = SpeedNode.new(val[3]) 
    result
end

def _reduce_40(val, _values, result)
 result = TerminationNode.new(val[3]) 
    result
end

def _reduce_41(val, _values, result)
 result = [val[0],UnitsNode.new(val[1])] 
    result
end

def _reduce_42(val, _values, result)
 result = LabelDefinitionNode.new(val[1]) 
    result
end

def _reduce_43(val, _values, result)
 result = DefinitionNode.new(val[0],val[2]) 
    result
end

def _reduce_44(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_45(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_46(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_47(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_48(val, _values, result)
 result = VarNode.new(val[0]) 
    result
end

def _reduce_49(val, _values, result)
 result = val[0] 
    result
end

def _reduce_50(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_51(val, _values, result)
 result = val[0] 
    result
end

def _reduce_52(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 53 omitted

def _reduce_54(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

def _reduce_71(val, _values, result)
 result = DigitNode.new(val[0]) 
    result
end

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

def _reduce_76(val, _values, result)
 result = PositionNode.new(val[2].to_i) 
    result
end

def _reduce_77(val, _values, result)
 result = NumregNode.new(val[2].to_i) 
    result
end

def _reduce_78(val, _values, result)
 result = PosregNode.new(val[2].to_i) 
    result
end

def _reduce_79(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_80(val, _values, result)
 result = CommentNode.new(val[0]) 
    result
end

def _reduce_81(val, _values, result)
 result = TerminatorNode.new 
    result
end

def _reduce_82(val, _values, result)
 result = val[0] 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module TPPlus
