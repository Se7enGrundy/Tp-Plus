#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module TPPlus
  class Parser < Racc::Parser


  include TPPlus::Nodes

  attr_reader :interpreter
  def initialize(scanner, interpreter = TPPlus::Interpreter.new)
    @scanner       = scanner
    @interpreter   = interpreter
    super()
  end

  def next_token
    t = @scanner.next_token
    @interpreter.line_count += 1 if t && t[0] == :NEWLINE

    #puts t.inspect
    t
  end

  def parse
    do_parse
    @interpreter
  rescue Racc::ParseError => e
    raise "Parse error on line #{@interpreter.line_count+1}: #{e}"
  end
##### State transition tables begin ###

racc_action_table = [
    52,    28,    30,    22,    21,    22,    22,   112,   198,    21,
    38,    37,    40,    27,    53,    28,    30,    22,    21,    40,
    31,    30,   199,    20,   128,   166,   166,    27,   166,    47,
    28,    30,    22,    21,    31,   189,    40,    20,    30,    31,
    23,   198,    27,    24,    17,    18,    47,    19,    25,    31,
    51,   131,    20,    30,    23,   199,    31,    24,    17,    18,
   131,    19,    25,    28,    30,    22,    21,   135,    30,    23,
    30,    31,    24,    17,    18,    27,    19,    25,    28,    40,
    22,    21,    31,   122,   123,    20,    31,    40,    31,    47,
    27,    40,    28,    30,    22,    21,    59,    47,    40,    60,
    20,    47,    23,    40,    27,    24,    17,    18,    47,    19,
    25,    31,   -48,    47,    20,   -48,   -49,    23,   136,   -49,
    24,    17,    18,    40,    19,    25,   105,   104,   102,   103,
   100,    23,   101,    47,    24,    17,    18,   -47,    19,    25,
   -47,   127,    38,    37,    71,    72,    75,    76,    73,    74,
    77,    78,    40,    40,    40,   -50,    79,    63,   -50,   151,
    38,    37,    47,    47,    47,    64,    65,   135,   182,    77,
    78,   126,   179,   180,   181,    79,    81,    82,    83,    85,
   125,    84,    81,    82,    83,    85,   124,    84,    38,    37,
    40,    38,    37,    40,    38,    37,    40,    38,    37,    40,
    38,    37,    40,    38,    37,    40,    87,    86,   118,   140,
   141,   142,   143,   144,   145,   146,   117,   148,   112,   112,
   155,   156,   157,   158,   159,   160,   161,   162,   112,   129,
    40,   107,   106,   171,    51,    53,    68,   176,   176,   112,
    66,   183,   184,   185,   186,    62,    61,    40,    40,   196,
    55,   200,   201,   202,   203,    40,    33,   208 ]

racc_action_check = [
    20,    56,    56,    56,    56,   164,   163,   152,   188,   203,
   183,   183,   183,    56,    20,   131,   131,   131,   131,    60,
    56,   167,   188,    56,   104,   164,   163,   131,   203,    60,
     4,     4,     4,     4,   131,   183,    63,   131,   108,   167,
    56,   200,     4,    56,    56,    56,    63,    56,    56,     4,
    20,   109,     4,   170,   131,   200,   108,   131,   131,   131,
   110,   131,   131,    57,    57,    57,    57,   111,     2,     4,
    35,   170,     4,     4,     4,    57,     4,     4,    34,   117,
    34,    34,    57,    88,    88,    57,     2,   118,    35,   117,
    34,    23,     0,     0,     0,     0,    26,   118,    59,    26,
    34,    23,    57,    18,     0,    57,    57,    57,    59,    57,
    57,     0,     6,    18,     0,     6,     9,    34,   115,     9,
    34,    34,    34,    69,    34,    34,    52,    52,    52,    52,
    52,     0,    52,    69,     0,     0,     0,     8,     0,     0,
     8,   103,    52,    52,    41,    41,    41,    41,    41,    41,
    41,    41,    24,    80,    70,    13,    41,    29,    13,   133,
    17,    17,    24,    80,    70,    29,    29,   133,   178,   119,
   119,   102,   178,   178,   178,   119,    42,    42,    42,    42,
   101,    42,   120,   120,   120,   120,   100,   120,   123,   123,
   123,   186,   186,   186,    51,    51,    51,   184,   184,   184,
    19,    19,    19,   135,   135,   135,    46,    46,    65,   124,
   125,   126,   127,   128,   129,   130,    64,   132,    61,    58,
   136,   140,   141,   142,   143,   144,   145,   149,   151,   105,
   155,    55,    53,   165,   166,    40,    36,   171,   174,   176,
    33,   179,   180,   181,   182,    28,    27,   185,    25,   187,
    22,   190,   191,   192,   193,    21,     1,   205 ]

racc_action_pointer = [
    89,   256,    64,   nil,    27,   nil,    70,   nil,    95,    74,
   nil,   nil,   nil,   113,   nil,   nil,   nil,   137,    78,   177,
    -2,   230,   247,    66,   127,   223,    54,   230,   220,   131,
   nil,   nil,   nil,   240,    75,    66,   211,   nil,   nil,   nil,
   219,   116,   140,   nil,   nil,   nil,   183,   nil,   nil,   nil,
   nil,   171,   119,   207,   nil,   206,    -2,    60,   197,    73,
    -6,   196,   nil,    11,   190,   182,   nil,   nil,   nil,    98,
   129,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   128,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    30,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   131,   125,   116,    86,   -31,   174,   nil,   nil,    34,     8,
    17,    16,   nil,   nil,   nil,   101,   nil,    54,    62,   135,
   146,   nil,   nil,   165,   185,   186,   187,   188,   189,   190,
   171,    12,   173,   116,   nil,   180,   168,   nil,   nil,   nil,
   165,   166,   167,   168,   169,   170,   nil,   nil,   nil,   183,
   nil,   206,   -15,   nil,   nil,   205,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     1,     0,   180,   182,    17,   nil,   nil,
    49,   221,   nil,   nil,   222,   nil,   217,   nil,   154,   189,
   190,   191,   192,   -13,   174,   222,   168,   196,   -19,   nil,
   197,   199,   200,   200,   nil,   nil,   nil,   nil,   nil,   nil,
    14,   nil,   nil,     3,   nil,   204,   nil,   nil,   nil ]

racc_action_default = [
    -1,  -124,    -2,    -3,    -7,   -10,   -11,   -12,   -13,   -14,
   -15,   -16,   -17,   -18,   -19,   -20,   -21,  -124,  -103,  -124,
   -77,  -124,  -124,  -103,  -103,  -124,  -124,  -124,  -124,  -124,
  -119,  -120,  -121,  -124,    -5,    -6,  -124,  -104,  -105,   -23,
   -77,   -78,   -80,   -82,   -98,   -99,  -124,  -102,   -24,   -60,
   -61,   -28,  -124,  -124,   -31,  -124,    -8,    -8,  -123,  -103,
  -103,  -123,   -71,  -103,  -124,  -124,   209,    -4,   -22,  -103,
  -103,   -84,   -85,   -86,   -87,   -88,   -89,   -90,   -91,   -92,
  -103,   -93,   -94,   -95,   -96,   -97,  -100,  -101,  -124,   -26,
   -29,   -30,   -72,  -106,  -107,  -108,  -109,  -110,  -111,  -112,
  -124,  -124,  -124,  -124,  -124,  -124,   -76,   -32,    -9,   -52,
   -52,  -124,  -122,   -45,   -46,  -124,   -73,  -103,  -103,   -79,
   -81,   -83,   -25,  -124,  -124,  -124,  -124,  -124,  -124,  -124,
  -124,    -8,  -124,   -42,   -36,  -124,  -124,   -74,   -75,   -27,
  -124,  -124,  -124,  -124,  -124,  -124,   -33,   -51,   -34,  -124,
   -37,  -123,  -123,   -39,   -40,  -124,  -113,  -114,  -115,  -116,
  -117,  -118,   -35,  -124,  -124,  -124,  -124,  -124,   -43,   -44,
  -124,  -124,   -41,   -38,   -53,   -54,  -123,   -55,  -124,  -124,
  -124,  -124,  -124,  -124,  -124,  -124,  -124,  -124,  -124,   -67,
  -124,  -124,  -124,  -124,   -64,   -65,   -56,   -66,   -69,   -70,
  -124,   -57,   -58,  -124,   -68,  -124,   -62,   -63,   -59 ]

racc_goto_table = [
    29,    36,   111,    48,    29,   115,    34,   109,   110,    89,
   168,   168,   197,   175,     2,   134,   177,    39,    35,    50,
   152,    54,    56,    57,   204,    58,   167,   170,   130,   132,
   169,   169,   149,    88,    29,    90,    99,   150,   133,    34,
   207,   174,    67,   187,   193,   205,     1,    92,   119,    69,
   206,    91,   120,   121,    93,    94,    29,    29,   113,   114,
    95,    96,   116,    97,    98,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   139,   147,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   163,   164,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    90,   nil,   nil,
   nil,   nil,    34,   nil,   nil,   nil,   137,   138,   nil,   153,
   178,   nil,   nil,    91,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    29,   nil,   nil,   nil,   154,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   165,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   188,   191,   nil,
   195,   172,   nil,   nil,   173,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   190,    50,   192,   194 ]

racc_goto_check = [
    23,    18,    25,    20,    23,    25,     4,     5,     5,    22,
    14,    14,    37,    33,     2,    28,    33,    19,     2,    23,
    29,    23,    19,    19,    37,    23,    30,    30,    24,    24,
     9,     9,    27,    21,    23,    18,    18,    28,    26,     4,
    10,    32,     3,    34,    35,    36,     1,    38,    39,    40,
    14,    23,    41,    43,    47,    48,    23,    23,    19,    19,
    49,    50,    19,    51,    52,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    22,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    25,    25,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,     4,   nil,   nil,   nil,    19,    19,   nil,    18,
    25,   nil,   nil,    23,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    23,   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,    20,   nil,
    18,     4,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    23,    23,    23,    23 ]

racc_goto_pointer = [
   nil,    46,    14,     8,     4,   -49,   nil,   nil,   nil,  -133,
  -163,   nil,   nil,   nil,  -153,   nil,   nil,   nil,   -16,    -1,
   -16,   -18,   -42,     0,   -81,   -56,   -73,  -101,   -96,  -115,
  -137,   nil,  -130,  -158,  -140,  -142,  -158,  -176,    -5,   -21,
     8,   -18,   nil,   -27,   nil,   nil,   nil,     2,     3,     8,
     9,    11,    12,   nil ]

racc_goto_default = [
   nil,   nil,   108,     3,     4,   nil,     5,     6,     7,     8,
     9,    10,    11,    12,    13,    14,    15,    16,    49,   nil,
   nil,   nil,   nil,    45,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41,
   nil,    42,    70,    43,    80,    44,    46,   nil,   nil,   nil,
   nil,   nil,   nil,    32 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 58, :_reduce_none,
  1, 58, :_reduce_2,
  1, 59, :_reduce_3,
  3, 59, :_reduce_4,
  2, 59, :_reduce_5,
  2, 59, :_reduce_6,
  1, 59, :_reduce_7,
  0, 62, :_reduce_none,
  1, 62, :_reduce_9,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  3, 73, :_reduce_22,
  2, 73, :_reduce_23,
  2, 72, :_reduce_24,
  4, 71, :_reduce_25,
  1, 78, :_reduce_26,
  3, 78, :_reduce_27,
  0, 78, :_reduce_28,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  2, 67, :_reduce_31,
  3, 66, :_reduce_32,
  5, 69, :_reduce_33,
  5, 69, :_reduce_34,
  6, 74, :_reduce_35,
  1, 83, :_reduce_36,
  2, 83, :_reduce_37,
  5, 85, :_reduce_38,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  4, 84, :_reduce_41,
  0, 84, :_reduce_none,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  3, 70, :_reduce_45,
  3, 70, :_reduce_46,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  2, 81, :_reduce_51,
  0, 81, :_reduce_none,
  8, 65, :_reduce_53,
  1, 89, :_reduce_54,
  2, 89, :_reduce_55,
  6, 90, :_reduce_56,
  6, 90, :_reduce_57,
  6, 90, :_reduce_58,
  8, 90, :_reduce_59,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 92, :_reduce_none,
  1, 92, :_reduce_none,
  2, 91, :_reduce_66,
  1, 91, :_reduce_67,
  3, 91, :_reduce_68,
  1, 94, :_reduce_69,
  1, 94, :_reduce_70,
  2, 68, :_reduce_71,
  3, 63, :_reduce_72,
  3, 64, :_reduce_73,
  4, 64, :_reduce_74,
  4, 64, :_reduce_75,
  3, 80, :_reduce_76,
  1, 80, :_reduce_77,
  1, 76, :_reduce_78,
  3, 76, :_reduce_79,
  1, 96, :_reduce_80,
  3, 96, :_reduce_81,
  1, 98, :_reduce_none,
  3, 98, :_reduce_83,
  1, 97, :_reduce_none,
  1, 97, :_reduce_none,
  1, 97, :_reduce_none,
  1, 97, :_reduce_none,
  1, 97, :_reduce_none,
  1, 97, :_reduce_none,
  1, 99, :_reduce_none,
  1, 99, :_reduce_none,
  1, 99, :_reduce_none,
  1, 101, :_reduce_none,
  1, 101, :_reduce_none,
  1, 101, :_reduce_none,
  1, 101, :_reduce_none,
  1, 101, :_reduce_none,
  1, 100, :_reduce_none,
  1, 100, :_reduce_none,
  2, 102, :_reduce_100,
  2, 102, :_reduce_101,
  1, 103, :_reduce_none,
  0, 103, :_reduce_none,
  1, 75, :_reduce_104,
  1, 75, :_reduce_105,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  4, 109, :_reduce_113,
  4, 108, :_reduce_114,
  4, 104, :_reduce_115,
  4, 107, :_reduce_116,
  4, 105, :_reduce_117,
  4, 106, :_reduce_118,
  1, 110, :_reduce_119,
  1, 61, :_reduce_120,
  1, 61, :_reduce_121,
  1, 82, :_reduce_122,
  0, 82, :_reduce_none ]

racc_reduce_n = 124

racc_shift_n = 209

racc_token_table = {
  false => 0,
  :error => 1,
  :ASSIGN => 2,
  :AT_SYM => 3,
  :COMMENT => 4,
  :JUMP => 5,
  :IO_METHOD => 6,
  :INPUT => 7,
  :OUTPUT => 8,
  :NUMREG => 9,
  :POSREG => 10,
  :VREG => 11,
  :SREG => 12,
  :POSITION => 13,
  :TIME_SEGMENT => 14,
  :MOVE => 15,
  :DOT => 16,
  :TO => 17,
  :AT => 18,
  :TERM => 19,
  :OFFSET => 20,
  :SEMICOLON => 21,
  :NEWLINE => 22,
  :REAL => 23,
  :DIGIT => 24,
  :WORD => 25,
  :EQUAL => 26,
  :UNITS => 27,
  :EEQUAL => 28,
  :NOTEQUAL => 29,
  :GTE => 30,
  :LTE => 31,
  :LT => 32,
  :GT => 33,
  :PLUS => 34,
  :MINUS => 35,
  :STAR => 36,
  :SLASH => 37,
  :DIV => 38,
  :AND => 39,
  :OR => 40,
  :MOD => 41,
  :IF => 42,
  :ELSE => 43,
  :END => 44,
  :UNLESS => 45,
  :WAIT_FOR => 46,
  :WAIT_UNTIL => 47,
  :MAX_SPEED => 48,
  :FANUC_USE => 49,
  :CASE => 50,
  :WHEN => 51,
  "(" => 52,
  ")" => 53,
  "," => 54,
  "[" => 55,
  "]" => 56 }

racc_nt_base = 57

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ASSIGN",
  "AT_SYM",
  "COMMENT",
  "JUMP",
  "IO_METHOD",
  "INPUT",
  "OUTPUT",
  "NUMREG",
  "POSREG",
  "VREG",
  "SREG",
  "POSITION",
  "TIME_SEGMENT",
  "MOVE",
  "DOT",
  "TO",
  "AT",
  "TERM",
  "OFFSET",
  "SEMICOLON",
  "NEWLINE",
  "REAL",
  "DIGIT",
  "WORD",
  "EQUAL",
  "UNITS",
  "EEQUAL",
  "NOTEQUAL",
  "GTE",
  "LTE",
  "LT",
  "GT",
  "PLUS",
  "MINUS",
  "STAR",
  "SLASH",
  "DIV",
  "AND",
  "OR",
  "MOD",
  "IF",
  "ELSE",
  "END",
  "UNLESS",
  "WAIT_FOR",
  "WAIT_UNTIL",
  "MAX_SPEED",
  "FANUC_USE",
  "CASE",
  "WHEN",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "program",
  "statements",
  "statement",
  "terminator",
  "block",
  "definition",
  "assignment",
  "motion_statement",
  "jump",
  "io_method",
  "label_definition",
  "conditional",
  "inline_conditional",
  "program_call",
  "use_statement",
  "wait_statement",
  "case_statement",
  "number",
  "expression",
  "indirectable",
  "args",
  "arg",
  "var",
  "else_block",
  "swallow_newlines",
  "case_conditions",
  "case_else",
  "case_condition",
  "case_allowed_condition",
  "case_allowed_statement",
  "inlineable",
  "motion_modifiers",
  "motion_modifier",
  "speed",
  "time",
  "time_seg_actions",
  "units",
  "definable",
  "simple_expression",
  "relop",
  "term",
  "addop",
  "factor",
  "mulop",
  "signed_number",
  "sign",
  "numreg",
  "output",
  "input",
  "posreg",
  "position",
  "vreg",
  "comment" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 @interpreter.nodes = val[0].flatten 
    result
end

def _reduce_3(val, _values, result)
 result = val 
    result
end

def _reduce_4(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_5(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_6(val, _values, result)
 result = [val[0]] << val[1] 
    result
end

def _reduce_7(val, _values, result)
 result = [val[0]] 
    result
end

# reduce 8 omitted

def _reduce_9(val, _values, result)
 result = val[0] 
    result
end

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

def _reduce_22(val, _values, result)
 result = WaitForNode.new(val[1], val[2]) 
    result
end

def _reduce_23(val, _values, result)
 result = WaitUntilNode.new(val[1]) 
    result
end

def _reduce_24(val, _values, result)
 result = UseNode.new(val[0],val[1]) 
    result
end

def _reduce_25(val, _values, result)
 result = CallNode.new(val[0],val[2]) 
    result
end

def _reduce_26(val, _values, result)
 result = [val[0]] 
    result
end

def _reduce_27(val, _values, result)
 result = val[0] << val[2] 
    result
end

def _reduce_28(val, _values, result)
 result = [] 
    result
end

# reduce 29 omitted

# reduce 30 omitted

def _reduce_31(val, _values, result)
 result = IOMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_32(val, _values, result)
 result = JumpNode.new(val[2]) 
    result
end

def _reduce_33(val, _values, result)
 result = ConditionalNode.new("if",val[1],val[2],val[3]) 
    result
end

def _reduce_34(val, _values, result)
 result = ConditionalNode.new("unless",val[1],val[2],val[3]) 
    result
end

def _reduce_35(val, _values, result)
 result = CaseNode.new(val[1],val[3],val[4]) 
    result
end

def _reduce_36(val, _values, result)
 result = val 
    result
end

def _reduce_37(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_38(val, _values, result)
 result = CaseConditionNode.new(val[1],val[3]) 
    result
end

# reduce 39 omitted

# reduce 40 omitted

def _reduce_41(val, _values, result)
 result = CaseConditionNode.new(nil,val[2]) 
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

def _reduce_45(val, _values, result)
 result = InlineConditionalNode.new("if",val[2],val[0]) 
    result
end

def _reduce_46(val, _values, result)
 result = InlineConditionalNode.new("unless",val[2],val[0]) 
    result
end

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

def _reduce_51(val, _values, result)
 result = val[1] 
    result
end

# reduce 52 omitted

def _reduce_53(val, _values, result)
 result = MotionNode.new(val[0],val[5],val[7]) 
    result
end

def _reduce_54(val, _values, result)
 result = val 
    result
end

def _reduce_55(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_56(val, _values, result)
 result = SpeedNode.new(val[4]) 
    result
end

def _reduce_57(val, _values, result)
 result = TerminationNode.new(val[4]) 
    result
end

def _reduce_58(val, _values, result)
 result = OffsetNode.new(val[4]) 
    result
end

def _reduce_59(val, _values, result)
 result = TimeNode.new(val[2],val[4],val[6]) 
    result
end

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

def _reduce_66(val, _values, result)
 result = [val[0],val[1]] 
    result
end

def _reduce_67(val, _values, result)
 result = [:max_speed,:max_speed] 
    result
end

def _reduce_68(val, _values, result)
 result = [val[0],val[2]] 
    result
end

def _reduce_69(val, _values, result)
 result = UnitsNode.new(val[0]) 
    result
end

def _reduce_70(val, _values, result)
 result = UnitsNode.new(val[0]) 
    result
end

def _reduce_71(val, _values, result)
 result = LabelDefinitionNode.new(val[1]) 
    result
end

def _reduce_72(val, _values, result)
 result = DefinitionNode.new(val[0],val[2]) 
    result
end

def _reduce_73(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_74(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_75(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_76(val, _values, result)
 result = VarMethodNode.new(val[0],val[2]) 
    result
end

def _reduce_77(val, _values, result)
 result = VarNode.new(val[0]) 
    result
end

def _reduce_78(val, _values, result)
 result = val[0] 
    result
end

def _reduce_79(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_80(val, _values, result)
 result = val[0] 
    result
end

def _reduce_81(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 82 omitted

def _reduce_83(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

def _reduce_100(val, _values, result)
 val[1] = val[1].to_i * -1 if val[0] == "-"; result = DigitNode.new(val[1]) 
    result
end

def _reduce_101(val, _values, result)
 val[1] = val[1].to_f * -1 if val[0] == "-"; result = RealNode.new(val[1]) 
    result
end

# reduce 102 omitted

# reduce 103 omitted

def _reduce_104(val, _values, result)
 result = DigitNode.new(val[0]) 
    result
end

def _reduce_105(val, _values, result)
 result = RealNode.new(val[0]) 
    result
end

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

def _reduce_113(val, _values, result)
 result = VisionRegisterNode.new(val[2].to_i) 
    result
end

def _reduce_114(val, _values, result)
 result = PositionNode.new(val[2].to_i) 
    result
end

def _reduce_115(val, _values, result)
 result = NumregNode.new(val[2].to_i) 
    result
end

def _reduce_116(val, _values, result)
 result = PosregNode.new(val[2].to_i) 
    result
end

def _reduce_117(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_118(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_119(val, _values, result)
 result = CommentNode.new(val[0]) 
    result
end

def _reduce_120(val, _values, result)
 result = TerminatorNode.new 
    result
end

def _reduce_121(val, _values, result)
 result = val[0] 
    result
end

def _reduce_122(val, _values, result)
 result = TerminatorNode.new 
    result
end

# reduce 123 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module TPPlus
