#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module TPPlus
  class Parser < Racc::Parser


  include TPPlus::Nodes

  attr_reader :interpreter
  def initialize(scanner, interpreter = TPPlus::Interpreter.new)
    @scanner       = scanner
    @interpreter   = interpreter
    super()
  end

  def next_token
    t = @scanner.next_token
    @interpreter.line_count += 1 if t && t[0] == :NEWLINE

    puts t.inspect
    t
  end

  def parse
    do_parse
    @interpreter
  rescue Racc::ParseError => e
    raise "Parse error on line #{@interpreter.line_count+1}: #{e}"
  end
##### State transition tables begin ###

racc_action_table = [
    38,    23,    25,    18,    17,    23,    25,    18,    17,    23,
    25,    18,    17,    22,    36,    35,    34,    22,    25,    17,
    26,    22,   132,    16,    26,   157,    52,    16,    26,   106,
    23,    16,    18,    17,    53,    54,    26,   148,   164,   158,
    19,   105,    22,    20,    19,    15,    37,    20,    19,    15,
    25,    20,    16,    15,    23,    25,    18,    17,    23,    25,
    18,    17,    48,    25,   157,    49,    22,   108,    26,    19,
    22,   113,    20,    26,    15,   104,    16,    26,   158,   103,
    16,    26,    77,    78,    81,    82,    79,    80,    83,    84,
   100,   101,   -35,    19,    85,   -35,    20,    19,    15,   102,
    20,   141,    15,    83,    84,   138,   139,   140,   117,    85,
    87,    88,    89,    91,   118,    90,    87,    88,    89,    91,
   119,    90,    71,    69,    70,    67,   -34,    68,   -33,   -34,
   120,   -33,    36,    35,    34,    36,    35,    34,    36,    35,
    34,    36,    35,    34,    36,    35,    34,    36,    35,    34,
    36,    35,    34,    36,    35,    34,    36,    35,    34,    36,
    35,    34,    36,    35,    34,    36,    35,    34,    36,    35,
    34,    36,    35,    34,    36,    35,    34,   121,   122,    99,
    98,    96,   124,   125,   126,   127,   128,   129,   130,    34,
   108,   135,   135,    96,    72,   142,   143,   144,   145,    55,
    51,    34,    50,   155,    40,   159,   160,   161,   162,    34,
    28,    37,   168 ]

racc_action_check = [
    16,     4,     4,     4,     4,   108,   108,   108,   108,    47,
    47,    47,    47,     4,   142,   142,   142,   108,    73,   162,
     4,    47,   131,     4,   108,   147,    24,   108,    47,    71,
    29,    47,    29,    29,    24,    24,    73,   142,   162,   147,
     4,    70,    29,     4,   108,     4,    16,   108,    47,   108,
    30,    47,    29,    47,    41,    41,    41,    41,     0,     0,
     0,     0,    21,     2,   159,    21,    41,    92,    30,    29,
     0,    95,    29,    41,    29,    69,    41,     0,   159,    68,
     0,     2,    42,    42,    42,    42,    42,    42,    42,    42,
    57,    57,     9,    41,    42,     9,    41,     0,    41,    67,
     0,   137,     0,   109,   109,   137,   137,   137,   102,   109,
    43,    43,    43,    43,   103,    43,   110,   110,   110,   110,
   104,   110,    38,    38,    38,    38,     6,    38,     8,     6,
   105,     8,    37,    37,    37,   143,   143,   143,    48,    48,
    48,    49,    49,    49,   145,   145,   145,    52,    52,    52,
    20,    20,    20,    19,    19,    19,    15,    15,    15,   101,
   101,   101,    99,    99,    99,    98,    98,    98,    86,    86,
    86,    76,    76,    76,    75,    75,    75,   106,   107,    54,
    53,    50,   112,   113,   117,   118,   119,   120,   121,   125,
    74,   132,   133,   135,    40,   138,   139,   140,   141,    28,
    23,   144,    22,   146,    18,   149,   150,   151,   152,    17,
     1,   164,   165 ]

racc_action_pointer = [
    55,   210,    59,   nil,    -2,   nil,    84,   nil,    86,    50,
   nil,   nil,   nil,   nil,   nil,   133,    -2,   184,   201,   130,
   127,    20,   186,   175,     0,   nil,   nil,   nil,   199,    27,
    46,   nil,   nil,   nil,   nil,   nil,   nil,   109,   114,   nil,
   169,    51,    54,    74,   nil,   nil,   nil,     6,   115,   118,
   159,   nil,   124,   154,   153,   nil,   nil,    41,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    48,    28,    24,
   -10,   -22,   nil,    14,   147,   151,   148,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   145,   nil,   nil,   nil,
   nil,   nil,    24,   nil,   nil,    54,   nil,   nil,   142,   139,
   nil,   136,    84,    90,    96,   106,   153,   134,     2,    69,
    80,   nil,   138,   135,   nil,   nil,   nil,   132,   133,   134,
   135,   136,   nil,   nil,   nil,   164,   nil,   nil,   nil,   nil,
   nil,   -27,   175,   176,   nil,   171,   nil,    87,   147,   148,
   149,   150,    -9,   112,   176,   121,   154,    -2,   nil,   155,
   157,   158,   158,   nil,   nil,   nil,   nil,   nil,   nil,    37,
   nil,   nil,    13,   nil,   163,   163,   nil,   nil,   nil ]

racc_action_default = [
    -1,  -101,    -2,    -3,    -7,   -10,   -11,   -12,   -13,   -14,
   -15,   -16,   -17,   -18,   -19,  -101,   -61,  -101,  -101,  -101,
  -101,  -101,  -101,  -101,  -101,   -96,   -97,   -98,  -101,    -5,
    -6,   -20,   -45,   -46,   -61,   -84,   -85,   -24,  -101,   -27,
  -101,    -8,   -62,   -64,   -66,   -82,   -83,    -8,  -101,  -101,
  -100,   -56,  -101,  -101,  -101,   169,    -4,  -101,   -22,   -25,
   -26,   -57,   -86,   -87,   -88,   -89,   -90,  -101,  -101,  -101,
  -101,  -101,   -28,    -9,   -37,  -101,  -101,   -68,   -69,   -70,
   -71,   -72,   -73,   -74,   -75,   -76,  -101,   -77,   -78,   -79,
   -80,   -81,   -37,   -31,   -32,  -101,   -99,   -58,  -101,  -101,
   -21,  -101,  -101,  -101,  -101,  -101,  -101,  -101,    -8,   -63,
   -65,   -67,  -101,  -101,   -59,   -60,   -23,  -101,  -101,  -101,
  -101,  -101,   -29,   -36,   -30,  -101,   -91,   -92,   -93,   -94,
   -95,  -101,  -101,   -38,   -39,  -100,   -40,  -101,  -101,  -101,
  -101,  -101,  -101,  -101,  -101,  -101,  -101,  -101,   -52,  -101,
  -101,  -101,  -101,   -49,   -50,   -41,   -51,   -54,   -55,  -101,
   -42,   -43,  -101,   -53,  -101,  -101,   -47,   -48,   -44 ]

racc_goto_table = [
    24,    32,    31,    95,    24,    41,    47,    74,    29,    58,
   107,   133,   156,    92,     2,    33,   166,    39,    30,   134,
   136,   167,    57,    59,   163,    56,   146,   152,   112,    24,
   165,     1,    61,   109,    93,    94,    29,    60,    97,    75,
   110,    24,   111,    62,    63,    64,    65,    24,    66,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   116,   123,   nil,   nil,   nil,   nil,    29,
   nil,   nil,   nil,   nil,   114,   115,   nil,    59,   137,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    60,   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   131,   nil,   nil,   147,    32,
   150,   154,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   149,    33,   151,   153 ]

racc_goto_check = [
    20,    19,    16,    24,    20,    21,    21,     5,     4,    18,
    22,    25,    30,     5,     2,    20,    14,    20,     2,    26,
    26,    10,    17,    19,    30,     3,    27,    28,    22,    20,
    29,     1,    31,    32,    21,    21,     4,    20,    21,    33,
    34,    20,    36,    38,    39,    40,    41,    20,    42,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    18,     5,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,   nil,    21,    21,   nil,    19,    24,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,    20,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    20,   nil,   nil,    19,    19,
    16,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    20,    20,    20,    20 ]

racc_goto_pointer = [
   nil,    31,    14,    -4,     6,   -34,   nil,   nil,   nil,   nil,
  -141,   nil,   nil,   nil,  -146,   nil,   -13,   -15,   -28,   -14,
     0,   -14,   -64,   nil,   -47,  -121,  -113,  -116,  -118,  -132,
  -135,    -6,   -42,    -3,   -36,   nil,   -44,   nil,     5,     6,
     7,     8,    10,   nil ]

racc_goto_default = [
   nil,   nil,    73,     3,     4,   nil,     5,     6,     7,     8,
     9,    10,    11,    12,    13,    14,   nil,   nil,   nil,    45,
    46,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    42,   nil,    43,    76,    44,    86,   nil,   nil,
   nil,   nil,   nil,    27 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 54, :_reduce_none,
  1, 54, :_reduce_2,
  1, 55, :_reduce_3,
  3, 55, :_reduce_4,
  2, 55, :_reduce_5,
  2, 55, :_reduce_6,
  1, 55, :_reduce_7,
  0, 58, :_reduce_none,
  1, 58, :_reduce_9,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  2, 68, :_reduce_20,
  4, 67, :_reduce_21,
  1, 70, :_reduce_22,
  3, 70, :_reduce_23,
  0, 70, :_reduce_24,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  2, 63, :_reduce_27,
  3, 62, :_reduce_28,
  5, 65, :_reduce_29,
  5, 65, :_reduce_30,
  3, 66, :_reduce_31,
  3, 66, :_reduce_32,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  2, 75, :_reduce_36,
  0, 75, :_reduce_none,
  8, 61, :_reduce_38,
  1, 78, :_reduce_39,
  2, 78, :_reduce_40,
  6, 79, :_reduce_41,
  6, 79, :_reduce_42,
  6, 79, :_reduce_43,
  8, 79, :_reduce_44,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  2, 80, :_reduce_51,
  1, 80, :_reduce_52,
  3, 80, :_reduce_53,
  1, 83, :_reduce_54,
  1, 83, :_reduce_55,
  2, 64, :_reduce_56,
  3, 59, :_reduce_57,
  3, 60, :_reduce_58,
  4, 60, :_reduce_59,
  4, 60, :_reduce_60,
  1, 73, :_reduce_61,
  1, 74, :_reduce_62,
  3, 74, :_reduce_63,
  1, 85, :_reduce_64,
  3, 85, :_reduce_65,
  1, 87, :_reduce_none,
  3, 87, :_reduce_67,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 90, :_reduce_none,
  1, 90, :_reduce_none,
  1, 90, :_reduce_none,
  1, 90, :_reduce_none,
  1, 90, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 72, :_reduce_84,
  1, 72, :_reduce_85,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  4, 95, :_reduce_91,
  4, 94, :_reduce_92,
  4, 91, :_reduce_93,
  4, 93, :_reduce_94,
  4, 92, :_reduce_95,
  1, 96, :_reduce_96,
  1, 57, :_reduce_97,
  1, 57, :_reduce_98,
  1, 77, :_reduce_99,
  0, 77, :_reduce_none ]

racc_reduce_n = 101

racc_shift_n = 169

racc_token_table = {
  false => 0,
  :error => 1,
  :ASSIGN => 2,
  :AT_SYM => 3,
  :COMMENT => 4,
  :JUMP => 5,
  :IO_METHOD => 6,
  :INPUT => 7,
  :OUTPUT => 8,
  :NUMREG => 9,
  :POSREG => 10,
  :VREG => 11,
  :SREG => 12,
  :POSITION => 13,
  :TIME_SEGMENT => 14,
  :MOVE => 15,
  :DOT => 16,
  :TO => 17,
  :AT => 18,
  :TERM => 19,
  :OFFSET => 20,
  :SEMICOLON => 21,
  :NEWLINE => 22,
  :REAL => 23,
  :DIGIT => 24,
  :WORD => 25,
  :EQUAL => 26,
  :UNITS => 27,
  :EEQUAL => 28,
  :NOTEQUAL => 29,
  :GTE => 30,
  :LTE => 31,
  :LT => 32,
  :GT => 33,
  :PLUS => 34,
  :MINUS => 35,
  :STAR => 36,
  :SLASH => 37,
  :DIV => 38,
  :AND => 39,
  :OR => 40,
  :MOD => 41,
  :IF => 42,
  :ELSE => 43,
  :END => 44,
  :UNLESS => 45,
  :MAX_SPEED => 46,
  :FANUC_USE => 47,
  "(" => 48,
  ")" => 49,
  "," => 50,
  "[" => 51,
  "]" => 52 }

racc_nt_base = 53

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ASSIGN",
  "AT_SYM",
  "COMMENT",
  "JUMP",
  "IO_METHOD",
  "INPUT",
  "OUTPUT",
  "NUMREG",
  "POSREG",
  "VREG",
  "SREG",
  "POSITION",
  "TIME_SEGMENT",
  "MOVE",
  "DOT",
  "TO",
  "AT",
  "TERM",
  "OFFSET",
  "SEMICOLON",
  "NEWLINE",
  "REAL",
  "DIGIT",
  "WORD",
  "EQUAL",
  "UNITS",
  "EEQUAL",
  "NOTEQUAL",
  "GTE",
  "LTE",
  "LT",
  "GT",
  "PLUS",
  "MINUS",
  "STAR",
  "SLASH",
  "DIV",
  "AND",
  "OR",
  "MOD",
  "IF",
  "ELSE",
  "END",
  "UNLESS",
  "MAX_SPEED",
  "FANUC_USE",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "program",
  "statements",
  "statement",
  "terminator",
  "block",
  "definition",
  "assignment",
  "motion_statement",
  "jump",
  "io_method",
  "label_definition",
  "conditional",
  "inline_conditional",
  "program_call",
  "use_statement",
  "indirectable",
  "args",
  "arg",
  "number",
  "var",
  "expression",
  "else_block",
  "inlineable",
  "swallow_newlines",
  "motion_modifiers",
  "motion_modifier",
  "speed",
  "time",
  "time_seg_actions",
  "units",
  "definable",
  "simple_expression",
  "relop",
  "term",
  "addop",
  "factor",
  "mulop",
  "numreg",
  "output",
  "posreg",
  "position",
  "vreg",
  "comment" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 @interpreter.nodes = val[0].flatten 
    result
end

def _reduce_3(val, _values, result)
 result = val 
    result
end

def _reduce_4(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_5(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_6(val, _values, result)
 result = [val[0]] << val[1] 
    result
end

def _reduce_7(val, _values, result)
 result = [val[0]] 
    result
end

# reduce 8 omitted

def _reduce_9(val, _values, result)
 result = val[0] 
    result
end

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

def _reduce_20(val, _values, result)
 result = UseNode.new(val[0],val[1]) 
    result
end

def _reduce_21(val, _values, result)
 result = CallNode.new(val[0],val[2]) 
    result
end

def _reduce_22(val, _values, result)
 result = [val[0]] 
    result
end

def _reduce_23(val, _values, result)
 result = val[0] << val[2] 
    result
end

def _reduce_24(val, _values, result)
 result = [] 
    result
end

# reduce 25 omitted

# reduce 26 omitted

def _reduce_27(val, _values, result)
 result = IOMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_28(val, _values, result)
 result = JumpNode.new(val[2]) 
    result
end

def _reduce_29(val, _values, result)
 result = ConditionalNode.new("if",val[1],val[2],val[3]) 
    result
end

def _reduce_30(val, _values, result)
 result = ConditionalNode.new("unless",val[1],val[2],val[3]) 
    result
end

def _reduce_31(val, _values, result)
 result = InlineConditionalNode.new("if",val[2],val[0]) 
    result
end

def _reduce_32(val, _values, result)
 result = InlineConditionalNode.new("unless",val[2],val[0]) 
    result
end

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

def _reduce_36(val, _values, result)
 result = val[1] 
    result
end

# reduce 37 omitted

def _reduce_38(val, _values, result)
 result = MotionNode.new(val[0],val[5],val[7]) 
    result
end

def _reduce_39(val, _values, result)
 result = val 
    result
end

def _reduce_40(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_41(val, _values, result)
 result = SpeedNode.new(val[4]) 
    result
end

def _reduce_42(val, _values, result)
 result = TerminationNode.new(val[4]) 
    result
end

def _reduce_43(val, _values, result)
 result = OffsetNode.new(val[4]) 
    result
end

def _reduce_44(val, _values, result)
 result = TimeNode.new(val[2],val[4],val[6]) 
    result
end

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

def _reduce_51(val, _values, result)
 result = [val[0],val[1]] 
    result
end

def _reduce_52(val, _values, result)
 result = [:max_speed,:max_speed] 
    result
end

def _reduce_53(val, _values, result)
 result = [val[0],val[2]] 
    result
end

def _reduce_54(val, _values, result)
 result = UnitsNode.new(val[0]) 
    result
end

def _reduce_55(val, _values, result)
 result = UnitsNode.new(val[0]) 
    result
end

def _reduce_56(val, _values, result)
 result = LabelDefinitionNode.new(val[1]) 
    result
end

def _reduce_57(val, _values, result)
 result = DefinitionNode.new(val[0],val[2]) 
    result
end

def _reduce_58(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_59(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_60(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_61(val, _values, result)
 result = VarNode.new(val[0]) 
    result
end

def _reduce_62(val, _values, result)
 result = val[0] 
    result
end

def _reduce_63(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_64(val, _values, result)
 result = val[0] 
    result
end

def _reduce_65(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 66 omitted

def _reduce_67(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

def _reduce_84(val, _values, result)
 result = DigitNode.new(val[0]) 
    result
end

def _reduce_85(val, _values, result)
 result = RealNode.new(val[0]) 
    result
end

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

def _reduce_91(val, _values, result)
 result = VisionRegisterNode.new(val[2].to_i) 
    result
end

def _reduce_92(val, _values, result)
 result = PositionNode.new(val[2].to_i) 
    result
end

def _reduce_93(val, _values, result)
 result = NumregNode.new(val[2].to_i) 
    result
end

def _reduce_94(val, _values, result)
 result = PosregNode.new(val[2].to_i) 
    result
end

def _reduce_95(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_96(val, _values, result)
 result = CommentNode.new(val[0]) 
    result
end

def _reduce_97(val, _values, result)
 result = TerminatorNode.new 
    result
end

def _reduce_98(val, _values, result)
 result = val[0] 
    result
end

def _reduce_99(val, _values, result)
 result = TerminatorNode.new 
    result
end

# reduce 100 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module TPPlus
