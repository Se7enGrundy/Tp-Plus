#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module TPPlus
  class Parser < Racc::Parser


  include TPPlus::Nodes

  attr_reader :interpreter
  def initialize(scanner, interpreter = TPPlus::Interpreter.new)
    @scanner       = scanner
    @interpreter   = interpreter
    super()
  end

  def next_token
    t = @scanner.next_token
    @interpreter.line_count += 1 if t && t[0] == :NEWLINE

    puts t.inspect
    t
  end

  def parse
    do_parse
    @interpreter
  rescue Racc::ParseError => e
    raise "Parse error on line #{@interpreter.line_count+1}: #{e}"
  end
##### State transition tables begin ###

racc_action_table = [
    49,    26,    28,    21,    20,    20,   141,    26,    28,    21,
    20,   168,   118,    25,    50,    26,    28,    21,    20,    25,
    29,    28,   168,    19,   175,   169,    29,    25,   119,    19,
    36,    35,    38,   120,    29,   116,   169,    19,    28,    29,
    22,   122,    28,    23,    16,    17,    22,    18,    48,    23,
    16,    17,   122,    18,    22,   159,    29,    23,    16,    17,
    29,    18,    26,    28,    21,    20,    73,    74,    26,   124,
    21,    20,    75,   110,    25,   109,    26,    28,    21,    20,
    25,    29,    36,    35,    19,    36,    35,    38,    25,   107,
    19,    36,    35,    38,   100,    29,   -36,    43,    19,   -36,
    99,    22,   128,    43,    23,    16,    17,    22,    18,   129,
    23,    16,    17,    55,    18,    22,    56,   130,    23,    16,
    17,   131,    18,    36,    35,    38,    36,    35,    38,    36,
    35,    38,    36,    35,    38,    43,   -37,   -38,    43,   -37,
   -38,    43,   114,   115,    43,    36,    35,    38,    36,    35,
    38,    36,    35,    38,    36,    35,    38,    43,    83,    82,
    43,   132,   133,    43,    50,   135,    43,    67,    68,    71,
    72,    69,    70,    73,    74,    36,    35,    38,   152,    75,
    59,   136,   149,   150,   151,   137,   138,    43,    60,    61,
    98,    96,    97,    94,   139,    95,    77,    78,    79,    81,
   140,    80,    77,    78,    79,    81,   117,    80,    36,    35,
    38,    36,    35,    38,    36,    35,    38,    36,    35,    38,
    36,    35,    38,    38,   143,   146,   146,   107,    64,   153,
   154,   155,   156,    62,    58,    38,    57,   166,    52,   170,
   171,   172,   173,    38,    31,    48,   179 ]

racc_action_check = [
    19,    53,    53,    53,    53,   173,   132,     0,     0,     0,
     0,   158,    96,    53,    19,     4,     4,     4,     4,     0,
    53,    33,   170,    53,   173,   158,     0,     4,    97,     0,
   153,   153,   153,    98,     4,    94,   170,     4,     2,    33,
    53,   102,   101,    53,    53,    53,     0,    53,    19,     0,
     0,     0,   103,     0,     4,   153,     2,     4,     4,     4,
   101,     4,    54,    54,    54,    54,   111,   111,    32,   106,
    32,    32,   111,    61,    54,    60,   122,   122,   122,   122,
    32,    54,    16,    16,    54,   109,   109,   109,   122,    57,
    32,    76,    76,    76,    52,   122,     8,   109,   122,     8,
    50,    54,   116,    76,    54,    54,    54,    32,    54,   117,
    32,    32,    32,    24,    32,   122,    24,   118,   122,   122,
   122,   119,   122,    66,    66,    66,    65,    65,    65,    55,
    55,    55,    22,    22,    22,    66,     6,     9,    65,     6,
     9,    55,    84,    84,    22,    23,    23,    23,    56,    56,
    56,   110,   110,   110,    59,    59,    59,    23,    43,    43,
    56,   120,   121,   110,    38,   123,    59,    39,    39,    39,
    39,    39,    39,    39,    39,    17,    17,    17,   148,    39,
    27,   124,   148,   148,   148,   128,   129,    17,    27,    27,
    49,    49,    49,    49,   130,    49,   112,   112,   112,   112,
   131,   112,    40,    40,    40,    40,    95,    40,   115,   115,
   115,    48,    48,    48,    18,    18,    18,   154,   154,   154,
   156,   156,   156,   136,   142,   143,   144,   146,    34,   149,
   150,   151,   152,    31,    26,   155,    25,   157,    21,   160,
   161,   162,   163,    20,     1,   175,   176 ]

racc_action_pointer = [
     4,   244,    34,   nil,    12,   nil,    94,   nil,    54,    95,
   nil,   nil,   nil,   nil,   nil,   nil,    59,   152,   191,    -2,
   218,   235,   109,   122,    71,   220,   209,   154,   nil,   nil,
   nil,   233,    65,    17,   203,   nil,   nil,   nil,   148,   139,
   166,   nil,   nil,   135,   nil,   nil,   nil,   nil,   188,   182,
    75,   nil,    69,    -2,    59,   106,   125,    67,   nil,   131,
    49,    47,   nil,   nil,   nil,   103,   100,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    68,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    91,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   -18,   153,   -41,   -25,   -20,   nil,
   nil,    38,    -2,     9,   nil,   nil,    52,   nil,   nil,    62,
   128,    32,   160,   nil,   nil,   185,    78,    85,    93,    97,
   137,   118,    73,   121,   131,   nil,   nil,   nil,   131,   132,
   140,   146,   -48,   nil,   nil,   nil,   198,   nil,   nil,   nil,
   nil,   nil,   173,   209,   210,   nil,   205,   nil,   164,   179,
   180,   181,   182,     7,   194,   210,   197,   186,   -16,   nil,
   187,   189,   190,   190,   nil,   nil,   nil,   nil,   nil,   nil,
    -5,   nil,   nil,    -1,   nil,   195,   195,   nil,   nil,   nil ]

racc_action_default = [
    -1,  -107,    -2,    -3,    -7,   -10,   -11,   -12,   -13,   -14,
   -15,   -16,   -17,   -18,   -19,   -20,  -107,  -107,  -107,   -65,
  -107,  -107,  -107,  -107,  -107,  -107,  -107,  -107,  -102,  -103,
  -104,  -107,    -5,    -6,  -107,   -90,   -91,   -22,   -65,   -66,
   -68,   -70,   -86,  -107,   -89,   -23,   -48,   -49,   -27,  -107,
  -107,   -30,  -107,    -8,    -8,  -107,  -107,  -106,   -59,  -107,
  -107,  -107,   180,    -4,   -21,  -107,  -107,   -72,   -73,   -74,
   -75,   -76,   -77,   -78,   -79,   -80,  -107,   -81,   -82,   -83,
   -84,   -85,   -87,   -88,  -107,   -25,   -28,   -29,   -60,   -92,
   -93,   -94,   -95,   -96,  -107,  -107,  -107,  -107,  -107,   -64,
   -31,    -9,   -40,   -40,   -34,   -35,  -107,  -105,   -61,  -107,
  -107,   -67,   -69,   -71,   -24,  -107,  -107,  -107,  -107,  -107,
  -107,  -107,    -8,  -107,  -107,   -62,   -63,   -26,  -107,  -107,
  -107,  -107,  -107,   -32,   -39,   -33,  -107,   -97,   -98,   -99,
  -100,  -101,  -107,  -107,   -41,   -42,  -106,   -43,  -107,  -107,
  -107,  -107,  -107,  -107,  -107,  -107,  -107,  -107,  -107,   -55,
  -107,  -107,  -107,  -107,   -52,   -53,   -44,   -54,   -57,   -58,
  -107,   -45,   -46,  -107,   -56,  -107,  -107,   -50,   -51,   -47 ]

racc_goto_table = [
    27,    34,    37,    46,    27,    32,    45,    53,    54,   106,
   102,   103,   167,    85,   144,     2,   145,   147,    47,    33,
    51,   121,   123,   177,   174,   178,    84,    63,   157,   163,
   176,     1,    27,    86,    88,   111,    32,    65,   112,   113,
   104,   105,    89,    90,   108,    91,    92,    93,    87,   nil,
   nil,   nil,   nil,    27,    27,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   134,
   127,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   125,   126,   nil,   nil,   148,   nil,
    86,   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    87,   nil,   nil,   nil,   nil,
   nil,   nil,    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   142,   nil,   158,    46,
   nil,   165,   161,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   160,    47,   162,   164 ]

racc_goto_check = [
    22,    17,    18,    17,    22,     4,    19,    18,    18,    25,
     5,     5,    31,    21,    26,     2,    27,    27,    22,     2,
    22,    23,    23,    14,    31,    10,    20,     3,    28,    29,
    30,     1,    22,    17,    32,    33,     4,    34,    35,    37,
    18,    18,    39,    40,    18,    41,    42,    43,    22,   nil,
   nil,   nil,   nil,    22,    22,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,
    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    18,    18,   nil,   nil,    25,   nil,
    17,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,
   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,    17,    17,
   nil,    17,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    22,    22,    22,    22 ]

racc_goto_pointer = [
   nil,    31,    15,    -5,     3,   -43,   nil,   nil,   nil,   nil,
  -148,   nil,   nil,   nil,  -150,   nil,   nil,   -15,   -15,   -12,
   -22,   -35,     0,   -81,   nil,   -48,  -129,  -127,  -125,  -127,
  -143,  -146,   -15,   -30,    -2,   -28,   nil,   -37,   nil,    -7,
    -6,    -4,    -3,    -2,   nil ]

racc_goto_default = [
   nil,   nil,   101,     3,     4,   nil,     5,     6,     7,     8,
     9,    10,    11,    12,    13,    14,    15,    42,   nil,   nil,
   nil,   nil,    44,   nil,    24,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    39,   nil,    40,    66,    41,    76,   nil,
   nil,   nil,   nil,   nil,    30 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 56, :_reduce_none,
  1, 56, :_reduce_2,
  1, 57, :_reduce_3,
  3, 57, :_reduce_4,
  2, 57, :_reduce_5,
  2, 57, :_reduce_6,
  1, 57, :_reduce_7,
  0, 60, :_reduce_none,
  1, 60, :_reduce_9,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  3, 71, :_reduce_21,
  2, 71, :_reduce_22,
  2, 70, :_reduce_23,
  4, 69, :_reduce_24,
  1, 75, :_reduce_25,
  3, 75, :_reduce_26,
  0, 75, :_reduce_27,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  2, 65, :_reduce_30,
  3, 64, :_reduce_31,
  5, 67, :_reduce_32,
  5, 67, :_reduce_33,
  3, 68, :_reduce_34,
  3, 68, :_reduce_35,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  2, 78, :_reduce_39,
  0, 78, :_reduce_none,
  8, 63, :_reduce_41,
  1, 81, :_reduce_42,
  2, 81, :_reduce_43,
  6, 82, :_reduce_44,
  6, 82, :_reduce_45,
  6, 82, :_reduce_46,
  8, 82, :_reduce_47,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  2, 83, :_reduce_54,
  1, 83, :_reduce_55,
  3, 83, :_reduce_56,
  1, 86, :_reduce_57,
  1, 86, :_reduce_58,
  2, 66, :_reduce_59,
  3, 61, :_reduce_60,
  3, 62, :_reduce_61,
  4, 62, :_reduce_62,
  4, 62, :_reduce_63,
  3, 77, :_reduce_64,
  1, 77, :_reduce_65,
  1, 73, :_reduce_66,
  3, 73, :_reduce_67,
  1, 88, :_reduce_68,
  3, 88, :_reduce_69,
  1, 90, :_reduce_none,
  3, 90, :_reduce_71,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 91, :_reduce_none,
  1, 91, :_reduce_none,
  1, 91, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 92, :_reduce_none,
  2, 92, :_reduce_87,
  2, 92, :_reduce_88,
  1, 92, :_reduce_none,
  1, 72, :_reduce_90,
  1, 72, :_reduce_91,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  4, 98, :_reduce_97,
  4, 97, :_reduce_98,
  4, 94, :_reduce_99,
  4, 96, :_reduce_100,
  4, 95, :_reduce_101,
  1, 99, :_reduce_102,
  1, 59, :_reduce_103,
  1, 59, :_reduce_104,
  1, 80, :_reduce_105,
  0, 80, :_reduce_none ]

racc_reduce_n = 107

racc_shift_n = 180

racc_token_table = {
  false => 0,
  :error => 1,
  :ASSIGN => 2,
  :AT_SYM => 3,
  :COMMENT => 4,
  :JUMP => 5,
  :IO_METHOD => 6,
  :INPUT => 7,
  :OUTPUT => 8,
  :NUMREG => 9,
  :POSREG => 10,
  :VREG => 11,
  :SREG => 12,
  :POSITION => 13,
  :TIME_SEGMENT => 14,
  :MOVE => 15,
  :DOT => 16,
  :TO => 17,
  :AT => 18,
  :TERM => 19,
  :OFFSET => 20,
  :SEMICOLON => 21,
  :NEWLINE => 22,
  :REAL => 23,
  :DIGIT => 24,
  :WORD => 25,
  :EQUAL => 26,
  :UNITS => 27,
  :EEQUAL => 28,
  :NOTEQUAL => 29,
  :GTE => 30,
  :LTE => 31,
  :LT => 32,
  :GT => 33,
  :PLUS => 34,
  :MINUS => 35,
  :STAR => 36,
  :SLASH => 37,
  :DIV => 38,
  :AND => 39,
  :OR => 40,
  :MOD => 41,
  :IF => 42,
  :ELSE => 43,
  :END => 44,
  :UNLESS => 45,
  :WAIT_FOR => 46,
  :WAIT_UNTIL => 47,
  :MAX_SPEED => 48,
  :FANUC_USE => 49,
  "(" => 50,
  ")" => 51,
  "," => 52,
  "[" => 53,
  "]" => 54 }

racc_nt_base = 55

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ASSIGN",
  "AT_SYM",
  "COMMENT",
  "JUMP",
  "IO_METHOD",
  "INPUT",
  "OUTPUT",
  "NUMREG",
  "POSREG",
  "VREG",
  "SREG",
  "POSITION",
  "TIME_SEGMENT",
  "MOVE",
  "DOT",
  "TO",
  "AT",
  "TERM",
  "OFFSET",
  "SEMICOLON",
  "NEWLINE",
  "REAL",
  "DIGIT",
  "WORD",
  "EQUAL",
  "UNITS",
  "EEQUAL",
  "NOTEQUAL",
  "GTE",
  "LTE",
  "LT",
  "GT",
  "PLUS",
  "MINUS",
  "STAR",
  "SLASH",
  "DIV",
  "AND",
  "OR",
  "MOD",
  "IF",
  "ELSE",
  "END",
  "UNLESS",
  "WAIT_FOR",
  "WAIT_UNTIL",
  "MAX_SPEED",
  "FANUC_USE",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "program",
  "statements",
  "statement",
  "terminator",
  "block",
  "definition",
  "assignment",
  "motion_statement",
  "jump",
  "io_method",
  "label_definition",
  "conditional",
  "inline_conditional",
  "program_call",
  "use_statement",
  "wait_statement",
  "number",
  "expression",
  "indirectable",
  "args",
  "arg",
  "var",
  "else_block",
  "inlineable",
  "swallow_newlines",
  "motion_modifiers",
  "motion_modifier",
  "speed",
  "time",
  "time_seg_actions",
  "units",
  "definable",
  "simple_expression",
  "relop",
  "term",
  "addop",
  "factor",
  "mulop",
  "numreg",
  "output",
  "posreg",
  "position",
  "vreg",
  "comment" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 @interpreter.nodes = val[0].flatten 
    result
end

def _reduce_3(val, _values, result)
 result = val 
    result
end

def _reduce_4(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_5(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_6(val, _values, result)
 result = [val[0]] << val[1] 
    result
end

def _reduce_7(val, _values, result)
 result = [val[0]] 
    result
end

# reduce 8 omitted

def _reduce_9(val, _values, result)
 result = val[0] 
    result
end

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

def _reduce_21(val, _values, result)
 result = WaitForNode.new(val[1], val[2]) 
    result
end

def _reduce_22(val, _values, result)
 result = WaitUntilNode.new(val[1]) 
    result
end

def _reduce_23(val, _values, result)
 result = UseNode.new(val[0],val[1]) 
    result
end

def _reduce_24(val, _values, result)
 result = CallNode.new(val[0],val[2]) 
    result
end

def _reduce_25(val, _values, result)
 result = [val[0]] 
    result
end

def _reduce_26(val, _values, result)
 result = val[0] << val[2] 
    result
end

def _reduce_27(val, _values, result)
 result = [] 
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
 result = IOMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_31(val, _values, result)
 result = JumpNode.new(val[2]) 
    result
end

def _reduce_32(val, _values, result)
 result = ConditionalNode.new("if",val[1],val[2],val[3]) 
    result
end

def _reduce_33(val, _values, result)
 result = ConditionalNode.new("unless",val[1],val[2],val[3]) 
    result
end

def _reduce_34(val, _values, result)
 result = InlineConditionalNode.new("if",val[2],val[0]) 
    result
end

def _reduce_35(val, _values, result)
 result = InlineConditionalNode.new("unless",val[2],val[0]) 
    result
end

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
 result = val[1] 
    result
end

# reduce 40 omitted

def _reduce_41(val, _values, result)
 result = MotionNode.new(val[0],val[5],val[7]) 
    result
end

def _reduce_42(val, _values, result)
 result = val 
    result
end

def _reduce_43(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_44(val, _values, result)
 result = SpeedNode.new(val[4]) 
    result
end

def _reduce_45(val, _values, result)
 result = TerminationNode.new(val[4]) 
    result
end

def _reduce_46(val, _values, result)
 result = OffsetNode.new(val[4]) 
    result
end

def _reduce_47(val, _values, result)
 result = TimeNode.new(val[2],val[4],val[6]) 
    result
end

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

def _reduce_54(val, _values, result)
 result = [val[0],val[1]] 
    result
end

def _reduce_55(val, _values, result)
 result = [:max_speed,:max_speed] 
    result
end

def _reduce_56(val, _values, result)
 result = [val[0],val[2]] 
    result
end

def _reduce_57(val, _values, result)
 result = UnitsNode.new(val[0]) 
    result
end

def _reduce_58(val, _values, result)
 result = UnitsNode.new(val[0]) 
    result
end

def _reduce_59(val, _values, result)
 result = LabelDefinitionNode.new(val[1]) 
    result
end

def _reduce_60(val, _values, result)
 result = DefinitionNode.new(val[0],val[2]) 
    result
end

def _reduce_61(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_62(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_63(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_64(val, _values, result)
 result = VarMethodNode.new(val[0],val[2]) 
    result
end

def _reduce_65(val, _values, result)
 result = VarNode.new(val[0]) 
    result
end

def _reduce_66(val, _values, result)
 result = val[0] 
    result
end

def _reduce_67(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_68(val, _values, result)
 result = val[0] 
    result
end

def _reduce_69(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

def _reduce_87(val, _values, result)
 result = DigitNode.new(val[0].to_i * -1) 
    result
end

def _reduce_88(val, _values, result)
 result = RealNode.new(val[0].to_f * -1) 
    result
end

# reduce 89 omitted

def _reduce_90(val, _values, result)
 result = DigitNode.new(val[0]) 
    result
end

def _reduce_91(val, _values, result)
 result = RealNode.new(val[0]) 
    result
end

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
 result = VisionRegisterNode.new(val[2].to_i) 
    result
end

def _reduce_98(val, _values, result)
 result = PositionNode.new(val[2].to_i) 
    result
end

def _reduce_99(val, _values, result)
 result = NumregNode.new(val[2].to_i) 
    result
end

def _reduce_100(val, _values, result)
 result = PosregNode.new(val[2].to_i) 
    result
end

def _reduce_101(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_102(val, _values, result)
 result = CommentNode.new(val[0]) 
    result
end

def _reduce_103(val, _values, result)
 result = TerminatorNode.new 
    result
end

def _reduce_104(val, _values, result)
 result = val[0] 
    result
end

def _reduce_105(val, _values, result)
 result = TerminatorNode.new 
    result
end

# reduce 106 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module TPPlus
