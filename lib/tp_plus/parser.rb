#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module TPPlus
  class Parser < Racc::Parser


  include TPPlus::Nodes

  attr_reader :interpreter
  def initialize(scanner, interpreter = TPPlus::Interpreter.new)
    @scanner       = scanner
    @interpreter   = interpreter
    super()
  end

  def next_token
    t = @scanner.next_token
    @interpreter.line_count += 1 if t == [:NEWLINE,"\n"]

    puts t.inspect
    t
  end

  def parse
    do_parse
    @interpreter
  rescue Racc::ParseError => e
    raise "Parse error on line #{@interpreter.line_count+1}: #{e}"
  end
##### State transition tables begin ###

racc_action_table = [
    31,    21,    24,    16,    15,    15,   123,    21,    24,    16,
    15,   -33,   100,    20,   -33,    21,    24,    16,    15,    20,
    25,    24,   -31,    14,   155,   -31,    25,    20,    44,    14,
    21,    45,    16,    15,    25,    24,   105,    14,    24,    25,
    17,    99,    20,    18,    23,    30,    17,   101,   -32,    18,
    23,   -32,    14,    25,    17,    95,    25,    18,    23,    21,
    24,    16,    15,   105,    21,    24,    16,    15,   110,    17,
    94,    20,    18,    23,    80,    81,    20,    92,    25,    69,
    82,    14,   114,    25,    97,    98,    14,    74,    75,    78,
    79,    76,    77,    80,    81,   115,    48,   116,    17,    82,
   117,    18,    23,    17,    49,    50,    18,    23,   136,    42,
    41,    33,   133,   134,   135,    84,    85,    86,    88,   118,
    87,    84,    85,    86,    88,   119,    87,    68,    66,    67,
    64,    52,    65,    42,    41,    33,    42,    41,    33,    42,
    41,    33,    42,    41,    33,    42,    41,    33,    42,    41,
    33,    42,    41,    33,    42,    41,    33,    42,    41,    33,
    42,    41,    33,    42,    41,    33,    42,    41,    33,    42,
    41,    33,    42,    41,    33,    42,    41,    51,    47,   121,
    33,   103,   124,   125,   126,   127,   128,   131,   131,    46,
   137,   138,   139,   140,   102,    34,    33,    33,   150,   151,
   152,   153,   154,    27,    30,   159 ]

racc_action_check = [
    14,     4,     4,     4,     4,   154,   114,    35,    35,    35,
    35,     9,    65,     4,     9,    43,    43,    43,    43,    35,
     4,    70,     8,     4,   154,     8,    35,    43,    19,    35,
    28,    19,    28,    28,    43,    29,    71,    43,     2,    70,
     4,    64,    28,     4,     4,    14,    35,    66,     6,    35,
    35,     6,    28,    29,    43,    50,     2,    43,    43,     0,
     0,     0,     0,    89,   105,   105,   105,   105,    92,    28,
    49,     0,    28,    28,   106,   106,   105,    46,     0,    34,
   106,     0,    99,   105,    54,    54,   105,    36,    36,    36,
    36,    36,    36,    36,    36,   100,    22,   101,     0,    36,
   102,     0,     0,   105,    22,    22,   105,   105,   131,    44,
    44,    44,   131,   131,   131,   107,   107,   107,   107,   103,
   107,    37,    37,    37,    37,   104,    37,    31,    31,    31,
    31,    27,    31,    30,    30,    30,    18,    18,    18,    17,
    17,    17,   138,   138,   138,    98,    98,    98,    45,    45,
    45,    95,    95,    95,    48,    48,    48,    94,    94,    94,
    83,    83,    83,    51,    51,    51,   140,   140,   140,    72,
    72,    72,    73,    73,    73,   137,   137,    23,    21,   109,
   110,    68,   115,   116,   117,   118,   122,   128,   129,    20,
   133,   134,   135,   136,    67,    16,   139,    15,   141,   142,
   143,   146,   147,     1,   155,   156 ]

racc_action_pointer = [
    56,   203,    34,   nil,    -2,   nil,     6,   nil,   -20,   -31,
   nil,   nil,   nil,   nil,    -2,   172,   192,   116,   113,   -14,
   173,   153,    70,   151,   nil,   nil,   nil,   131,    27,    31,
   110,   119,   nil,   nil,    54,     4,    59,    85,   nil,   nil,
   nil,   nil,   nil,    12,    86,   125,    60,   nil,   131,    44,
    29,   140,   nil,   nil,    36,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    -9,   -38,    -3,   144,   131,   nil,
    17,    -7,   146,   149,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   137,   nil,   nil,   nil,   nil,   nil,    20,
   nil,   nil,    21,   nil,   134,   128,   nil,   nil,   122,    58,
    71,    73,    76,    95,    81,    61,    40,    79,   nil,   135,
   155,   nil,   nil,   nil,   -45,   131,   132,   133,   134,   nil,
   nil,   nil,   138,   nil,   nil,   nil,   nil,   nil,   171,   172,
   nil,    94,   nil,   143,   144,   145,   146,   152,   119,   171,
   143,   150,   172,   152,   nil,   nil,   153,   153,   nil,   nil,
   nil,   nil,   nil,   nil,    -1,   157,   157,   nil,   nil,   nil ]

racc_action_default = [
    -1,   -94,    -2,    -3,    -7,   -10,   -11,   -12,   -13,   -14,
   -15,   -16,   -17,   -18,   -56,   -94,   -94,   -94,   -94,   -94,
   -94,   -94,   -94,   -94,   -91,   -92,   -93,   -94,    -5,    -6,
   -22,   -94,   -25,   -56,   -94,    -8,   -57,   -59,   -61,   -77,
   -78,   -79,   -80,    -8,   -94,   -94,   -94,   -50,   -94,   -94,
   -94,   -94,   160,    -4,   -94,   -20,   -23,   -24,   -51,   -81,
   -82,   -83,   -84,   -85,   -94,   -94,   -94,   -94,   -94,   -26,
    -9,   -35,   -94,   -94,   -63,   -64,   -65,   -66,   -67,   -68,
   -69,   -70,   -71,   -94,   -72,   -73,   -74,   -75,   -76,   -35,
   -29,   -30,   -94,   -52,   -94,   -94,   -55,   -19,   -94,   -94,
   -94,   -94,   -94,   -94,   -94,    -8,   -58,   -60,   -62,   -94,
   -94,   -53,   -54,   -21,   -94,   -94,   -94,   -94,   -94,   -27,
   -34,   -28,   -94,   -86,   -87,   -88,   -89,   -90,   -94,   -36,
   -37,   -94,   -38,   -94,   -94,   -94,   -94,   -94,   -94,   -94,
   -94,   -94,   -94,   -94,   -43,   -44,   -94,   -94,   -47,   -48,
   -39,   -49,   -40,   -41,   -94,   -94,   -94,   -45,   -46,   -42 ]

racc_goto_table = [
    22,    56,    71,    55,    22,    35,    43,    28,   104,     2,
    89,   130,   132,    29,     1,    32,   157,   158,    53,   129,
    54,   141,   143,   147,   156,    58,   109,   106,    22,    72,
    57,   107,    90,    91,    28,    22,    93,   108,    59,    96,
    60,    61,    62,    22,    63,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    56,
   nil,   113,   120,   nil,   nil,    28,   nil,   nil,   nil,   nil,
   nil,   nil,   111,   112,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,
   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   142,   144,
   122,   149,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   145,   146,
   148 ]

racc_goto_check = [
    18,    17,     5,    16,    18,    19,    19,     4,    20,     2,
     5,    23,    23,     2,     1,    18,    14,    10,     3,    22,
    15,    24,    25,    26,    27,    28,    20,    29,    18,    30,
    18,    31,    19,    19,     4,    18,    19,    33,    35,    19,
    36,    37,    38,    18,    39,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,
   nil,    16,     5,   nil,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,    19,    19,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,    17,    17,
    18,    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,    18,
    18 ]

racc_goto_pointer = [
   nil,    14,     9,   -10,     5,   -33,   nil,   nil,   nil,   nil,
  -137,   nil,   nil,   nil,  -138,   -10,   -27,   -29,     0,   -12,
   -63,   nil,  -109,  -117,  -116,  -116,  -117,  -130,    -6,   -45,
    -7,   -42,   nil,   -46,   nil,     7,     9,    10,    11,    13,
   nil ]

racc_goto_default = [
   nil,   nil,    70,     3,     4,   nil,     5,     6,     7,     8,
     9,    10,    11,    12,    13,   nil,   nil,    39,    40,   nil,
   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    36,
   nil,    37,    73,    38,    83,   nil,   nil,   nil,   nil,   nil,
    26 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 53, :_reduce_none,
  1, 53, :_reduce_2,
  1, 54, :_reduce_3,
  3, 54, :_reduce_4,
  2, 54, :_reduce_5,
  2, 54, :_reduce_6,
  1, 54, :_reduce_7,
  0, 57, :_reduce_none,
  1, 57, :_reduce_9,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  4, 66, :_reduce_19,
  1, 67, :_reduce_20,
  3, 67, :_reduce_21,
  0, 67, :_reduce_22,
  1, 68, :_reduce_none,
  1, 68, :_reduce_none,
  2, 62, :_reduce_25,
  3, 61, :_reduce_26,
  5, 64, :_reduce_27,
  5, 64, :_reduce_28,
  3, 65, :_reduce_29,
  3, 65, :_reduce_30,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  2, 72, :_reduce_34,
  0, 72, :_reduce_none,
  7, 60, :_reduce_36,
  1, 74, :_reduce_37,
  2, 74, :_reduce_38,
  5, 75, :_reduce_39,
  5, 75, :_reduce_40,
  5, 75, :_reduce_41,
  7, 75, :_reduce_42,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  2, 76, :_reduce_49,
  2, 63, :_reduce_50,
  3, 58, :_reduce_51,
  3, 59, :_reduce_52,
  4, 59, :_reduce_53,
  4, 59, :_reduce_54,
  3, 59, :_reduce_55,
  1, 70, :_reduce_56,
  1, 71, :_reduce_57,
  3, 71, :_reduce_58,
  1, 81, :_reduce_59,
  3, 81, :_reduce_60,
  1, 83, :_reduce_none,
  3, 83, :_reduce_62,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 69, :_reduce_79,
  1, 69, :_reduce_80,
  1, 80, :_reduce_none,
  1, 80, :_reduce_none,
  1, 80, :_reduce_none,
  1, 80, :_reduce_none,
  1, 80, :_reduce_none,
  4, 91, :_reduce_86,
  4, 90, :_reduce_87,
  4, 87, :_reduce_88,
  4, 89, :_reduce_89,
  4, 88, :_reduce_90,
  1, 92, :_reduce_91,
  1, 56, :_reduce_92,
  1, 56, :_reduce_93 ]

racc_reduce_n = 94

racc_shift_n = 160

racc_token_table = {
  false => 0,
  :error => 1,
  :ASSIGN => 2,
  :AT_SYM => 3,
  :COMMENT => 4,
  :JUMP => 5,
  :IO_METHOD => 6,
  :INPUT => 7,
  :OUTPUT => 8,
  :NUMREG => 9,
  :POSREG => 10,
  :VREG => 11,
  :SREG => 12,
  :POSITION => 13,
  :TIME_SEGMENT => 14,
  :MOVE => 15,
  :DOT => 16,
  :TO => 17,
  :AT => 18,
  :TERM => 19,
  :OFFSET => 20,
  :SEMICOLON => 21,
  :NEWLINE => 22,
  :REAL => 23,
  :DIGIT => 24,
  :WORD => 25,
  :EQUAL => 26,
  :UNITS => 27,
  :EEQUAL => 28,
  :NOTEQUAL => 29,
  :GTE => 30,
  :LTE => 31,
  :LT => 32,
  :GT => 33,
  :PLUS => 34,
  :MINUS => 35,
  :STAR => 36,
  :SLASH => 37,
  :DIV => 38,
  :AND => 39,
  :OR => 40,
  :MOD => 41,
  :IF => 42,
  :ELSE => 43,
  :END => 44,
  :UNLESS => 45,
  :FANUC_ASSIGNABLE => 46,
  "(" => 47,
  ")" => 48,
  "," => 49,
  "[" => 50,
  "]" => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ASSIGN",
  "AT_SYM",
  "COMMENT",
  "JUMP",
  "IO_METHOD",
  "INPUT",
  "OUTPUT",
  "NUMREG",
  "POSREG",
  "VREG",
  "SREG",
  "POSITION",
  "TIME_SEGMENT",
  "MOVE",
  "DOT",
  "TO",
  "AT",
  "TERM",
  "OFFSET",
  "SEMICOLON",
  "NEWLINE",
  "REAL",
  "DIGIT",
  "WORD",
  "EQUAL",
  "UNITS",
  "EEQUAL",
  "NOTEQUAL",
  "GTE",
  "LTE",
  "LT",
  "GT",
  "PLUS",
  "MINUS",
  "STAR",
  "SLASH",
  "DIV",
  "AND",
  "OR",
  "MOD",
  "IF",
  "ELSE",
  "END",
  "UNLESS",
  "FANUC_ASSIGNABLE",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "program",
  "statements",
  "statement",
  "terminator",
  "block",
  "definition",
  "assignment",
  "motion_statement",
  "jump",
  "io_method",
  "label_definition",
  "conditional",
  "inline_conditional",
  "program_call",
  "args",
  "arg",
  "number",
  "var",
  "expression",
  "else_block",
  "inlineable",
  "motion_modifiers",
  "motion_modifier",
  "speed",
  "indirectable",
  "time",
  "time_seg_actions",
  "definable",
  "simple_expression",
  "relop",
  "term",
  "addop",
  "factor",
  "mulop",
  "numreg",
  "output",
  "posreg",
  "position",
  "vreg",
  "comment" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 @interpreter.nodes = val[0].flatten 
    result
end

def _reduce_3(val, _values, result)
 result = val 
    result
end

def _reduce_4(val, _values, result)
 result = val[0] << val[1] << val[2] 
    result
end

def _reduce_5(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_6(val, _values, result)
 result = [val[0]] << val[1] 
    result
end

def _reduce_7(val, _values, result)
 result = [val[0]] 
    result
end

# reduce 8 omitted

def _reduce_9(val, _values, result)
 result = val[0] 
    result
end

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

def _reduce_19(val, _values, result)
 result = CallNode.new(val[0],val[2]) 
    result
end

def _reduce_20(val, _values, result)
 result = [val[0]] 
    result
end

def _reduce_21(val, _values, result)
 result = val[0] << val[2] 
    result
end

def _reduce_22(val, _values, result)
 result = [] 
    result
end

# reduce 23 omitted

# reduce 24 omitted

def _reduce_25(val, _values, result)
 result = IOMethodNode.new(val[0],val[1]) 
    result
end

def _reduce_26(val, _values, result)
 result = JumpNode.new(val[2]) 
    result
end

def _reduce_27(val, _values, result)
 result = ConditionalNode.new("if",val[1],val[2],val[3]) 
    result
end

def _reduce_28(val, _values, result)
 result = ConditionalNode.new("unless",val[1],val[2],val[3]) 
    result
end

def _reduce_29(val, _values, result)
 result = InlineConditionalNode.new("if",val[2],val[0]) 
    result
end

def _reduce_30(val, _values, result)
 result = InlineConditionalNode.new("unless",val[2],val[0]) 
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
 result = val[1] 
    result
end

# reduce 35 omitted

def _reduce_36(val, _values, result)
 result = MotionNode.new(val[0],val[4],val[6]) 
    result
end

def _reduce_37(val, _values, result)
 result = val 
    result
end

def _reduce_38(val, _values, result)
 result = val[0] << val[1] 
    result
end

def _reduce_39(val, _values, result)
 result = SpeedNode.new(val[3]) 
    result
end

def _reduce_40(val, _values, result)
 result = TerminationNode.new(val[3]) 
    result
end

def _reduce_41(val, _values, result)
 result = OffsetNode.new(val[3]) 
    result
end

def _reduce_42(val, _values, result)
 result = TimeNode.new(val[1],val[3],val[5]) 
    result
end

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

def _reduce_49(val, _values, result)
 result = [val[0],UnitsNode.new(val[1])] 
    result
end

def _reduce_50(val, _values, result)
 result = LabelDefinitionNode.new(val[1]) 
    result
end

def _reduce_51(val, _values, result)
 result = DefinitionNode.new(val[0],val[2]) 
    result
end

def _reduce_52(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_53(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_54(val, _values, result)
 result = AssignmentNode.new(
                                           val[0],
                                           ExpressionNode.new(val[0],val[1],val[3])
                                         )
                                       
    result
end

def _reduce_55(val, _values, result)
 result = AssignmentNode.new(val[0],val[2]) 
    result
end

def _reduce_56(val, _values, result)
 result = VarNode.new(val[0]) 
    result
end

def _reduce_57(val, _values, result)
 result = val[0] 
    result
end

def _reduce_58(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

def _reduce_59(val, _values, result)
 result = val[0] 
    result
end

def _reduce_60(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 61 omitted

def _reduce_62(val, _values, result)
 result = ExpressionNode.new(val[0],val[1],val[2]) 
    result
end

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

def _reduce_79(val, _values, result)
 result = DigitNode.new(val[0]) 
    result
end

def _reduce_80(val, _values, result)
 result = RealNode.new(val[0]) 
    result
end

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

def _reduce_86(val, _values, result)
 result = VisionRegisterNode.new(val[2].to_i) 
    result
end

def _reduce_87(val, _values, result)
 result = PositionNode.new(val[2].to_i) 
    result
end

def _reduce_88(val, _values, result)
 result = NumregNode.new(val[2].to_i) 
    result
end

def _reduce_89(val, _values, result)
 result = PosregNode.new(val[2].to_i) 
    result
end

def _reduce_90(val, _values, result)
 result = IONode.new(val[0], val[2].to_i) 
    result
end

def _reduce_91(val, _values, result)
 result = CommentNode.new(val[0]) 
    result
end

def _reduce_92(val, _values, result)
 result = TerminatorNode.new 
    result
end

def _reduce_93(val, _values, result)
 result = val[0] 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module TPPlus
